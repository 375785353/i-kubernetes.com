{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2 - \u5c0f\u6162\u54e5Linux \u00b6 \u672c\u6587\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b3\u4e2a\u90e8\u5206 mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9 markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548cmkdocs-material\u652f\u6301\u7684\u6269\u5c55\u8bed\u6cd5 mkdocs-material\u6240\u652f\u6301\u7684\u5404\u79cd\u6269\u5c55","title":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2 - \u5c0f\u6162\u54e5Linux"},{"location":"#mkdocs-material-linux","text":"\u672c\u6587\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b3\u4e2a\u90e8\u5206 mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9 markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548cmkdocs-material\u652f\u6301\u7684\u6269\u5c55\u8bed\u6cd5 mkdocs-material\u6240\u652f\u6301\u7684\u5404\u79cd\u6269\u5c55","title":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2 - \u5c0f\u6162\u54e5Linux"},{"location":"jenkins/notify/","text":"\u9489\u9489\u811a\u672c \u00b6 #!/usr/local/python-3.6/bin/python3.6 #\u9489\u9489\u53d1\u7248\u901a\u77e5\u811a\u672c import json,requests,sys,time,datetime #[\u5de5\u7a0b\u540d\u3001\u5206\u652f\u53f7\u3001\u662f\u5426\u6210\u529f\u3001\u7f16\u53f7] job = sys.argv[1] branch = sys.argv[2] stat = sys.argv[3] bianhao = sys.argv[4] user_name = sys.argv[5] if int(stat) == 0: name = '\u53d1\u5e03\u6210\u529f\uff01' tupian = '![file](https://gd-prod-private.oss-cn-beijing.aliyuncs.com/yw/QQ%E6%88%AA%E5%9B%BE20201109153327.png)' elif int(stat) == 1: name = '\u53d1\u5e03\u5931\u8d25\uff01' tupian = '![file](https://gd-prod-private.oss-cn-beijing.aliyuncs.com/yw/QQ%E6%88%AA%E5%9B%BE20201109163201.png)' url = \"https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxxxxxxxxxxxxxxx\" title = job + name nowtime = datetime.datetime.now() nowtime = str(nowtime.strftime('%Y-%m-%d %H:%M:%S')) msg = \"\"\"### %s \\n > \u65f6\u95f4: %s \\n > \u5206\u652f: %s \\n > \u63d0\u4ea4\u4eba\uff1a%s \\n > \u7f16\u53f7: #%s \\n > \u5730\u5740: [\u5de5\u7a0b\u94fe\u63a5](http://1.1.1.1:8080/job/%s) \\n %s \"\"\" def Alert(): headers = {\"Content-Type\": \"application/json\"} data = {\"msgtype\": \"markdown\", \"markdown\": { \"title\": title, \"text\": msg %(title, nowtime, branch, user_name, bianhao, job, tupian) } } r = requests.post(url, data=json.dumps(data), headers=headers, verify=False) print(r.text) Alert() post { success { wrap ([$class: 'BuildUser']) { script { def user_user = env.BUILD_USER_ID currentBuild.description = \"executor is #${user_user}#\" } sh \"/data/jenkins_home/jenkins_work/jenkins_script/dingding.py ${JOB_NAME} ${BranchName} 0 ${BUILD_NUMBER} ${BUILD_USER}\" } } failure { wrap ([$class: 'BuildUser']) { sh \"/data/jenkins_home/jenkins_work/jenkins_script/dingding.py ${JOB_NAME} ${BranchName} 1 ${BUILD_NUMBER} ${BUILD_USER}\" } } }","title":"Notify"},{"location":"jenkins/notify/#_1","text":"#!/usr/local/python-3.6/bin/python3.6 #\u9489\u9489\u53d1\u7248\u901a\u77e5\u811a\u672c import json,requests,sys,time,datetime #[\u5de5\u7a0b\u540d\u3001\u5206\u652f\u53f7\u3001\u662f\u5426\u6210\u529f\u3001\u7f16\u53f7] job = sys.argv[1] branch = sys.argv[2] stat = sys.argv[3] bianhao = sys.argv[4] user_name = sys.argv[5] if int(stat) == 0: name = '\u53d1\u5e03\u6210\u529f\uff01' tupian = '![file](https://gd-prod-private.oss-cn-beijing.aliyuncs.com/yw/QQ%E6%88%AA%E5%9B%BE20201109153327.png)' elif int(stat) == 1: name = '\u53d1\u5e03\u5931\u8d25\uff01' tupian = '![file](https://gd-prod-private.oss-cn-beijing.aliyuncs.com/yw/QQ%E6%88%AA%E5%9B%BE20201109163201.png)' url = \"https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxxxxxxxxxxxxxxx\" title = job + name nowtime = datetime.datetime.now() nowtime = str(nowtime.strftime('%Y-%m-%d %H:%M:%S')) msg = \"\"\"### %s \\n > \u65f6\u95f4: %s \\n > \u5206\u652f: %s \\n > \u63d0\u4ea4\u4eba\uff1a%s \\n > \u7f16\u53f7: #%s \\n > \u5730\u5740: [\u5de5\u7a0b\u94fe\u63a5](http://1.1.1.1:8080/job/%s) \\n %s \"\"\" def Alert(): headers = {\"Content-Type\": \"application/json\"} data = {\"msgtype\": \"markdown\", \"markdown\": { \"title\": title, \"text\": msg %(title, nowtime, branch, user_name, bianhao, job, tupian) } } r = requests.post(url, data=json.dumps(data), headers=headers, verify=False) print(r.text) Alert() post { success { wrap ([$class: 'BuildUser']) { script { def user_user = env.BUILD_USER_ID currentBuild.description = \"executor is #${user_user}#\" } sh \"/data/jenkins_home/jenkins_work/jenkins_script/dingding.py ${JOB_NAME} ${BranchName} 0 ${BUILD_NUMBER} ${BUILD_USER}\" } } failure { wrap ([$class: 'BuildUser']) { sh \"/data/jenkins_home/jenkins_work/jenkins_script/dingding.py ${JOB_NAME} ${BranchName} 1 ${BUILD_NUMBER} ${BUILD_USER}\" } } }","title":"\u9489\u9489\u811a\u672c"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/","text":"cobbler\u7b80\u4ecb \u00b6 1\u3001Cobbler\u662f\u4e00\u4e2aLinux\u670d\u52a1\u5668\u5b89\u88c5\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u542f\u52a8\uff08PXE\uff09\u7684\u65b9\u5f0f\u6765\u5feb\u901f\u5b89\u88c5\u3001\u91cd\u88c5\u7269\u7406\u670d\u52a1\u5668\u548c\u865a\u62df\u673a\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u7ba1\u7406DHCP\uff0cDNS\u7b49\u3002 2\u3001Cobbler\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u65b9\u5f0f\u7ba1\u7406\uff0c\u4e5f\u63d0\u4f9b\u4e86\u57fa\u4e8eWeb\u7684\u754c\u9762\u7ba1\u7406\u5de5\u5177\uff08cobbler-web\uff09\uff0c\u8fd8\u63d0\u4f9b\u4e86API\u63a5\u53e3\uff0c\u53ef\u4ee5\u65b9\u4fbf\u4e8c\u6b21\u5f00\u53d1\u4f7f\u7528\u3002 3\u3001Cobbler\u662f\u8f83\u65e9\u524d\u7684kickstart\u7684\u5347\u7ea7\u7248\uff0c\u4f18\u70b9\u662f\u6bd4\u8f83\u5bb9\u6613\u914d\u7f6e\uff0c\u8fd8\u81ea\u5e26web\u754c\u9762\u6bd4\u8f83\u6613\u4e8e\u7ba1\u7406\u3002 4\u3001Cobbler\u5185\u7f6e\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f46\u5b83\u4e5f\u652f\u6301\u548c\u5176\u5b83\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf\u96c6\u6210\uff0c\u5982Puppet\u3002 cobbler\u5bf9\u5e94\u5173\u7cfb \u00b6 Cobbler\u7684\u914d\u7f6e\u7ed3\u6784\u57fa\u4e8e\u4e00\u7ec4\u6ce8\u518c\u7684\u5bf9\u8c61\u3002\u6bcf\u4e2a\u5bf9\u8c61\u8868\u793a\u4e00\u4e2a\u4e0e\u53e6\u4e00\u4e2a\u5b9e\u4f53\u76f8\u5173\u8054\u7684\u5b9e\u4f53\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6307\u5411\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5b83\u5c31\u7ee7\u627f\u4e86\u88ab\u6307\u5411\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u5e76\u53ef\u8986\u76d6\u6216\u6dfb\u52a0\u66f4\u591a\u7279\u5b9a\u4fe1\u606f\u3002 \u53d1\u884c\u7248( distros )\uff1a \u8868\u793a\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b83\u627f\u8f7d\u4e86\u5185\u6838\u548cinitrd\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u5185\u6838\u53c2\u6570\u7b49\u5176\u4ed6\u6570\u636e\u3002 \u914d\u7f6e\u6587\u4ef6( profiles )\uff1a\u5305\u542b\u4e00\u4e2a\u53d1\u884c\u7248\u3001\u4e00\u4e2akickstart\u6587\u4ef6\u4ee5\u53ca\u53ef\u80fd\u7684\u5b58\u50a8\u5e93\uff0c\u8fd8\u5305\u62ec\u66f4\u591a\u7279\u5b9a\u7684\u5185\u6838\u53c2\u6570\u7b49\u5176\u4ed6\u6570\u636e\u3002 \u7cfb\u7edf( systems )\uff1a\u8868\u793a\u8981\u914d\u7ed9\u7684\u673a\u5668\u3002\u5b83\u5305\u62ec\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6216\u4e00\u4e2a\u955c\u50cf\u3001IP\u548cMAC\u5730\u5740\u3001\u7535\u6e90\u7ba1\u7406\uff08\u5730\u5740\u3001\u51ed\u636e\u3001\u7c7b\u578b\uff09\u4ee5\u53ca\u66f4\u4e3a\u4e13\u4e1a\u7684\u6570\u636e\u7b49\u4fe1\u606f\u3002 \u955c\u50cf( images )\uff1a\u53ef\u4ee5\u66ff\u6362\u4e00\u4e2a\u4fdd\u51fd\u4e0d\u5c51\u4e8e\u6b64\u7c7b\u522b\u7684\u6587\u4ef6\u7684\u53d1\u884c\u7248\u5bf9\u8c61\uff08\u4f8b\u5982\uff0c\u65e0\u6cd5\u5206\u4e3a\u5185\u6838\u548cinitrd\u7684\u5bf9\u8c61\uff09\u3002 cobbler\u96c6\u6210\u7684\u670d\u52a1 \u00b6 PXE\u670d\u52a1\u652f\u6301 DHCP\u670d\u52a1\u7ba1\u7406 DNS\u670d\u52a1\u7ba1\u7406 \u7535\u6e90\u7ba1\u7406 Kickstart\u670d\u52a1\u652f\u6301 YUM\u4ed3\u5e93\u7ba1\u7406 TFTP Apache cobbler\u5de5\u4f5c\u539f\u7406 \u00b6 Server\u7aef \u542f\u52a8Cobbler\u670d\u52a1 \u8fdb\u884cCobbler\u9519\u8bef\u68c0\u67e5\uff0c\u6267\u884ccobbler check\u547d\u4ee4 \u8fdb\u884c\u914d\u7f6e\u540c\u6b65\uff0c\u6267\u884ccobbler sync\u547d\u4ee4 \u590d\u5236\u76f8\u5173\u542f\u52a8\u6587\u4ef6\u5230TFTP\u76ee\u5f55\u4e2d \u542f\u52a8DHCP\u670d\u52a1\uff0c\u63d0\u4f9b\u5730\u5740\u5206\u914d DHCP\u670d\u52a1\u5206\u914dIP\u5730\u5740 TFTP\u4f20\u8f93\u542f\u52a8\u6587\u4ef6 Server\u7aef\u63a5\u6536\u5b89\u88c5\u4fe1\u606f Server\u7aef\u53d1\u9001ISO\u955c\u50cf\u4e0eKickstart\u6587\u4ef6 Client\u7aef \u5ba2\u6237\u7aef\u4ee5PXE\u6a21\u5f0f\u542f\u52a8 \u5ba2\u6237\u7aef\u83b7\u53d6IP\u5730\u5740 \u901a\u8fc7TFTP\u670d\u52a1\u5668\u83b7\u53d6\u542f\u52a8\u6587\u4ef6 \u8fdb\u5165Cobbler\u5b89\u88c5\u9009\u62e9\u754c\u9762 \u6839\u636e\u914d\u7f6e\u4fe1\u606f\u51c6\u5907\u5b89\u88c5\u7cfb\u7edf \u52a0\u8f7dKickstart\u6587\u4ef6 \u4f20\u8f93\u7cfb\u7edf\u5b89\u88c5\u7684\u5176\u5b83\u6587\u4ef6 \u8fdb\u884c\u5b89\u88c5\u7cfb\u7edf cobbler\u5b89\u88c5 \u00b6 \u8bf4\u660e \u865a\u62df\u673a\u7f51\u5361\u91c7\u7528NAT\u6a21\u5f0f\u6216\u8005\u4ec5\u4e3b\u673a\u6a21\u5f0f\uff0c\u4e0d\u8981\u4f7f\u7528\u6865\u63a5\u6a21\u5f0f\uff0c\u56e0\u4e3a\u540e\u9762\u4f1a\u642d\u5efaDHCP\u670d\u52a1\u5668\uff0c\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u591a\u4e2aDHCP\u670d\u52a1\u4f1a\u6709\u51b2\u7a81\u3002 VMware\u7684NAT\u6a21\u5f0f\u7684dhcp\u670d\u52a1\u4e5f\u5173\u95ed\uff0c\u907f\u514d\u5e72\u6270\u3002 \u73af\u5883\u51c6\u5907 \u00b6 \u5173\u95ed\u9632\u706b\u5899\u3001selinux\u7b49 [root@cobbler ~]# systemctl stop firewalld [root@cobbler ~]# systemctl disable firewalld [root@cobbler ~]# setenforce 0 [root@cobbler ~]# sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux \u5b89\u88c5cobbler \u00b6 \u914d\u7f6eepel\u6e90 [root@cobbler ~]# yum -y install epel-release # \u5b89\u88c5cobbler\u53cadhcp httpd xinetd cobbler-web [root@cobbler ~]# yum -y install cobbler cobbler-web tftp-server dhcp httpd xinetd # \u542f\u52a8cobbler\u53cahttpd\u5e76\u52a0\u5165\u5f00\u673a\u542f\u52a8 [root@cobbler ~]# systemctl start httpd cobblerd [root@cobbler ~]# systemctl enable httpd cobblerd \u67e5\u770b\u5b89\u88c5\u540e\u76f8\u5173\u6587\u4ef6 [root@cobbler ~]# rpm -ql cobbler /etc/cobbler # \u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/settings # cobbler\u4e3b\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662fYAML\u683c\u5f0f\uff0cCobbler\u662fpython\u5199\u7684\u7a0b\u5e8f\u3002 /etc/cobbler/dhcp.template # DHCP\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/tftpd.template # tftp\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/rsync.template # rsync\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/iso # iso\u6a21\u677f\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/pxe # pxe\u6a21\u677f\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/power # \u7535\u6e90\u7684\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/users.conf # Web\u670d\u52a1\u6388\u6743\u914d\u7f6e\u6587\u4ef6 /etc/cobbler/users.digest # \u7528\u4e8eweb\u8bbf\u95ee\u7684\u7528\u6237\u540d\u5bc6\u7801\u914d\u7f6e\u6587\u4ef6 /etc/cobbler/dnsmasq.template # DNS\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/modules.conf # Cobbler\u6a21\u5757\u914d\u7f6e\u6587\u4ef6 /var/lib/cobbler # Cobbler\u6570\u636e\u76ee\u5f55 /var/lib/cobbler/config # \u914d\u7f6e\u6587\u4ef6 /var/lib/cobbler/kickstarts # \u9ed8\u8ba4\u5b58\u653ekickstart\u6587\u4ef6 /var/lib/cobbler/loaders # \u5b58\u653e\u7684\u5404\u79cd\u5f15\u5bfc\u7a0b\u5e8f /var/www/cobbler # \u7cfb\u7edf\u5b89\u88c5\u955c\u50cf\u76ee\u5f55 /var/www/cobbler/ks_mirror # \u5bfc\u5165\u7684\u7cfb\u7edf\u955c\u50cf\u5217\u8868 /var/www/cobbler/images # \u5bfc\u5165\u7684\u7cfb\u7edf\u955c\u50cf\u542f\u52a8\u6587\u4ef6 /var/www/cobbler/repo_mirror # yum\u6e90\u5b58\u50a8\u76ee\u5f55 /var/log/cobbler # \u65e5\u5fd7\u76ee\u5f55 /var/log/cobbler/install.log # \u5ba2\u6237\u7aef\u7cfb\u7edf\u5b89\u88c5\u65e5\u5fd7 /var/log/cobbler/cobbler.log # cobbler\u65e5\u5fd7 \u914d\u7f6ecobbler \u00b6 \u68c0\u67e5Cobbler\u7684\u914d\u7f6e\uff0c\u5982\u679c\u770b\u4e0d\u5230\u4e0b\u9762\u7684\u95ee\u9898\uff0c\u518d\u6b21\u91cd\u542fcobbler [root@cobbler ~]# cobbler check The following are potential configuration items that you may want to fix: 1 : The 'server' field in /etc/cobbler/settings must be set to something other than localhost, or kickstarting features will not work. This should be a resolvable hostname or IP for the boot server as reachable by all machines that will use it. 2 : For PXE to be functional, the 'next_server' field in /etc/cobbler/settings must be set to something other than 127.0.0.1, and should match the IP of the boot server on the PXE network. 3 : change 'disable' to 'no' in /etc/xinetd.d/tftp 4 : Some network boot-loaders are missing from /var/lib/cobbler/loaders, you may run 'cobbler get-loaders' to download them, or, if you only want to handle x86/x86_64 netbooting, you may ensure that you have installed a *recent* version of the syslinux package installed and can ignore this message entirely. Files in this directory, should you want to support all architectures, should include pxelinux.0, menu.c32, elilo.efi, and yaboot. The 'cobbler get-loaders' command is the easiest way to resolve these requirements. 5 : enable and start rsyncd.service with systemctl 6 : debmirror package is not installed, it will be required to manage debian deployments and repositories 7 : ksvalidator was not found, install pykickstart 8 : The default password used by the sample templates for newly installed machines (default_password_crypted in /etc/cobbler/settings) is still set to 'cobbler' and should be changed, try: \"openssl passwd -1 -salt 'random-phrase-here' 'your-password-here'\" to generate new one 9 : fencing tools were not found, and are required to use the (optional) power management features. install cman or fence-agents to use them Restart cobblerd and then run 'cobbler sync' to apply changes. \u770b\u5230\u4e0a\u9762\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u7684\u8fdb\u884c\u89e3\u51b3\uff0c\u5148\u8fdb\u884c\u8bbe\u7f6e\u4e3a\u53ef\u4ee5\u52a8\u6001\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\u3002 # \u8bbe\u7f6e\u53ef\u4ee5\u52a8\u6001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 [root@cobbler ~]# sed -ri '/allow_dynamic_settings:/c\\allow_dynamic_settings: 1' /etc/cobbler/settings [root@cobbler ~]# grep allow_dynamic_settings /etc/cobbler/settings allow_dynamic_settings: 1 [root@cobbler ~]# systemctl restart cobblerd \u9010\u4e2a\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898 1. server [root@cobbler ~]# cobbler setting edit --name=server --value=192.168.2.128 2. next_server [root@cobbler ~]# cobbler setting edit --name=next_server --value=192.168.2.128 3. tftp_server [root@cobbler ~]# sed -ri '/disable/c\\disable = no' /etc/xinetd.d/tftp [root@cobbler ~]# systemctl enable xinetd [root@cobbler ~]# systemctl restart xinetd 4. boot-loaders [root@cobbler ~]# cobbler get-loaders 5. rsyncd [root@cobbler ~]# systemctl start rsyncd [root@cobbler ~]# systemctl enable rsyncd 6. debmirror [optional] # \u8fd9\u4e2a\u662f\u53ef\u9009\u9879\u7684\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002\u5982\u679c\u5b89\u88c5Ubuntu\uff0c\u6b64\u6b65\u9aa4\u4e3a\u5fc5\u8981\u6b65\u9aa4\u3002 yum install -y debmirror sed -i 's%^@dists=\"sid\"%#@dists=\"sid\"%g;s%@arches=\"i386\"%#@arches=\"i386\"%g' /etc/debmirror.conf //PXE\u5b89\u88c5ubuntu\u5fc5\u987b\u6b65\u9aa4 7. pykickstart [root@cobbler ~]# yum -y install pykickstart 8. default_password_crypted #\u6ce8\u610f\uff1a\u8fd9\u91cc\u8bbe\u7f6e\u7684\u5bc6\u7801\uff0c\u4e5f\u5c31\u662f\u540e\u9762\u5b89\u88c5\u5b8c\u7cfb\u7edf\u7684\u521d\u59cb\u5316\u767b\u5f55\u5bc6\u7801 [root@cobbler ~]# openssl passwd -1 -salt `openssl rand -hex 4` 'admin' $1$675f1d08$oJoAMVxdbdKHjQXbGqNTX0 [root@cobbler ~]# cobbler setting edit --name=default_password_crypted --value='$1$675f1d08$oJoAMVxdbdKHjQXbGqNTX0' 9. fencing tools [optional] [root@cobbler ~]# yum -y install fence-agents \u6dfb\u52a0Ubuntu 20.04\u652f\u6301 vim /var/lib/cobbler/distro_signatures.json \"focal\": { \"signatures\": [ \"dists\", \".disk\" ], \"version_file\": \"Release|mini-info\", \"version_file_regex\": \"Codename: focal|Ubuntu 20.04\", \"kernel_arch\": \"linux-headers-(.*)\\\\.deb\", \"kernel_arch_regex\": null, \"supported_arches\": [ \"i386\", \"amd64\" ], \"supported_repo_breeds\": [ \"apt\" ], \"kernel_file\": \"linux(.*)\", \"initrd_file\": \"initrd(.*)\\\\.gz\", \"isolinux_ok\": false, \"default_kickstart\": \"/var/lib/cobbler/kickstarts/sample.seed\", \"kernel_options\": \"\", \"kernel_options_post\": \"\", \"boot_files\": [] } \u540c\u6b65cobbler\u914d\u7f6e cobbler sync systemctl restart cobblerd cobbler signature report --name=ubuntu //\u67e5\u770b\u53ef\u5b89\u88c5\u7684ubuntu\u7248\u672c cobbler\u547d\u4ee4\u5e2e\u52a9 \u00b6 \u547d\u4ee4 \u8bf4\u660e cobbler check \u6838\u5bf9\u5f53\u524d\u8bbe\u7f6e\u662f\u5426\u6709\u95ee\u9898 cobbler list \u5217\u51fa\u6240\u6709\u7684cobbler\u5143\u7d20 cobbler report \u5217\u51fa\u5143\u7d20\u7684\u8be6\u7ec6\u4fe1\u606f cobbler sync \u540c\u6b65\u914d\u7f6e\u5230\u6570\u636e\u76ee\u5f55\uff0c\u66f4\u6539\u914d\u7f6e\u6700\u597d\u90fd\u6267\u884c\u4e00\u4e0b cobbler reposync \u540c\u6b65yum\u4ed3\u5e93 cobbler distro \u67e5\u770b\u5bfc\u5165\u7684\u53d1\u884c\u7248\u7cfb\u7edf\u4fe1\u606f cobbler system \u67e5\u770b\u6dfb\u52a0\u7684\u7cfb\u7edf\u4fe1\u606f cobbler profile \u67e5\u770b\u914d\u7f6e\u4fe1\u606f cobbler signature report --name=ubuntu \u67e5\u770bubuntu\u7cfb\u5217\u652f\u6301\u7248\u672c cobbler signature update \u66f4\u65b0\u652f\u6301\u7684\u7cfb\u7edf\u7248\u672c cobbler\u914d\u7f6e\u5b89\u88c5Ubuntu \u00b6 1\uff09\u521b\u5efa\u6302\u8f7d\u70b9\uff0c\u5e76\u8fdb\u884c\u6302\u8f7d mkdir /ubuntu1804 mkdir /ubuntu2004 mount -o loop /dev/sr0/ubuntu-18.04.4-server-amd64.iso /ubuntu1804 mount -o loop /mnt/ubuntu-20.4-server-amd64.iso /ubuntu2004 2\uff09\u67e5\u770b\u6302\u8f7d\u540e\u7684\u76ee\u5f55 ls /ubuntu1804 ls /ubuntu2004 3\uff09\u5bfc\u5165\u955c\u50cf cobbler import --path=/ubuntu1804 --name=ubuntu1804 --arch=x86_64 cobbler import --path=/ubuntu2004 --name=ubuntu2004 --arch=x86_64 # --path \u955c\u50cf\u8def\u5f84 # --name \u4e3a\u5b89\u88c5\u6e90\u5b9a\u4e49\u4e00\u4e2a\u540d\u5b57 # --arch \u6307\u5b9a\u5b89\u88c5\u6e90\u662f32\u4f4d\u300164\u4f4d\u3001ia64, \u76ee\u524d\u652f\u6301\u7684\u9009\u9879\u6709: x86\u2502x86_64\u2502ia64 # \u5b89\u88c5\u6e90\u7684\u552f\u4e00\u6807\u793a\u5c31\u662f\u6839\u636ename\u53c2\u6570\u6765\u5b9a\u4e49\uff0c\u672c\u4f8b\u5bfc\u5165\u6210\u529f\u540e\uff0c\u5b89\u88c5\u6e90\u7684\u552f\u4e00\u6807\u793a\u5c31\u662f\uff1aubuntu2004\uff0c\u5982\u679c\u91cd\u590d\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u5bfc\u5165\u5931\u8d25 4\uff09\u67e5\u770b\u5bfc\u5165\u540e\u955c\u50cf\u4fe1\u606f cobbler list //\u67e5\u770b\u76ee\u524d\u53ef\u5b89\u88c5\u7684\u7248\u672c cobbler distro report --name=ubuntu1804-x86_64 cobbler distro report --name=ubuntu2004-x86_64 5\uff09\u67e5\u770bprofile\u4fe1\u606f \u53ef\u83b7\u53d6\u5230\u76f8\u5e94\u7248\u672c\u7684ks\u6587\u4ef6\u8def\u5f84 cobbler profile report --name=ubuntu1804-x86_64 cobbler profile report --name=ubuntu2004-x86_64 6\uff09\u521b\u5efaks\u6587\u4ef6 centos7 ks\u6587\u4ef6 cd /var/lib/cobbler/kickstarts cp sample_end.ks centos7.ks vim centos7.ks # Install OS instead of upgrade install # Use text mode install text # System keyboard keyboard us # System language lang en_US # System timezone timezone Asia/Shanghai # Root password rootpw --iscrypted $default_password_crypted # System authorization information auth --useshadow --enablemd5 # Firewall configuration firewall --disabled # SELinux configuration selinux --disabled # Use network installation url --url=$tree # Clear the Master Boot Record zerombr # System bootloader configuration bootloader --location=mbr # Partition clearing information clearpart --all --initlabel #Disk partitioning information part /boot --fstype ext4 --size 1024 --ondisk sda part swap --size 8192 --ondisk sda # Gluster Deploy enable heketidb brick1 # part /gfs/heketidb --fstype xfs --size 8192 --ondisk sda part / --fstype xfs --size 1 --grow --ondisk sda # Do not configure the X Window System skipx # Run the Setup Agent on first boot firstboot --disable # Reboot after installation reboot # Install core package %packages @core @base tree nmap wget lftp lrzsz telnet %end %post # Config ssh key mkdir /root/.ssh chmod 700 /root/.ssh cat > /root/.ssh/authorized_keys << EOF ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC516dGSIiwUqi/o+LHtYvRXmeKgkqgq8HLMoGpN68PRpLwauinxS1h9zCTpeJP0FA5bHaouloxltc9KJzKGdJzW4k+1nwJLjs2BApn8FpdPPG5/hAqf5XsUh1b72vOmxVg2yjBLQKwFG/244SO5z20HBTTMBtJOBH0umh4hW6wkbgcFVjgUnRIhgVEi9PyU96RRFtMUW4Eo45zHQOsty4vnC2rL0VWen7s/UxCsjf9Hkl/Avssm8ZsSqaysSRKg92PLpiRdUk29EBIofXrdSqEh6/Ac1k8gv/0WIWxsUpZHgCbSOkJ9RNx9SXhsKGB/ojFIYlDURg+TGURC/z1Hpkz jihui.dai@keystore.com EOF chmod 600 /root/.ssh/authorized_keys # Create scripts dir mkdir -p /opt/scripts # System update yum install -y wget net-tools bridge-utils yum update -y # Network config wget -O /tmp/network.sh http://$http_server/centos.sh bash /tmp/network.sh %end Ubuntu ks\u6587\u4ef6 cd /var/lib/cobbler/kickstarts/ cp sample.seed ubuntu2004.ks vim ubuntu2004.ks d-i debian-installer/locale string en_US d-i console-setup/ask_detect boolean false d-i keyboard-configuration/xkb-keymap select us d-i keyboard-configuration/toggle select No toggling d-i keyboard-configuration/layoutcode string us d-i keyboard-configuration/variantcode string d-i netcfg/choose_interface select auto d-i netcfg/get_hostname string $myhostname d-i time/zone string Asia/Shanghai d-i clock-setup/utc boolean true d-i clock-setup/ntp boolean true d-i clock-setup/ntp-server string ntp1.aliyun.com d-i mirror/country string manual d-i mirror/http/hostname string $http_server d-i mirror/http/directory string $install_source_directory d-i mirror/http/proxy string d-i live-installer/net-image string http://$http_server/cobbler/links/$distro_name/install/filesystem.squashfs d-i partman-auto/disk string /dev/sda d-i partman-auto/method string regular d-i partman-lvm/device_remove_lvm boolean true d-i partman-md/device_remove_md boolean true d-i partman-auto/expert_recipe string \\ boot-root-data :: \\ 1024 50 1024 ext4 \\ $primary{ } $bootable{ } \\ method{ format } format{ } \\ use_filesystem{ } filesystem{ ext4 } \\ mountpoint{ /boot } \\ . \\ 1024 100 1024 linux-swap \\ $primary{ } \\ method{ swap } format{ } \\ . \\ #4096 200 4096 xfs \\ #$primary{ } \\ #method{ format } format{ } \\ #use_filesystem{ } filesystem{ xfs } \\ #mountpoint{ /gfs/heketidb } \\ #. \\ 10240 1000 1000000000 xfs \\ $primary{ } \\ method{ format } format{ } \\ use_filesystem{ } filesystem{ xfs } \\ mountpoint{ / } \\ . d-i partman-auto/choose_recipe select boot-root-data d-i partman-partitioning/confirm_write_new_label boolean true d-i partman/choose_partition select Finish partitioning and write changes to disk d-i partman/confirm boolean true d-i partman/confirm_nooverwrite boolean true d-i passwd/root-login boolean true d-i passwd/root-password-crypted password $default_password_crypted d-i passwd/make-user boolean true d-i passwd/user-fullname string keypool d-i passwd/username string keypool d-i passwd/user-password-crypted password $default_password_crypted d-i passwd/user-default-groups string sudo d-i apt-setup/services-select multiselect security d-i apt-setup/security_host string mirrors.aliyun.com d-i apt-setup/security_path string /ubuntu $SNIPPET('preseed_apt_repo_config') d-i pkgsel/include string ssh wget net-tools d-i grub-installer/only_debian boolean true d-i grub-installer/bootdev string default d-i debian-installer/add-kernel-opts string net.ifnames=0 biosdevname=0 # NOTE: remove 'quiet splash' from grub config d-i debian-installer/quiet boolean false d-i debian-installer/splash boolean false d-i finish-install/reboot_in_progress note d-i preseed/early_command string wget -O- \\ http://$http_server/cblr/svc/op/script/$what/$name/?script=preseed_early_default | \\ /bin/sh -s d-i preseed/late_command string mkdir -p /target/root/.ssh ; \\ echo \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC516dGSIiwUqi/o+LHtYvRXmeKgkqgq8HLMoGpN68PRpLwauinxS1h9zCTpeJP0FA5bHaouloxltc9KJzKGdJzW4k+1nwJLjs2BApn8FpdPPG5/hAqf5XsUh1b72vOmxVg2yjBLQKwFG/244SO5z20HBTTMBtJOBH0umh4hW6wkbgcFVjgUnRIhgVEi9PyU96RRFtMUW4Eo45zHQOsty4vnC2rL0VWen7s/UxCsjf9Hkl/Avssm8ZsSqaysSRKg92PLpiRdUk29EBIofXrdSqEh6/Ac1k8gv/0WIWxsUpZHgCbSOkJ9RNx9SXhsKGB/ojFIYlDURg+TGURC/z1Hpkz jihui.dai@keystore.com\" > /target/root/.ssh/authorized_keys ; \\ chmod 600 /target/root/.ssh/authorized_keys ; \\ wget -O /target/etc/apt/sources.list http://$http_server/sources.list ; \\ chroot /target apt-get update ; \\ mkdir -p /target/opt/scripts ; \\ wget -O /target/tmp/network.sh http://$http_server/ubuntu.sh ; \\ chroot /target bash /tmp/network.sh 7\uff09\u8bbe\u7f6eubuntu package repo //\u6b64\u6b65\u4ec5\u56fd\u5185\u5b89\u88c5\u9700\u8981 cobbler repo edit --name=ubuntu1804-x86_64 --mirror=http://mirrors.aliyun.com/ubuntu cobbler profile edit --name=ubuntu1804-x86_64 --repos=ubuntu1804-x86_64 cobbler repo edit --name=ubuntu2004-x86_64 --mirror=http://mirrors.aliyun.com/ubuntu cobbler profile edit --name=ubuntu2004-x86_64 --repos=ubuntu2004-x86_64 8\uff09\u7f16\u8f91\u53d1\u5e03\u955c\u50cf\u6240\u4f7f\u7528\u7684kickstart\u6587\u4ef6 centos # \u52a8\u6001\u7f16\u8f91\u6307\u5b9a\u4f7f\u7528\u65b0\u7684kickstart\u6587\u4ef6 cobbler profile edit --name=centos7-x86_64 --kickstart=/var/lib/cobbler/kickstarts/centos7.ks # \u7f51\u5361\u4ee5eth\u547d\u540d cobbler profile edit --name=centos7-x86_64 --kopts='net.ifnames=0 biosdevname=0' # \u9a8c\u8bc1\u662f\u5426\u66f4\u6539\u6210\u529f cobbler profile report --name=centos7-x86_64 |grep Kickstart Kickstart : /var/lib/cobbler/kickstarts/centos7.ks ubuntu cobbler profile edit --name=ubuntu1804-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1804.ks cobbler profile edit --name=ubuntu1804-x86_64 --kopts='net.ifnames=0 biosdevname=0 netcfg/choose_interface=auto' cobbler profile edit --name=ubuntu2004-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu2004.ks cobbler profile edit --name=ubuntu2004-x86_64 --kopts='net.ifnames=0 biosdevname=0 netcfg/choose_interface=auto' 1\u3001ubuntu\u7f51\u5361\u547d\u540d\u914d\u7f6e\u9700\u8981\u5728profile\u548cpreseed\u6587\u4ef6\u4e2d\u6307\u5b9a\uff1anet.ifnames=0 biosdevname=0 2\u3001ubuntu\u591a\u7f51\u5361\u81ea\u52a8\u88c5\u673a\u65f6\u9700\u8981\u5728profile\u548cpreseed\u6587\u4ef6\u4e2d\u6307\u5b9a: netcfg/choose_interface=auto 9\uff09\u518d\u6b21\u540c\u6b65cobbler\u914d\u7f6e cobbler sync 10\uff09\u521b\u5efaaliyun\u4ed3\u5e93\u955c\u50cf ubuntu aliyun \u955c\u50cf\u6587\u4ef6\uff1a ubuntu18.04 aliyun mirros: vim /var/www/html/sources.list deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse ubuntu20.04 aliyun mirros: vim /var/www/html/sources.list deb http://mirrors.aliyun.com/ubuntu/ focal main restricted deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted deb http://mirrors.aliyun.com/ubuntu/ focal universe deb http://mirrors.aliyun.com/ubuntu/ focal-updates universe deb http://mirrors.aliyun.com/ubuntu/ focal multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-updates multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted deb http://mirrors.aliyun.com/ubuntu/ focal-security universe deb http://mirrors.aliyun.com/ubuntu/ focal-security multiverse 11\uff09\u7f51\u7edc\u914d\u7f6e\u811a\u672c ubuntu vim /var/www/html/ubuntu.sh IP=`ifconfig |awk '{print $2}' |egrep -o '([0-9]{1,3}\\.){3}[0-9]{1,3}' |egrep -v \"127.0.0.1\"` rm -rf /etc/netplan/* ##\u7f51\u7edc\u914d\u7f6e #cat > /etc/netplan/99_config.yaml << EOF #network: # version: 2 # renderer: networkd # ethernets: # eth0: # addresses: # - ${IP}/24 # gateway4: 192.168.118.2 #EOF ##bonding\u7f51\u7edc\u914d\u7f6e cat > /etc/netplan/99_config.yaml << EOF network: version: 2 renderer: networkd ethernets: eports: match: name: eth[0|1]* optional: true bonds: bond0: interfaces: [eports] parameters: mode: balance-alb mii-monitor-interval: 100 bridges: br0: interfaces: [bond0] addresses: [${IP}/24] gateway4: 192.168.118.2 EOF centos vim /var/www/html/centos.sh IP=`ifconfig |awk '{print $2}' |egrep -o '([0-9]{1,3}\\.){3}[0-9]{1,3}' |egrep -v \"127.0.0.1\"` # \u7f51\u7edc\u914d\u7f6e #cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF #TYPE=Ethernet #BOOTPROTO=static #NAME=eth0 #DEVICE=eth0 #ONBOOT=yes #IPADDR=${IP} #PREFIX=24 #GATEWAY=192.168.118.2 #EOF # bonding\u7f51\u7edc\u914d\u7f6e cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF TYPE=Ethernet BOOTPROTO=none NAME=eth0 DEVICE=eth0 ONBOOT=yes MASTER=bond0 SLAVE=yes EOF cat > /etc/sysconfig/network-scripts/ifcfg-eth1 << EOF TYPE=Ethernet BOOTPROTO=none NAME=eth1 DEVICE=eth1 ONBOOT=yes MASTER=bond0 SLAVE=yes EOF cat > /etc/sysconfig/network-scripts/ifcfg-bond0 << EOF DEVICE=bond0 NAME=bond0 TYPE=Bond BONDING_MASTER=yes ONBOOT=yes BOOTPROTO=none BONDING_OPTS=\"mode=6 miimon=100\" BRIDGE=br0 EOF cat > /etc/sysconfig/network-scripts/ifcfg-br0 << EOF DEVICE=br0 NAME=br0 TYPE=Bridge ONBOOT=yes BOOTPROTO=static IPADDR=${IP} PREFIX=24 GATEWAY=192.168.118.2 EOF \u914d\u7f6e\u9ed8\u8ba4\u5b89\u88c5\u6307\u5b9a\u7cfb\u7edf \u00b6 cobbler system add --name=default --profile=ubuntu1804-x86_64 cobbler sync \u4e3b\u673a\u73af\u5883\u521d\u59cb\u5316\u811a\u672c \u00b6 \u521d\u59cb\u5316\u914d\u7f6e\u9879: 1\u3001\u914d\u7f6e\u7f51\u7edc\u4e0eDNS\u89e3\u6790 2\u3001\u5b89\u88c5\u7cfb\u7edf\u6027\u80fd\u5206\u6790\u5de5\u5177\u4e0e\u5e38\u7528\u8f6f\u4ef6 3\u3001\u8bbe\u7f6e\u4e3b\u673a\u540d 4\u3001\u8bbe\u7f6e\u65f6\u533a\u5e76\u540c\u6b65\u65f6\u95f4 5\u3001\u7981\u7528selinux 6\u3001\u6e05\u7a7a\u9632\u706b\u5899\u9ed8\u8ba4\u7b56\u7565 7\u3001\u5386\u53f2\u547d\u4ee4\u663e\u793a\u64cd\u4f5c\u65f6\u95f4\u53ca\u7528\u6237 8\u3001\u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u7801 9\u3001\u8bbe\u7f6eSSH\u8d85\u65f6\u65f6\u95f4 10\u3001\u7981\u6b62SSH\u7528\u6237\u5bc6\u7801\u767b\u5f55 11\u3001\u7981\u6b62\u5b9a\u65f6\u4efb\u52a1\u53d1\u9001\u90ae\u4ef6 12\u3001\u8bbe\u7f6e\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570 13\u3001\u7cfb\u7edf\u5185\u6838\u53c2\u6570\u4f18\u5316 centos\u7cfb\u7edf\u73af\u5883\u521d\u59cb\u5316\u811a\u672c vim centos.sh #/bin/bash # DNS\u89e3\u6790\u914d\u7f6e cat > /etc/resolv.conf << EOF nameserver 223.5.5.5 nameserver 223.6.6.6 EOF systemctl stop NetworkManager systemctl disable NetworkManager # \u5b89\u88c5\u5e38\u7528\u7cfb\u7edf\u8f6f\u4ef6 yum install vim sysstat net-tools iostat iftop iotp ntpdate curl lrzsz -y # \u8bbe\u7f6e\u4e3b\u673a\u540d hostnamectl set-hostname {{inventory_hostname}} if ! grep \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" /etc/hosts &>/dev/null; then echo \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" >> /etc/hosts fi # \u8bbe\u7f6e\u65f6\u533a\u5e76\u540c\u6b65\u65f6\u95f4 ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime if ! crontab -l |grep ntpdate &>/dev/null ; then (echo \"*/5 * * * * /usr/sbin/ntpdate ntp1.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab (echo \"*/5 * * * * /usr/sbin/ntpdate ntp2.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab fi # \u7981\u7528selinux sed -i '/SELINUX/{s/permissive/disabled/}' /etc/selinux/config # \u5173\u95ed\u9632\u706b\u5899 if egrep \"7.[0-9]\" /etc/redhat-release &>/dev/null; then systemctl stop firewalld systemctl disable firewalld elif egrep \"6.[0-9]\" /etc/redhat-release &>/dev/null; then service iptables stop chkconfig iptables off fi # \u5386\u53f2\u547d\u4ee4\u663e\u793a\u64cd\u4f5c\u65f6\u95f4\u548c\u6267\u884c\u7528\u6237 if ! grep HISTTIMEFORMAT /etc/bashrc; then echo 'export HISTTIMEFORMAT=\"%F %T `whoami` \"' >> /etc/bashrc fi ##\u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u7801 if ! grep \"LANG=en_US.UTF-8\" /etc/profile &>/dev/null; then echo \"export LANG=en_US.UTF-8\" >> /etc/profile fi # SSH\u8d85\u65f6\u65f6\u95f4 if ! grep \"TMOUT=600\" /etc/profile &>/dev/null; then echo \"export TMOUT=600\" >> /etc/profile fi # \u7981\u6b62root\u8fdc\u7a0b\u767b\u5f55 # sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config # \u7981\u7528\u5bc6\u7801\u767b\u5f55 sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config # \u7981\u6b62\u5b9a\u65f6\u4efb\u52a1\u5411\u53d1\u9001\u90ae\u4ef6 sed -i 's/^MAILTO=root/MAILTO=\"\"/' /etc/crontab # \u8bbe\u7f6e\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u548c\u8fdb\u7a0b\u6570 if ! grep \"* soft nofile 204800\" /etc/security/limits.conf &>/dev/null; then cat >> /etc/security/limits.conf << EOF * soft nofile 204800 * hard nofile 204800 EOF cat >> /etc/security/limits.d/nproc.conf << EOF * soft nproc 102400 * hard nproc 102400 EOF fi # \u7cfb\u7edf\u5185\u6838\u4f18\u5316 cat >> /etc/sysctl.conf << EOF net.ipv4.ip_local_port_range = 32768 65535 net.ipv4.tcp_syncookies = 1 net.ipv4.tcp_max_tw_buckets = 81920 net.ipv4.tcp_max_syn_backlog = 81920 net.core.netdev_max_backlog = 262144 net.ipv4.tcp_fin_timeout = 20 net.core.rmem_max=134217728 net.core.wmem_max=134217728 net.ipv4.tcp_rmem=4096 87380 67108864 net.ipv4.tcp_wmem=4096 87380 67108864 kernel.pid_max = 4194303 vm.swappiness = 0 EOF sysctl -p # \u5e94\u7528SSH\u914d\u7f6e systemctl reload sshd ubuntu\u7cfb\u7edf\u73af\u5883\u521d\u59cb\u5316\u811a\u672c vim ubuntu.sh #!/bin/bash ##DNS\u89e3\u6790 systemctl stop systemd-resolved systemctl disable systemd-resolved rm -rf /etc/resolv.conf cat > /etc/resolv.conf << EOF nameserver 223.5.5.5 nameserver 223.6.6.6 EOF ##\u5b89\u88c5\u5e38\u7528\u8f6f\u4ef6 apt-get install -y net-tools sysstat iotop iftop ntpdate vim curl lrzsz ##\u8bbe\u7f6e\u4e3b\u673a\u540d hostnamectl set-hostname {{inventory_hostname}} if ! grep \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" /etc/hosts &>/dev/null; then echo \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" >> /etc/hosts fi ##\u8bbe\u7f6e\u65f6\u533a\u5e76\u540c\u6b65\u65f6\u95f4 if ! crontab -l |grep ntpdate &>/dev/null ; then (echo \"*/5 * * * * /usr/sbin/ntpdate ntp1.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab (echo \"*/5 * * * * /usr/sbin/ntpdate ntp2.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab fi ##\u5386\u53f2\u547d\u4ee4\u663e\u793a\u64cd\u4f5c\u65f6\u95f4\u548c\u6267\u884c\u7528\u6237 if ! grep HISTTIMEFORMAT /etc/bash.bashrc; then echo 'export HISTTIMEFORMAT=\"%F %T `whoami` \"' >> /etc/bash.bashrc fi ##SSH\u8d85\u65f6\u65f6\u95f4 if ! grep \"TMOUT=600\" /etc/profile &>/dev/null; then echo \"export TMOUT=600\" >> /etc/profile fi ##\u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u7801 if ! grep \"LANG=en_US.UTF-8\" /etc/profile &>/dev/null; then echo \"export LANG=en_US.UTF-8\" >> /etc/profile fi ##\u7981\u7528SSH\u5bc6\u7801\u767b\u5f55 sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config ##\u8bbe\u7f6e\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u548c\u8fdb\u7a0b\u6570 if ! grep \"* soft nofile 204800\" /etc/security/limits.conf &>/dev/null; then cat >> /etc/security/limits.conf << EOF * soft nofile 204800 * hard nofile 204800 root soft nofile 204800 root hard nofile 204800 EOF cat >> /etc/security/limits.d/nproc.conf << EOF * soft nproc 102400 * hard nproc 102400 root soft nproc 102400 root hard nproc 102400 EOF fi ##\u7cfb\u7edf\u5185\u6838\u4f18\u5316 cat >> /etc/sysctl.conf << EOF net.ipv4.ip_local_port_range = 18000 65535 net.ipv4.tcp_syncookies = 1 net.ipv4.tcp_max_tw_buckets = 81920 net.ipv4.tcp_max_syn_backlog = 81920 net.core.netdev_max_backlog = 262144 net.ipv4.tcp_fin_timeout = 20 net.core.rmem_max=134217728 net.core.wmem_max=134217728 net.ipv4.tcp_rmem=4096 87380 67108864 net.ipv4.tcp_wmem=4096 87380 67108864 kernel.pid_max = 4194303 vm.swappiness = 0 EOF sysctl -p ##\u5e94\u7528SSH\u914d\u7f6e systemctl reload sshd ##\u5347\u7ea7\u8f6f\u4ef6 apt-get update && apt -y upgrade reboot ansible\u6267\u884c\u73af\u5883\u521d\u59cb\u5316\u811a\u672c \u6ce8\u610f 1\u3001\u901a\u8fc7ansible\u65b9\u5f0f\u6279\u91cf\u6267\u884c\u53ef\u4ee5\u4f20\u9012\u811a\u672c\u4e2d\u7684\u76f8\u5173\u53d8\u91cf 2\u3001facts\u53d8\u91cf\u9700\u8981\u9884\u5148\u914d\u7f6e\u7f13\u5b58\u624d\u80fd\u4f7f\u7528\uff0c\u5426\u5219\u4f1a\u62a5\u53d8\u91cf\u4e0d\u5b58\u5728\u7684\u9519\u8bef ansible\u914d\u7f6e vim /etc/ansible/hosts [manager] manager-[01:10] vim /etc/hosts 192.168.118.172 manager-01 192.168.118.173 manager-02 vim init.yml --- - hosts: manager tasks: - name: Upload Centos system init script template: src=centos.sh dest=/tmp/init.sh when: - ansible_facts['distribution'] == \"CentOS\" - name: Upload Ubuntu system init script template: src=ubuntu.sh dest=/tmp/init.sh when: - ansible_facts['distribution'] == \"Ubuntu\" - name: Exec script shell: bash /tmp/init.sh \u81f3\u6b64\uff0ccobbler\u914d\u7f6e\u5b8c\u6210\uff01\uff01\uff01","title":"01.cobbler\u81ea\u52a8\u5316\u90e8\u7f72"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler","text":"1\u3001Cobbler\u662f\u4e00\u4e2aLinux\u670d\u52a1\u5668\u5b89\u88c5\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u542f\u52a8\uff08PXE\uff09\u7684\u65b9\u5f0f\u6765\u5feb\u901f\u5b89\u88c5\u3001\u91cd\u88c5\u7269\u7406\u670d\u52a1\u5668\u548c\u865a\u62df\u673a\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u7ba1\u7406DHCP\uff0cDNS\u7b49\u3002 2\u3001Cobbler\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u65b9\u5f0f\u7ba1\u7406\uff0c\u4e5f\u63d0\u4f9b\u4e86\u57fa\u4e8eWeb\u7684\u754c\u9762\u7ba1\u7406\u5de5\u5177\uff08cobbler-web\uff09\uff0c\u8fd8\u63d0\u4f9b\u4e86API\u63a5\u53e3\uff0c\u53ef\u4ee5\u65b9\u4fbf\u4e8c\u6b21\u5f00\u53d1\u4f7f\u7528\u3002 3\u3001Cobbler\u662f\u8f83\u65e9\u524d\u7684kickstart\u7684\u5347\u7ea7\u7248\uff0c\u4f18\u70b9\u662f\u6bd4\u8f83\u5bb9\u6613\u914d\u7f6e\uff0c\u8fd8\u81ea\u5e26web\u754c\u9762\u6bd4\u8f83\u6613\u4e8e\u7ba1\u7406\u3002 4\u3001Cobbler\u5185\u7f6e\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f46\u5b83\u4e5f\u652f\u6301\u548c\u5176\u5b83\u914d\u7f6e\u7ba1\u7406\u7cfb\u7edf\u96c6\u6210\uff0c\u5982Puppet\u3002","title":"cobbler\u7b80\u4ecb"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler_1","text":"Cobbler\u7684\u914d\u7f6e\u7ed3\u6784\u57fa\u4e8e\u4e00\u7ec4\u6ce8\u518c\u7684\u5bf9\u8c61\u3002\u6bcf\u4e2a\u5bf9\u8c61\u8868\u793a\u4e00\u4e2a\u4e0e\u53e6\u4e00\u4e2a\u5b9e\u4f53\u76f8\u5173\u8054\u7684\u5b9e\u4f53\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6307\u5411\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5b83\u5c31\u7ee7\u627f\u4e86\u88ab\u6307\u5411\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u5e76\u53ef\u8986\u76d6\u6216\u6dfb\u52a0\u66f4\u591a\u7279\u5b9a\u4fe1\u606f\u3002 \u53d1\u884c\u7248( distros )\uff1a \u8868\u793a\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u3002\u5b83\u627f\u8f7d\u4e86\u5185\u6838\u548cinitrd\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u5185\u6838\u53c2\u6570\u7b49\u5176\u4ed6\u6570\u636e\u3002 \u914d\u7f6e\u6587\u4ef6( profiles )\uff1a\u5305\u542b\u4e00\u4e2a\u53d1\u884c\u7248\u3001\u4e00\u4e2akickstart\u6587\u4ef6\u4ee5\u53ca\u53ef\u80fd\u7684\u5b58\u50a8\u5e93\uff0c\u8fd8\u5305\u62ec\u66f4\u591a\u7279\u5b9a\u7684\u5185\u6838\u53c2\u6570\u7b49\u5176\u4ed6\u6570\u636e\u3002 \u7cfb\u7edf( systems )\uff1a\u8868\u793a\u8981\u914d\u7ed9\u7684\u673a\u5668\u3002\u5b83\u5305\u62ec\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u6216\u4e00\u4e2a\u955c\u50cf\u3001IP\u548cMAC\u5730\u5740\u3001\u7535\u6e90\u7ba1\u7406\uff08\u5730\u5740\u3001\u51ed\u636e\u3001\u7c7b\u578b\uff09\u4ee5\u53ca\u66f4\u4e3a\u4e13\u4e1a\u7684\u6570\u636e\u7b49\u4fe1\u606f\u3002 \u955c\u50cf( images )\uff1a\u53ef\u4ee5\u66ff\u6362\u4e00\u4e2a\u4fdd\u51fd\u4e0d\u5c51\u4e8e\u6b64\u7c7b\u522b\u7684\u6587\u4ef6\u7684\u53d1\u884c\u7248\u5bf9\u8c61\uff08\u4f8b\u5982\uff0c\u65e0\u6cd5\u5206\u4e3a\u5185\u6838\u548cinitrd\u7684\u5bf9\u8c61\uff09\u3002","title":"cobbler\u5bf9\u5e94\u5173\u7cfb"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler_2","text":"PXE\u670d\u52a1\u652f\u6301 DHCP\u670d\u52a1\u7ba1\u7406 DNS\u670d\u52a1\u7ba1\u7406 \u7535\u6e90\u7ba1\u7406 Kickstart\u670d\u52a1\u652f\u6301 YUM\u4ed3\u5e93\u7ba1\u7406 TFTP Apache","title":"cobbler\u96c6\u6210\u7684\u670d\u52a1"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler_3","text":"Server\u7aef \u542f\u52a8Cobbler\u670d\u52a1 \u8fdb\u884cCobbler\u9519\u8bef\u68c0\u67e5\uff0c\u6267\u884ccobbler check\u547d\u4ee4 \u8fdb\u884c\u914d\u7f6e\u540c\u6b65\uff0c\u6267\u884ccobbler sync\u547d\u4ee4 \u590d\u5236\u76f8\u5173\u542f\u52a8\u6587\u4ef6\u5230TFTP\u76ee\u5f55\u4e2d \u542f\u52a8DHCP\u670d\u52a1\uff0c\u63d0\u4f9b\u5730\u5740\u5206\u914d DHCP\u670d\u52a1\u5206\u914dIP\u5730\u5740 TFTP\u4f20\u8f93\u542f\u52a8\u6587\u4ef6 Server\u7aef\u63a5\u6536\u5b89\u88c5\u4fe1\u606f Server\u7aef\u53d1\u9001ISO\u955c\u50cf\u4e0eKickstart\u6587\u4ef6 Client\u7aef \u5ba2\u6237\u7aef\u4ee5PXE\u6a21\u5f0f\u542f\u52a8 \u5ba2\u6237\u7aef\u83b7\u53d6IP\u5730\u5740 \u901a\u8fc7TFTP\u670d\u52a1\u5668\u83b7\u53d6\u542f\u52a8\u6587\u4ef6 \u8fdb\u5165Cobbler\u5b89\u88c5\u9009\u62e9\u754c\u9762 \u6839\u636e\u914d\u7f6e\u4fe1\u606f\u51c6\u5907\u5b89\u88c5\u7cfb\u7edf \u52a0\u8f7dKickstart\u6587\u4ef6 \u4f20\u8f93\u7cfb\u7edf\u5b89\u88c5\u7684\u5176\u5b83\u6587\u4ef6 \u8fdb\u884c\u5b89\u88c5\u7cfb\u7edf","title":"cobbler\u5de5\u4f5c\u539f\u7406"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler_4","text":"\u8bf4\u660e \u865a\u62df\u673a\u7f51\u5361\u91c7\u7528NAT\u6a21\u5f0f\u6216\u8005\u4ec5\u4e3b\u673a\u6a21\u5f0f\uff0c\u4e0d\u8981\u4f7f\u7528\u6865\u63a5\u6a21\u5f0f\uff0c\u56e0\u4e3a\u540e\u9762\u4f1a\u642d\u5efaDHCP\u670d\u52a1\u5668\uff0c\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u591a\u4e2aDHCP\u670d\u52a1\u4f1a\u6709\u51b2\u7a81\u3002 VMware\u7684NAT\u6a21\u5f0f\u7684dhcp\u670d\u52a1\u4e5f\u5173\u95ed\uff0c\u907f\u514d\u5e72\u6270\u3002","title":"cobbler\u5b89\u88c5"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#_1","text":"\u5173\u95ed\u9632\u706b\u5899\u3001selinux\u7b49 [root@cobbler ~]# systemctl stop firewalld [root@cobbler ~]# systemctl disable firewalld [root@cobbler ~]# setenforce 0 [root@cobbler ~]# sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux","title":"\u73af\u5883\u51c6\u5907"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler_5","text":"\u914d\u7f6eepel\u6e90 [root@cobbler ~]# yum -y install epel-release # \u5b89\u88c5cobbler\u53cadhcp httpd xinetd cobbler-web [root@cobbler ~]# yum -y install cobbler cobbler-web tftp-server dhcp httpd xinetd # \u542f\u52a8cobbler\u53cahttpd\u5e76\u52a0\u5165\u5f00\u673a\u542f\u52a8 [root@cobbler ~]# systemctl start httpd cobblerd [root@cobbler ~]# systemctl enable httpd cobblerd \u67e5\u770b\u5b89\u88c5\u540e\u76f8\u5173\u6587\u4ef6 [root@cobbler ~]# rpm -ql cobbler /etc/cobbler # \u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/settings # cobbler\u4e3b\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662fYAML\u683c\u5f0f\uff0cCobbler\u662fpython\u5199\u7684\u7a0b\u5e8f\u3002 /etc/cobbler/dhcp.template # DHCP\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/tftpd.template # tftp\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/rsync.template # rsync\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/iso # iso\u6a21\u677f\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/pxe # pxe\u6a21\u677f\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/power # \u7535\u6e90\u7684\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 /etc/cobbler/users.conf # Web\u670d\u52a1\u6388\u6743\u914d\u7f6e\u6587\u4ef6 /etc/cobbler/users.digest # \u7528\u4e8eweb\u8bbf\u95ee\u7684\u7528\u6237\u540d\u5bc6\u7801\u914d\u7f6e\u6587\u4ef6 /etc/cobbler/dnsmasq.template # DNS\u670d\u52a1\u7684\u914d\u7f6e\u6a21\u677f /etc/cobbler/modules.conf # Cobbler\u6a21\u5757\u914d\u7f6e\u6587\u4ef6 /var/lib/cobbler # Cobbler\u6570\u636e\u76ee\u5f55 /var/lib/cobbler/config # \u914d\u7f6e\u6587\u4ef6 /var/lib/cobbler/kickstarts # \u9ed8\u8ba4\u5b58\u653ekickstart\u6587\u4ef6 /var/lib/cobbler/loaders # \u5b58\u653e\u7684\u5404\u79cd\u5f15\u5bfc\u7a0b\u5e8f /var/www/cobbler # \u7cfb\u7edf\u5b89\u88c5\u955c\u50cf\u76ee\u5f55 /var/www/cobbler/ks_mirror # \u5bfc\u5165\u7684\u7cfb\u7edf\u955c\u50cf\u5217\u8868 /var/www/cobbler/images # \u5bfc\u5165\u7684\u7cfb\u7edf\u955c\u50cf\u542f\u52a8\u6587\u4ef6 /var/www/cobbler/repo_mirror # yum\u6e90\u5b58\u50a8\u76ee\u5f55 /var/log/cobbler # \u65e5\u5fd7\u76ee\u5f55 /var/log/cobbler/install.log # \u5ba2\u6237\u7aef\u7cfb\u7edf\u5b89\u88c5\u65e5\u5fd7 /var/log/cobbler/cobbler.log # cobbler\u65e5\u5fd7","title":"\u5b89\u88c5cobbler"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler_6","text":"\u68c0\u67e5Cobbler\u7684\u914d\u7f6e\uff0c\u5982\u679c\u770b\u4e0d\u5230\u4e0b\u9762\u7684\u95ee\u9898\uff0c\u518d\u6b21\u91cd\u542fcobbler [root@cobbler ~]# cobbler check The following are potential configuration items that you may want to fix: 1 : The 'server' field in /etc/cobbler/settings must be set to something other than localhost, or kickstarting features will not work. This should be a resolvable hostname or IP for the boot server as reachable by all machines that will use it. 2 : For PXE to be functional, the 'next_server' field in /etc/cobbler/settings must be set to something other than 127.0.0.1, and should match the IP of the boot server on the PXE network. 3 : change 'disable' to 'no' in /etc/xinetd.d/tftp 4 : Some network boot-loaders are missing from /var/lib/cobbler/loaders, you may run 'cobbler get-loaders' to download them, or, if you only want to handle x86/x86_64 netbooting, you may ensure that you have installed a *recent* version of the syslinux package installed and can ignore this message entirely. Files in this directory, should you want to support all architectures, should include pxelinux.0, menu.c32, elilo.efi, and yaboot. The 'cobbler get-loaders' command is the easiest way to resolve these requirements. 5 : enable and start rsyncd.service with systemctl 6 : debmirror package is not installed, it will be required to manage debian deployments and repositories 7 : ksvalidator was not found, install pykickstart 8 : The default password used by the sample templates for newly installed machines (default_password_crypted in /etc/cobbler/settings) is still set to 'cobbler' and should be changed, try: \"openssl passwd -1 -salt 'random-phrase-here' 'your-password-here'\" to generate new one 9 : fencing tools were not found, and are required to use the (optional) power management features. install cman or fence-agents to use them Restart cobblerd and then run 'cobbler sync' to apply changes. \u770b\u5230\u4e0a\u9762\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u7684\u8fdb\u884c\u89e3\u51b3\uff0c\u5148\u8fdb\u884c\u8bbe\u7f6e\u4e3a\u53ef\u4ee5\u52a8\u6001\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\u3002 # \u8bbe\u7f6e\u53ef\u4ee5\u52a8\u6001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 [root@cobbler ~]# sed -ri '/allow_dynamic_settings:/c\\allow_dynamic_settings: 1' /etc/cobbler/settings [root@cobbler ~]# grep allow_dynamic_settings /etc/cobbler/settings allow_dynamic_settings: 1 [root@cobbler ~]# systemctl restart cobblerd \u9010\u4e2a\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898 1. server [root@cobbler ~]# cobbler setting edit --name=server --value=192.168.2.128 2. next_server [root@cobbler ~]# cobbler setting edit --name=next_server --value=192.168.2.128 3. tftp_server [root@cobbler ~]# sed -ri '/disable/c\\disable = no' /etc/xinetd.d/tftp [root@cobbler ~]# systemctl enable xinetd [root@cobbler ~]# systemctl restart xinetd 4. boot-loaders [root@cobbler ~]# cobbler get-loaders 5. rsyncd [root@cobbler ~]# systemctl start rsyncd [root@cobbler ~]# systemctl enable rsyncd 6. debmirror [optional] # \u8fd9\u4e2a\u662f\u53ef\u9009\u9879\u7684\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002\u5982\u679c\u5b89\u88c5Ubuntu\uff0c\u6b64\u6b65\u9aa4\u4e3a\u5fc5\u8981\u6b65\u9aa4\u3002 yum install -y debmirror sed -i 's%^@dists=\"sid\"%#@dists=\"sid\"%g;s%@arches=\"i386\"%#@arches=\"i386\"%g' /etc/debmirror.conf //PXE\u5b89\u88c5ubuntu\u5fc5\u987b\u6b65\u9aa4 7. pykickstart [root@cobbler ~]# yum -y install pykickstart 8. default_password_crypted #\u6ce8\u610f\uff1a\u8fd9\u91cc\u8bbe\u7f6e\u7684\u5bc6\u7801\uff0c\u4e5f\u5c31\u662f\u540e\u9762\u5b89\u88c5\u5b8c\u7cfb\u7edf\u7684\u521d\u59cb\u5316\u767b\u5f55\u5bc6\u7801 [root@cobbler ~]# openssl passwd -1 -salt `openssl rand -hex 4` 'admin' $1$675f1d08$oJoAMVxdbdKHjQXbGqNTX0 [root@cobbler ~]# cobbler setting edit --name=default_password_crypted --value='$1$675f1d08$oJoAMVxdbdKHjQXbGqNTX0' 9. fencing tools [optional] [root@cobbler ~]# yum -y install fence-agents \u6dfb\u52a0Ubuntu 20.04\u652f\u6301 vim /var/lib/cobbler/distro_signatures.json \"focal\": { \"signatures\": [ \"dists\", \".disk\" ], \"version_file\": \"Release|mini-info\", \"version_file_regex\": \"Codename: focal|Ubuntu 20.04\", \"kernel_arch\": \"linux-headers-(.*)\\\\.deb\", \"kernel_arch_regex\": null, \"supported_arches\": [ \"i386\", \"amd64\" ], \"supported_repo_breeds\": [ \"apt\" ], \"kernel_file\": \"linux(.*)\", \"initrd_file\": \"initrd(.*)\\\\.gz\", \"isolinux_ok\": false, \"default_kickstart\": \"/var/lib/cobbler/kickstarts/sample.seed\", \"kernel_options\": \"\", \"kernel_options_post\": \"\", \"boot_files\": [] } \u540c\u6b65cobbler\u914d\u7f6e cobbler sync systemctl restart cobblerd cobbler signature report --name=ubuntu //\u67e5\u770b\u53ef\u5b89\u88c5\u7684ubuntu\u7248\u672c","title":"\u914d\u7f6ecobbler"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobbler_7","text":"\u547d\u4ee4 \u8bf4\u660e cobbler check \u6838\u5bf9\u5f53\u524d\u8bbe\u7f6e\u662f\u5426\u6709\u95ee\u9898 cobbler list \u5217\u51fa\u6240\u6709\u7684cobbler\u5143\u7d20 cobbler report \u5217\u51fa\u5143\u7d20\u7684\u8be6\u7ec6\u4fe1\u606f cobbler sync \u540c\u6b65\u914d\u7f6e\u5230\u6570\u636e\u76ee\u5f55\uff0c\u66f4\u6539\u914d\u7f6e\u6700\u597d\u90fd\u6267\u884c\u4e00\u4e0b cobbler reposync \u540c\u6b65yum\u4ed3\u5e93 cobbler distro \u67e5\u770b\u5bfc\u5165\u7684\u53d1\u884c\u7248\u7cfb\u7edf\u4fe1\u606f cobbler system \u67e5\u770b\u6dfb\u52a0\u7684\u7cfb\u7edf\u4fe1\u606f cobbler profile \u67e5\u770b\u914d\u7f6e\u4fe1\u606f cobbler signature report --name=ubuntu \u67e5\u770bubuntu\u7cfb\u5217\u652f\u6301\u7248\u672c cobbler signature update \u66f4\u65b0\u652f\u6301\u7684\u7cfb\u7edf\u7248\u672c","title":"cobbler\u547d\u4ee4\u5e2e\u52a9"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#cobblerubuntu","text":"1\uff09\u521b\u5efa\u6302\u8f7d\u70b9\uff0c\u5e76\u8fdb\u884c\u6302\u8f7d mkdir /ubuntu1804 mkdir /ubuntu2004 mount -o loop /dev/sr0/ubuntu-18.04.4-server-amd64.iso /ubuntu1804 mount -o loop /mnt/ubuntu-20.4-server-amd64.iso /ubuntu2004 2\uff09\u67e5\u770b\u6302\u8f7d\u540e\u7684\u76ee\u5f55 ls /ubuntu1804 ls /ubuntu2004 3\uff09\u5bfc\u5165\u955c\u50cf cobbler import --path=/ubuntu1804 --name=ubuntu1804 --arch=x86_64 cobbler import --path=/ubuntu2004 --name=ubuntu2004 --arch=x86_64 # --path \u955c\u50cf\u8def\u5f84 # --name \u4e3a\u5b89\u88c5\u6e90\u5b9a\u4e49\u4e00\u4e2a\u540d\u5b57 # --arch \u6307\u5b9a\u5b89\u88c5\u6e90\u662f32\u4f4d\u300164\u4f4d\u3001ia64, \u76ee\u524d\u652f\u6301\u7684\u9009\u9879\u6709: x86\u2502x86_64\u2502ia64 # \u5b89\u88c5\u6e90\u7684\u552f\u4e00\u6807\u793a\u5c31\u662f\u6839\u636ename\u53c2\u6570\u6765\u5b9a\u4e49\uff0c\u672c\u4f8b\u5bfc\u5165\u6210\u529f\u540e\uff0c\u5b89\u88c5\u6e90\u7684\u552f\u4e00\u6807\u793a\u5c31\u662f\uff1aubuntu2004\uff0c\u5982\u679c\u91cd\u590d\uff0c\u7cfb\u7edf\u4f1a\u63d0\u793a\u5bfc\u5165\u5931\u8d25 4\uff09\u67e5\u770b\u5bfc\u5165\u540e\u955c\u50cf\u4fe1\u606f cobbler list //\u67e5\u770b\u76ee\u524d\u53ef\u5b89\u88c5\u7684\u7248\u672c cobbler distro report --name=ubuntu1804-x86_64 cobbler distro report --name=ubuntu2004-x86_64 5\uff09\u67e5\u770bprofile\u4fe1\u606f \u53ef\u83b7\u53d6\u5230\u76f8\u5e94\u7248\u672c\u7684ks\u6587\u4ef6\u8def\u5f84 cobbler profile report --name=ubuntu1804-x86_64 cobbler profile report --name=ubuntu2004-x86_64 6\uff09\u521b\u5efaks\u6587\u4ef6 centos7 ks\u6587\u4ef6 cd /var/lib/cobbler/kickstarts cp sample_end.ks centos7.ks vim centos7.ks # Install OS instead of upgrade install # Use text mode install text # System keyboard keyboard us # System language lang en_US # System timezone timezone Asia/Shanghai # Root password rootpw --iscrypted $default_password_crypted # System authorization information auth --useshadow --enablemd5 # Firewall configuration firewall --disabled # SELinux configuration selinux --disabled # Use network installation url --url=$tree # Clear the Master Boot Record zerombr # System bootloader configuration bootloader --location=mbr # Partition clearing information clearpart --all --initlabel #Disk partitioning information part /boot --fstype ext4 --size 1024 --ondisk sda part swap --size 8192 --ondisk sda # Gluster Deploy enable heketidb brick1 # part /gfs/heketidb --fstype xfs --size 8192 --ondisk sda part / --fstype xfs --size 1 --grow --ondisk sda # Do not configure the X Window System skipx # Run the Setup Agent on first boot firstboot --disable # Reboot after installation reboot # Install core package %packages @core @base tree nmap wget lftp lrzsz telnet %end %post # Config ssh key mkdir /root/.ssh chmod 700 /root/.ssh cat > /root/.ssh/authorized_keys << EOF ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC516dGSIiwUqi/o+LHtYvRXmeKgkqgq8HLMoGpN68PRpLwauinxS1h9zCTpeJP0FA5bHaouloxltc9KJzKGdJzW4k+1nwJLjs2BApn8FpdPPG5/hAqf5XsUh1b72vOmxVg2yjBLQKwFG/244SO5z20HBTTMBtJOBH0umh4hW6wkbgcFVjgUnRIhgVEi9PyU96RRFtMUW4Eo45zHQOsty4vnC2rL0VWen7s/UxCsjf9Hkl/Avssm8ZsSqaysSRKg92PLpiRdUk29EBIofXrdSqEh6/Ac1k8gv/0WIWxsUpZHgCbSOkJ9RNx9SXhsKGB/ojFIYlDURg+TGURC/z1Hpkz jihui.dai@keystore.com EOF chmod 600 /root/.ssh/authorized_keys # Create scripts dir mkdir -p /opt/scripts # System update yum install -y wget net-tools bridge-utils yum update -y # Network config wget -O /tmp/network.sh http://$http_server/centos.sh bash /tmp/network.sh %end Ubuntu ks\u6587\u4ef6 cd /var/lib/cobbler/kickstarts/ cp sample.seed ubuntu2004.ks vim ubuntu2004.ks d-i debian-installer/locale string en_US d-i console-setup/ask_detect boolean false d-i keyboard-configuration/xkb-keymap select us d-i keyboard-configuration/toggle select No toggling d-i keyboard-configuration/layoutcode string us d-i keyboard-configuration/variantcode string d-i netcfg/choose_interface select auto d-i netcfg/get_hostname string $myhostname d-i time/zone string Asia/Shanghai d-i clock-setup/utc boolean true d-i clock-setup/ntp boolean true d-i clock-setup/ntp-server string ntp1.aliyun.com d-i mirror/country string manual d-i mirror/http/hostname string $http_server d-i mirror/http/directory string $install_source_directory d-i mirror/http/proxy string d-i live-installer/net-image string http://$http_server/cobbler/links/$distro_name/install/filesystem.squashfs d-i partman-auto/disk string /dev/sda d-i partman-auto/method string regular d-i partman-lvm/device_remove_lvm boolean true d-i partman-md/device_remove_md boolean true d-i partman-auto/expert_recipe string \\ boot-root-data :: \\ 1024 50 1024 ext4 \\ $primary{ } $bootable{ } \\ method{ format } format{ } \\ use_filesystem{ } filesystem{ ext4 } \\ mountpoint{ /boot } \\ . \\ 1024 100 1024 linux-swap \\ $primary{ } \\ method{ swap } format{ } \\ . \\ #4096 200 4096 xfs \\ #$primary{ } \\ #method{ format } format{ } \\ #use_filesystem{ } filesystem{ xfs } \\ #mountpoint{ /gfs/heketidb } \\ #. \\ 10240 1000 1000000000 xfs \\ $primary{ } \\ method{ format } format{ } \\ use_filesystem{ } filesystem{ xfs } \\ mountpoint{ / } \\ . d-i partman-auto/choose_recipe select boot-root-data d-i partman-partitioning/confirm_write_new_label boolean true d-i partman/choose_partition select Finish partitioning and write changes to disk d-i partman/confirm boolean true d-i partman/confirm_nooverwrite boolean true d-i passwd/root-login boolean true d-i passwd/root-password-crypted password $default_password_crypted d-i passwd/make-user boolean true d-i passwd/user-fullname string keypool d-i passwd/username string keypool d-i passwd/user-password-crypted password $default_password_crypted d-i passwd/user-default-groups string sudo d-i apt-setup/services-select multiselect security d-i apt-setup/security_host string mirrors.aliyun.com d-i apt-setup/security_path string /ubuntu $SNIPPET('preseed_apt_repo_config') d-i pkgsel/include string ssh wget net-tools d-i grub-installer/only_debian boolean true d-i grub-installer/bootdev string default d-i debian-installer/add-kernel-opts string net.ifnames=0 biosdevname=0 # NOTE: remove 'quiet splash' from grub config d-i debian-installer/quiet boolean false d-i debian-installer/splash boolean false d-i finish-install/reboot_in_progress note d-i preseed/early_command string wget -O- \\ http://$http_server/cblr/svc/op/script/$what/$name/?script=preseed_early_default | \\ /bin/sh -s d-i preseed/late_command string mkdir -p /target/root/.ssh ; \\ echo \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC516dGSIiwUqi/o+LHtYvRXmeKgkqgq8HLMoGpN68PRpLwauinxS1h9zCTpeJP0FA5bHaouloxltc9KJzKGdJzW4k+1nwJLjs2BApn8FpdPPG5/hAqf5XsUh1b72vOmxVg2yjBLQKwFG/244SO5z20HBTTMBtJOBH0umh4hW6wkbgcFVjgUnRIhgVEi9PyU96RRFtMUW4Eo45zHQOsty4vnC2rL0VWen7s/UxCsjf9Hkl/Avssm8ZsSqaysSRKg92PLpiRdUk29EBIofXrdSqEh6/Ac1k8gv/0WIWxsUpZHgCbSOkJ9RNx9SXhsKGB/ojFIYlDURg+TGURC/z1Hpkz jihui.dai@keystore.com\" > /target/root/.ssh/authorized_keys ; \\ chmod 600 /target/root/.ssh/authorized_keys ; \\ wget -O /target/etc/apt/sources.list http://$http_server/sources.list ; \\ chroot /target apt-get update ; \\ mkdir -p /target/opt/scripts ; \\ wget -O /target/tmp/network.sh http://$http_server/ubuntu.sh ; \\ chroot /target bash /tmp/network.sh 7\uff09\u8bbe\u7f6eubuntu package repo //\u6b64\u6b65\u4ec5\u56fd\u5185\u5b89\u88c5\u9700\u8981 cobbler repo edit --name=ubuntu1804-x86_64 --mirror=http://mirrors.aliyun.com/ubuntu cobbler profile edit --name=ubuntu1804-x86_64 --repos=ubuntu1804-x86_64 cobbler repo edit --name=ubuntu2004-x86_64 --mirror=http://mirrors.aliyun.com/ubuntu cobbler profile edit --name=ubuntu2004-x86_64 --repos=ubuntu2004-x86_64 8\uff09\u7f16\u8f91\u53d1\u5e03\u955c\u50cf\u6240\u4f7f\u7528\u7684kickstart\u6587\u4ef6 centos # \u52a8\u6001\u7f16\u8f91\u6307\u5b9a\u4f7f\u7528\u65b0\u7684kickstart\u6587\u4ef6 cobbler profile edit --name=centos7-x86_64 --kickstart=/var/lib/cobbler/kickstarts/centos7.ks # \u7f51\u5361\u4ee5eth\u547d\u540d cobbler profile edit --name=centos7-x86_64 --kopts='net.ifnames=0 biosdevname=0' # \u9a8c\u8bc1\u662f\u5426\u66f4\u6539\u6210\u529f cobbler profile report --name=centos7-x86_64 |grep Kickstart Kickstart : /var/lib/cobbler/kickstarts/centos7.ks ubuntu cobbler profile edit --name=ubuntu1804-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu1804.ks cobbler profile edit --name=ubuntu1804-x86_64 --kopts='net.ifnames=0 biosdevname=0 netcfg/choose_interface=auto' cobbler profile edit --name=ubuntu2004-x86_64 --kickstart=/var/lib/cobbler/kickstarts/ubuntu2004.ks cobbler profile edit --name=ubuntu2004-x86_64 --kopts='net.ifnames=0 biosdevname=0 netcfg/choose_interface=auto' 1\u3001ubuntu\u7f51\u5361\u547d\u540d\u914d\u7f6e\u9700\u8981\u5728profile\u548cpreseed\u6587\u4ef6\u4e2d\u6307\u5b9a\uff1anet.ifnames=0 biosdevname=0 2\u3001ubuntu\u591a\u7f51\u5361\u81ea\u52a8\u88c5\u673a\u65f6\u9700\u8981\u5728profile\u548cpreseed\u6587\u4ef6\u4e2d\u6307\u5b9a: netcfg/choose_interface=auto 9\uff09\u518d\u6b21\u540c\u6b65cobbler\u914d\u7f6e cobbler sync 10\uff09\u521b\u5efaaliyun\u4ed3\u5e93\u955c\u50cf ubuntu aliyun \u955c\u50cf\u6587\u4ef6\uff1a ubuntu18.04 aliyun mirros: vim /var/www/html/sources.list deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse ubuntu20.04 aliyun mirros: vim /var/www/html/sources.list deb http://mirrors.aliyun.com/ubuntu/ focal main restricted deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted deb http://mirrors.aliyun.com/ubuntu/ focal universe deb http://mirrors.aliyun.com/ubuntu/ focal-updates universe deb http://mirrors.aliyun.com/ubuntu/ focal multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-updates multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted deb http://mirrors.aliyun.com/ubuntu/ focal-security universe deb http://mirrors.aliyun.com/ubuntu/ focal-security multiverse 11\uff09\u7f51\u7edc\u914d\u7f6e\u811a\u672c ubuntu vim /var/www/html/ubuntu.sh IP=`ifconfig |awk '{print $2}' |egrep -o '([0-9]{1,3}\\.){3}[0-9]{1,3}' |egrep -v \"127.0.0.1\"` rm -rf /etc/netplan/* ##\u7f51\u7edc\u914d\u7f6e #cat > /etc/netplan/99_config.yaml << EOF #network: # version: 2 # renderer: networkd # ethernets: # eth0: # addresses: # - ${IP}/24 # gateway4: 192.168.118.2 #EOF ##bonding\u7f51\u7edc\u914d\u7f6e cat > /etc/netplan/99_config.yaml << EOF network: version: 2 renderer: networkd ethernets: eports: match: name: eth[0|1]* optional: true bonds: bond0: interfaces: [eports] parameters: mode: balance-alb mii-monitor-interval: 100 bridges: br0: interfaces: [bond0] addresses: [${IP}/24] gateway4: 192.168.118.2 EOF centos vim /var/www/html/centos.sh IP=`ifconfig |awk '{print $2}' |egrep -o '([0-9]{1,3}\\.){3}[0-9]{1,3}' |egrep -v \"127.0.0.1\"` # \u7f51\u7edc\u914d\u7f6e #cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF #TYPE=Ethernet #BOOTPROTO=static #NAME=eth0 #DEVICE=eth0 #ONBOOT=yes #IPADDR=${IP} #PREFIX=24 #GATEWAY=192.168.118.2 #EOF # bonding\u7f51\u7edc\u914d\u7f6e cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF TYPE=Ethernet BOOTPROTO=none NAME=eth0 DEVICE=eth0 ONBOOT=yes MASTER=bond0 SLAVE=yes EOF cat > /etc/sysconfig/network-scripts/ifcfg-eth1 << EOF TYPE=Ethernet BOOTPROTO=none NAME=eth1 DEVICE=eth1 ONBOOT=yes MASTER=bond0 SLAVE=yes EOF cat > /etc/sysconfig/network-scripts/ifcfg-bond0 << EOF DEVICE=bond0 NAME=bond0 TYPE=Bond BONDING_MASTER=yes ONBOOT=yes BOOTPROTO=none BONDING_OPTS=\"mode=6 miimon=100\" BRIDGE=br0 EOF cat > /etc/sysconfig/network-scripts/ifcfg-br0 << EOF DEVICE=br0 NAME=br0 TYPE=Bridge ONBOOT=yes BOOTPROTO=static IPADDR=${IP} PREFIX=24 GATEWAY=192.168.118.2 EOF","title":"cobbler\u914d\u7f6e\u5b89\u88c5Ubuntu"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#_2","text":"cobbler system add --name=default --profile=ubuntu1804-x86_64 cobbler sync","title":"\u914d\u7f6e\u9ed8\u8ba4\u5b89\u88c5\u6307\u5b9a\u7cfb\u7edf"},{"location":"kubernetes/01.cobbler%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/#_3","text":"\u521d\u59cb\u5316\u914d\u7f6e\u9879: 1\u3001\u914d\u7f6e\u7f51\u7edc\u4e0eDNS\u89e3\u6790 2\u3001\u5b89\u88c5\u7cfb\u7edf\u6027\u80fd\u5206\u6790\u5de5\u5177\u4e0e\u5e38\u7528\u8f6f\u4ef6 3\u3001\u8bbe\u7f6e\u4e3b\u673a\u540d 4\u3001\u8bbe\u7f6e\u65f6\u533a\u5e76\u540c\u6b65\u65f6\u95f4 5\u3001\u7981\u7528selinux 6\u3001\u6e05\u7a7a\u9632\u706b\u5899\u9ed8\u8ba4\u7b56\u7565 7\u3001\u5386\u53f2\u547d\u4ee4\u663e\u793a\u64cd\u4f5c\u65f6\u95f4\u53ca\u7528\u6237 8\u3001\u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u7801 9\u3001\u8bbe\u7f6eSSH\u8d85\u65f6\u65f6\u95f4 10\u3001\u7981\u6b62SSH\u7528\u6237\u5bc6\u7801\u767b\u5f55 11\u3001\u7981\u6b62\u5b9a\u65f6\u4efb\u52a1\u53d1\u9001\u90ae\u4ef6 12\u3001\u8bbe\u7f6e\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570 13\u3001\u7cfb\u7edf\u5185\u6838\u53c2\u6570\u4f18\u5316 centos\u7cfb\u7edf\u73af\u5883\u521d\u59cb\u5316\u811a\u672c vim centos.sh #/bin/bash # DNS\u89e3\u6790\u914d\u7f6e cat > /etc/resolv.conf << EOF nameserver 223.5.5.5 nameserver 223.6.6.6 EOF systemctl stop NetworkManager systemctl disable NetworkManager # \u5b89\u88c5\u5e38\u7528\u7cfb\u7edf\u8f6f\u4ef6 yum install vim sysstat net-tools iostat iftop iotp ntpdate curl lrzsz -y # \u8bbe\u7f6e\u4e3b\u673a\u540d hostnamectl set-hostname {{inventory_hostname}} if ! grep \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" /etc/hosts &>/dev/null; then echo \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" >> /etc/hosts fi # \u8bbe\u7f6e\u65f6\u533a\u5e76\u540c\u6b65\u65f6\u95f4 ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime if ! crontab -l |grep ntpdate &>/dev/null ; then (echo \"*/5 * * * * /usr/sbin/ntpdate ntp1.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab (echo \"*/5 * * * * /usr/sbin/ntpdate ntp2.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab fi # \u7981\u7528selinux sed -i '/SELINUX/{s/permissive/disabled/}' /etc/selinux/config # \u5173\u95ed\u9632\u706b\u5899 if egrep \"7.[0-9]\" /etc/redhat-release &>/dev/null; then systemctl stop firewalld systemctl disable firewalld elif egrep \"6.[0-9]\" /etc/redhat-release &>/dev/null; then service iptables stop chkconfig iptables off fi # \u5386\u53f2\u547d\u4ee4\u663e\u793a\u64cd\u4f5c\u65f6\u95f4\u548c\u6267\u884c\u7528\u6237 if ! grep HISTTIMEFORMAT /etc/bashrc; then echo 'export HISTTIMEFORMAT=\"%F %T `whoami` \"' >> /etc/bashrc fi ##\u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u7801 if ! grep \"LANG=en_US.UTF-8\" /etc/profile &>/dev/null; then echo \"export LANG=en_US.UTF-8\" >> /etc/profile fi # SSH\u8d85\u65f6\u65f6\u95f4 if ! grep \"TMOUT=600\" /etc/profile &>/dev/null; then echo \"export TMOUT=600\" >> /etc/profile fi # \u7981\u6b62root\u8fdc\u7a0b\u767b\u5f55 # sed -i 's/#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config # \u7981\u7528\u5bc6\u7801\u767b\u5f55 sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config # \u7981\u6b62\u5b9a\u65f6\u4efb\u52a1\u5411\u53d1\u9001\u90ae\u4ef6 sed -i 's/^MAILTO=root/MAILTO=\"\"/' /etc/crontab # \u8bbe\u7f6e\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u548c\u8fdb\u7a0b\u6570 if ! grep \"* soft nofile 204800\" /etc/security/limits.conf &>/dev/null; then cat >> /etc/security/limits.conf << EOF * soft nofile 204800 * hard nofile 204800 EOF cat >> /etc/security/limits.d/nproc.conf << EOF * soft nproc 102400 * hard nproc 102400 EOF fi # \u7cfb\u7edf\u5185\u6838\u4f18\u5316 cat >> /etc/sysctl.conf << EOF net.ipv4.ip_local_port_range = 32768 65535 net.ipv4.tcp_syncookies = 1 net.ipv4.tcp_max_tw_buckets = 81920 net.ipv4.tcp_max_syn_backlog = 81920 net.core.netdev_max_backlog = 262144 net.ipv4.tcp_fin_timeout = 20 net.core.rmem_max=134217728 net.core.wmem_max=134217728 net.ipv4.tcp_rmem=4096 87380 67108864 net.ipv4.tcp_wmem=4096 87380 67108864 kernel.pid_max = 4194303 vm.swappiness = 0 EOF sysctl -p # \u5e94\u7528SSH\u914d\u7f6e systemctl reload sshd ubuntu\u7cfb\u7edf\u73af\u5883\u521d\u59cb\u5316\u811a\u672c vim ubuntu.sh #!/bin/bash ##DNS\u89e3\u6790 systemctl stop systemd-resolved systemctl disable systemd-resolved rm -rf /etc/resolv.conf cat > /etc/resolv.conf << EOF nameserver 223.5.5.5 nameserver 223.6.6.6 EOF ##\u5b89\u88c5\u5e38\u7528\u8f6f\u4ef6 apt-get install -y net-tools sysstat iotop iftop ntpdate vim curl lrzsz ##\u8bbe\u7f6e\u4e3b\u673a\u540d hostnamectl set-hostname {{inventory_hostname}} if ! grep \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" /etc/hosts &>/dev/null; then echo \"{{ansible_default_ipv4.address}} {{inventory_hostname}}\" >> /etc/hosts fi ##\u8bbe\u7f6e\u65f6\u533a\u5e76\u540c\u6b65\u65f6\u95f4 if ! crontab -l |grep ntpdate &>/dev/null ; then (echo \"*/5 * * * * /usr/sbin/ntpdate ntp1.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab (echo \"*/5 * * * * /usr/sbin/ntpdate ntp2.aliyun.com >/dev/null 2>&1\";crontab -l) |crontab fi ##\u5386\u53f2\u547d\u4ee4\u663e\u793a\u64cd\u4f5c\u65f6\u95f4\u548c\u6267\u884c\u7528\u6237 if ! grep HISTTIMEFORMAT /etc/bash.bashrc; then echo 'export HISTTIMEFORMAT=\"%F %T `whoami` \"' >> /etc/bash.bashrc fi ##SSH\u8d85\u65f6\u65f6\u95f4 if ! grep \"TMOUT=600\" /etc/profile &>/dev/null; then echo \"export TMOUT=600\" >> /etc/profile fi ##\u8bbe\u7f6e\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u7801 if ! grep \"LANG=en_US.UTF-8\" /etc/profile &>/dev/null; then echo \"export LANG=en_US.UTF-8\" >> /etc/profile fi ##\u7981\u7528SSH\u5bc6\u7801\u767b\u5f55 sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config ##\u8bbe\u7f6e\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u548c\u8fdb\u7a0b\u6570 if ! grep \"* soft nofile 204800\" /etc/security/limits.conf &>/dev/null; then cat >> /etc/security/limits.conf << EOF * soft nofile 204800 * hard nofile 204800 root soft nofile 204800 root hard nofile 204800 EOF cat >> /etc/security/limits.d/nproc.conf << EOF * soft nproc 102400 * hard nproc 102400 root soft nproc 102400 root hard nproc 102400 EOF fi ##\u7cfb\u7edf\u5185\u6838\u4f18\u5316 cat >> /etc/sysctl.conf << EOF net.ipv4.ip_local_port_range = 18000 65535 net.ipv4.tcp_syncookies = 1 net.ipv4.tcp_max_tw_buckets = 81920 net.ipv4.tcp_max_syn_backlog = 81920 net.core.netdev_max_backlog = 262144 net.ipv4.tcp_fin_timeout = 20 net.core.rmem_max=134217728 net.core.wmem_max=134217728 net.ipv4.tcp_rmem=4096 87380 67108864 net.ipv4.tcp_wmem=4096 87380 67108864 kernel.pid_max = 4194303 vm.swappiness = 0 EOF sysctl -p ##\u5e94\u7528SSH\u914d\u7f6e systemctl reload sshd ##\u5347\u7ea7\u8f6f\u4ef6 apt-get update && apt -y upgrade reboot ansible\u6267\u884c\u73af\u5883\u521d\u59cb\u5316\u811a\u672c \u6ce8\u610f 1\u3001\u901a\u8fc7ansible\u65b9\u5f0f\u6279\u91cf\u6267\u884c\u53ef\u4ee5\u4f20\u9012\u811a\u672c\u4e2d\u7684\u76f8\u5173\u53d8\u91cf 2\u3001facts\u53d8\u91cf\u9700\u8981\u9884\u5148\u914d\u7f6e\u7f13\u5b58\u624d\u80fd\u4f7f\u7528\uff0c\u5426\u5219\u4f1a\u62a5\u53d8\u91cf\u4e0d\u5b58\u5728\u7684\u9519\u8bef ansible\u914d\u7f6e vim /etc/ansible/hosts [manager] manager-[01:10] vim /etc/hosts 192.168.118.172 manager-01 192.168.118.173 manager-02 vim init.yml --- - hosts: manager tasks: - name: Upload Centos system init script template: src=centos.sh dest=/tmp/init.sh when: - ansible_facts['distribution'] == \"CentOS\" - name: Upload Ubuntu system init script template: src=ubuntu.sh dest=/tmp/init.sh when: - ansible_facts['distribution'] == \"Ubuntu\" - name: Exec script shell: bash /tmp/init.sh \u81f3\u6b64\uff0ccobbler\u914d\u7f6e\u5b8c\u6210\uff01\uff01\uff01","title":"\u4e3b\u673a\u73af\u5883\u521d\u59cb\u5316\u811a\u672c"},{"location":"kubernetes/Prometheus%20Operator%E9%92%89%E9%92%89%E6%8A%A5%E8%AD%A6%E9%85%8D%E7%BD%AE/","text":"Prometheus Operator\u9489\u9489\u62a5\u8b66\u914d\u7f6e \u00b6 \u539f\u6587\u94fe\u63a5\uff1a https://www.amd5.cn/atang_4494.html alert\u62a5\u8b66\u89c4\u5219\u6536\u96c6\uff1a https://awesome-prometheus-alerts.grep.to/ \u6700\u8fd1\u628aPrometheus\u76d1\u63a7\u8fc1\u79fb\u5230\u4e86kubernetes\u96c6\u7fa4\u4e2d\uff0c\u90e8\u7f72\u6587\u6863\u53c2\u8003\u300aKubernetes\u73af\u5883\u4f7f\u7528Prometheus Operator\u81ea\u53d1\u73b0\u76d1\u63a7SpringBoot\u300b\uff0c\u5404\u7c7b\u76d1\u63a7\u9879\u7684\u6570\u636e\u91c7\u96c6\uff0c\u4ee5\u53cagrafana\u7684\u76d1\u63a7\u5c55\u793a\u6d4b\u8bd5\u90fd\u6b63\u5e38\uff0c\u4e8e\u662f\u8fdb\u5165\u4e0b\u4e00\u6b65\u62a5\u8b66\u7684\u8fc1\u5165\u6d4b\u8bd5\uff0calertmanager\u539f\u751f\u4e0d\u652f\u6301\u9489\u9489\u62a5\u8b66\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7webhook\u7684\u65b9\u5f0f\uff0c\u597d\u5728\u5df2\u7ecf\u6709\u5927\u4f6c\u5f00\u6e90\u4e86\u4e00\u5957\u57fa\u4e8e prometheus \u9489\u9489\u62a5\u8b66\u7684webhook\uff08\u9879\u76ee\u5730\u5740 https://github.com/timonwong/prometheus-webhook-dingtalk \uff09\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u914d\u7f6e\u4f7f\u7528\u5c31\u53ef\u4ee5\u4e86\u3002 1\u3001\u5728kubernetes\u96c6\u7fa4\u4e2d\uff0cpod\u4e4b\u95f4\u9700\u8981\u901a\u4fe1\uff0c\u9700\u8981\u4f7f\u7528service\uff0c\u6240\u4ee5\u5148\u7f16\u5199\u4e00\u4e2akubernetes\u7684yaml\u6587\u4ef6dingtalk-webhook.yaml\u3002 apiVersion : apps/v1 kind : Deployment metadata : name : webhook-dingtalk namespace : monitoring spec : selector : matchLabels : app : dingtalk replicas : 1 template : metadata : labels : app : dingtalk spec : containers : - name : dingtalk image : timonwong/prometheus-webhook-dingtalk:v1.4.0 imagePullPolicy : IfNotPresent args : - '--web.enable-ui' - '--web.enable-lifecycle' - '--config.file=/etc/prometheus-webhook-dingtalk/templates/legacy/config.yml' ports : - containerPort : 8060 protocol : TCP volumeMounts : - mountPath : \"/etc/prometheus-webhook-dingtalk/templates/legacy\" name : config volumes : - name : config configMap : name : alertmanager-webhook-dingtalk --- apiVersion : v1 kind : Service metadata : name : webhook-dingtalk namespace : monitoring spec : ports : - port : 80 protocol : TCP targetPort : 8060 selector : app : dingtalk sessionAffinity : None \u8fd9\u91cc\u6211\u901a\u8fc7\u6570\u636e\u6301\u4e45\u5316\uff0c\u628a\u914d\u7f6e\u6587\u4ef6config.yml\u548c\u62a5\u8b66\u6a21\u677f\u653e\u5728\u4e86config\u91cc\u9762\uff0c\u8fd9\u6837webhook\u4e0d\u7ba1\u90e8\u7f72\u5230\u54ea\u53f0node\uff0c\u90fd\u53ef\u4ee5\u8bfb\u53d6\u5230\u914d\u7f6e\u6587\u4ef6\u548c\u62a5\u8b66\u6a21\u677f\u3002 \u914d\u7f6econfig.yml templates : - /etc/prometheus-webhook-dingtalk/templates/legacy/template.tmpl targets : webhook1 : url : https://oapi.dingtalk.com/robot/send?access_token=\u66ff\u6362\u6210\u81ea\u5df1\u7684\u9489\u9489\u673a\u5668\u4ebatoken \u62a5\u8b66\u6a21\u677ftemplate.tmpl\uff1a {{ define \"ding.link.title\" }}[ \u76d1\u63a7\u62a5\u8b66 ]{{ end }} {{ define \"ding.link.content\" - }} {{ - if gt (len .Alerts.Firing) 0 - }} {{ range $i , $alert : = .Alerts.Firing }} [ \u544a\u8b66\u9879\u76ee ] :{{ index $alert.Labels \"alertname\" }} [\u544a\u8b66\u5b9e\u4f8b]:{{ index $alert.Labels \"instance\" }} [\u544a\u8b66\u7ea7\u522b]:{{ index $alert.Labels \"severity\" }} [\u544a\u8b66\u9600\u503c]:{{ index $alert.Annotations \"value\" }} [\u544a\u8b66\u8be6\u60c5]:{{ index $alert.Annotations \"description\" }} [\u89e6\u53d1\u65f6\u95f4]:{{ (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }} {{ end }}{{- end }} {{- if gt (len .Alerts.Resolved) 0 -}} {{ range $i, $alert := .Alerts.Resolved }} [\u9879\u76ee]:{{ index $alert.Labels \"alertname\" }} [\u5b9e\u4f8b]:{{ index $alert.Labels \"instance\" }} [\u72b6\u6001]:\u6062\u590d\u6b63\u5e38 [\u5f00\u59cb]:{{ (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }} [\u6062\u590d]:{{ (.EndsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }} {{ end }}{{- end }} {{- end }} \u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u6b22\u81ea\u5df1\u4fee\u6539\u6a21\u677f\uff0c\u201c.EndsAt.Add 28800e9\u201d\u662fUTC\u65f6\u95f4+8\u5c0f\u65f6\uff0c\u56e0\u4e3aprometheus\u548calertmanager\u9ed8\u8ba4\u90fd\u662f\u4f7f\u7528\u7684UTC\u65f6\u95f4\u3002 kubectl create configmap alertmanager-webhook-dingtalk --from-file=config.yml --from-file=template.tmpl -n monitoring","title":"Prometheus Operator\u9489\u9489\u62a5\u8b66\u914d\u7f6e"},{"location":"kubernetes/Prometheus%20Operator%E9%92%89%E9%92%89%E6%8A%A5%E8%AD%A6%E9%85%8D%E7%BD%AE/#prometheus-operator","text":"\u539f\u6587\u94fe\u63a5\uff1a https://www.amd5.cn/atang_4494.html alert\u62a5\u8b66\u89c4\u5219\u6536\u96c6\uff1a https://awesome-prometheus-alerts.grep.to/ \u6700\u8fd1\u628aPrometheus\u76d1\u63a7\u8fc1\u79fb\u5230\u4e86kubernetes\u96c6\u7fa4\u4e2d\uff0c\u90e8\u7f72\u6587\u6863\u53c2\u8003\u300aKubernetes\u73af\u5883\u4f7f\u7528Prometheus Operator\u81ea\u53d1\u73b0\u76d1\u63a7SpringBoot\u300b\uff0c\u5404\u7c7b\u76d1\u63a7\u9879\u7684\u6570\u636e\u91c7\u96c6\uff0c\u4ee5\u53cagrafana\u7684\u76d1\u63a7\u5c55\u793a\u6d4b\u8bd5\u90fd\u6b63\u5e38\uff0c\u4e8e\u662f\u8fdb\u5165\u4e0b\u4e00\u6b65\u62a5\u8b66\u7684\u8fc1\u5165\u6d4b\u8bd5\uff0calertmanager\u539f\u751f\u4e0d\u652f\u6301\u9489\u9489\u62a5\u8b66\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7webhook\u7684\u65b9\u5f0f\uff0c\u597d\u5728\u5df2\u7ecf\u6709\u5927\u4f6c\u5f00\u6e90\u4e86\u4e00\u5957\u57fa\u4e8e prometheus \u9489\u9489\u62a5\u8b66\u7684webhook\uff08\u9879\u76ee\u5730\u5740 https://github.com/timonwong/prometheus-webhook-dingtalk \uff09\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u914d\u7f6e\u4f7f\u7528\u5c31\u53ef\u4ee5\u4e86\u3002 1\u3001\u5728kubernetes\u96c6\u7fa4\u4e2d\uff0cpod\u4e4b\u95f4\u9700\u8981\u901a\u4fe1\uff0c\u9700\u8981\u4f7f\u7528service\uff0c\u6240\u4ee5\u5148\u7f16\u5199\u4e00\u4e2akubernetes\u7684yaml\u6587\u4ef6dingtalk-webhook.yaml\u3002 apiVersion : apps/v1 kind : Deployment metadata : name : webhook-dingtalk namespace : monitoring spec : selector : matchLabels : app : dingtalk replicas : 1 template : metadata : labels : app : dingtalk spec : containers : - name : dingtalk image : timonwong/prometheus-webhook-dingtalk:v1.4.0 imagePullPolicy : IfNotPresent args : - '--web.enable-ui' - '--web.enable-lifecycle' - '--config.file=/etc/prometheus-webhook-dingtalk/templates/legacy/config.yml' ports : - containerPort : 8060 protocol : TCP volumeMounts : - mountPath : \"/etc/prometheus-webhook-dingtalk/templates/legacy\" name : config volumes : - name : config configMap : name : alertmanager-webhook-dingtalk --- apiVersion : v1 kind : Service metadata : name : webhook-dingtalk namespace : monitoring spec : ports : - port : 80 protocol : TCP targetPort : 8060 selector : app : dingtalk sessionAffinity : None \u8fd9\u91cc\u6211\u901a\u8fc7\u6570\u636e\u6301\u4e45\u5316\uff0c\u628a\u914d\u7f6e\u6587\u4ef6config.yml\u548c\u62a5\u8b66\u6a21\u677f\u653e\u5728\u4e86config\u91cc\u9762\uff0c\u8fd9\u6837webhook\u4e0d\u7ba1\u90e8\u7f72\u5230\u54ea\u53f0node\uff0c\u90fd\u53ef\u4ee5\u8bfb\u53d6\u5230\u914d\u7f6e\u6587\u4ef6\u548c\u62a5\u8b66\u6a21\u677f\u3002 \u914d\u7f6econfig.yml templates : - /etc/prometheus-webhook-dingtalk/templates/legacy/template.tmpl targets : webhook1 : url : https://oapi.dingtalk.com/robot/send?access_token=\u66ff\u6362\u6210\u81ea\u5df1\u7684\u9489\u9489\u673a\u5668\u4ebatoken \u62a5\u8b66\u6a21\u677ftemplate.tmpl\uff1a {{ define \"ding.link.title\" }}[ \u76d1\u63a7\u62a5\u8b66 ]{{ end }} {{ define \"ding.link.content\" - }} {{ - if gt (len .Alerts.Firing) 0 - }} {{ range $i , $alert : = .Alerts.Firing }} [ \u544a\u8b66\u9879\u76ee ] :{{ index $alert.Labels \"alertname\" }} [\u544a\u8b66\u5b9e\u4f8b]:{{ index $alert.Labels \"instance\" }} [\u544a\u8b66\u7ea7\u522b]:{{ index $alert.Labels \"severity\" }} [\u544a\u8b66\u9600\u503c]:{{ index $alert.Annotations \"value\" }} [\u544a\u8b66\u8be6\u60c5]:{{ index $alert.Annotations \"description\" }} [\u89e6\u53d1\u65f6\u95f4]:{{ (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }} {{ end }}{{- end }} {{- if gt (len .Alerts.Resolved) 0 -}} {{ range $i, $alert := .Alerts.Resolved }} [\u9879\u76ee]:{{ index $alert.Labels \"alertname\" }} [\u5b9e\u4f8b]:{{ index $alert.Labels \"instance\" }} [\u72b6\u6001]:\u6062\u590d\u6b63\u5e38 [\u5f00\u59cb]:{{ (.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }} [\u6062\u590d]:{{ (.EndsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }} {{ end }}{{- end }} {{- end }} \u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u559c\u6b22\u81ea\u5df1\u4fee\u6539\u6a21\u677f\uff0c\u201c.EndsAt.Add 28800e9\u201d\u662fUTC\u65f6\u95f4+8\u5c0f\u65f6\uff0c\u56e0\u4e3aprometheus\u548calertmanager\u9ed8\u8ba4\u90fd\u662f\u4f7f\u7528\u7684UTC\u65f6\u95f4\u3002 kubectl create configmap alertmanager-webhook-dingtalk --from-file=config.yml --from-file=template.tmpl -n monitoring","title":"Prometheus Operator\u9489\u9489\u62a5\u8b66\u914d\u7f6e"},{"location":"kubernetes/%E4%BD%BF%E7%94%A8StorageClass%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90NFS%E7%B1%BB%E5%9E%8B%E7%9A%84PV/","text":"Kubernetes\u4f7f\u7528StorageClass\u52a8\u6001\u751f\u6210NFS\u7c7b\u578b\u7684PV \u00b6 \u5b98\u65b9\u6587\u6863\uff1a https://github.com/kubernetes-incubator/external-storage/tree/master/nfs \u4ee5\u81ea\u5df1\u5355\u72ec\u5b89\u88c5NFS\u7cfb\u7edf\u4e3a\u4f8b 1\u3001\u5b89\u88c5nfs\u8bbe\u7f6e\u5171\u4eab\uff08\u751f\u4ea7\u73af\u5883\u5efa\u8bae\u4f7f\u7528\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u4e91\u5171\u4eab\u5b58\u50a8\u5982\uff1a\u963f\u91cc\u4e91\u7684NAS\uff0cAWS\u7684EBS\uff09 \u00b6 # \u5173\u95ed\u9632\u706b\u5899 systemctl stop firewalld.service systemctl disable firewalld.service # \u5b89\u88c5\u914d\u7f6e nfs yum -y install nfs-utils rpcbind # \u5171\u4eab\u76ee\u5f55\u8bbe\u7f6e\u6743\u9650\uff1a chmod 755 /data/k8s/ # \u914d\u7f6e nfs\uff0cnfs \u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u5728 /etc/exports \u6587\u4ef6\u4e0b\uff0c\u5728\u8be5\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u914d\u7f6e\u4fe1\u606f\uff1a vim /etc/exports /data/k8s *(rw,sync,no_root_squash) \u914d\u7f6e\u8bf4\u660e\uff1a /data/k8s\uff1a\u662f\u5171\u4eab\u7684\u6570\u636e\u76ee\u5f55 *\uff1a\u8868\u793a\u4efb\u4f55\u4eba\u90fd\u6709\u6743\u9650\u8fde\u63a5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u6bb5\uff0c\u4e00\u4e2a IP\uff0c\u4e5f\u53ef\u4ee5\u662f\u57df\u540d rw\uff1a\u8bfb\u5199\u7684\u6743\u9650 sync\uff1a\u8868\u793a\u6587\u4ef6\u540c\u65f6\u5199\u5165\u786c\u76d8\u548c\u5185\u5b58 no_root_squash\uff1a\u5f53\u767b\u5f55 NFS \u4e3b\u673a\u4f7f\u7528\u5171\u4eab\u76ee\u5f55\u7684\u4f7f\u7528\u8005\u662f root \u65f6\uff0c\u5176\u6743\u9650\u5c06\u88ab\u8f6c\u6362\u6210\u4e3a\u533f\u540d\u4f7f\u7528\u8005\uff0c\u901a\u5e38\u5b83\u7684 UID \u4e0e GID\uff0c\u90fd\u4f1a\u53d8\u6210 nobody \u8eab\u4efd \u542f\u52a8\u670d\u52a1\uff1a \u6ce8\u610f\u542f\u52a8\u987a\u5e8f\uff0c\u5148\u542f\u52a8 rpcbind systemctl start rpcbind.service systemctl enable rpcbind systemctl start nfs.service systemctl enable nfs \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u628a nfs server \u7ed9\u5b89\u88c5\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8282\u70b9\u4e0a\u6765\u5b89\u88c5 nfs \u7684\u5ba2\u6237\u7aef\u6765\u9a8c\u8bc1\u4e0b nfs # \u5173\u95ed\u9632\u706b\u5899 systemctl stop firewalld.service systemctl disable firewalld.service # \u5b89\u88c5\u914d\u7f6e nfs yum -y install nfs-utils rpcbind \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u548c\u4e0a\u9762\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u5148\u542f\u52a8 rpc\u3001\u7136\u540e\u542f\u52a8 nfs\uff1a systemctl start rpcbind.service systemctl enable rpcbind.service systemctl start nfs.service systemctl enable nfs.service \u6302\u8f7d\u6570\u636e\u76ee\u5f55 \u5ba2\u6237\u7aef\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5728\u5ba2\u6237\u7aef\u6765\u6302\u8f7d\u4e0b nfs \u6d4b\u8bd5\u4e0b\uff1a \u9996\u5148\u68c0\u67e5\u4e0b nfs \u662f\u5426\u6709\u5171\u4eab\u76ee\u5f55\uff1a showmount -e 10.23.78.228 Export list for 10.23.78.228: /data/k8s * \u7136\u540e\u6211\u4eec\u5728\u5ba2\u6237\u7aef\u4e0a\u65b0\u5efa\u76ee\u5f55\uff1a mkdir -p /root/course/kubeadm/data \u5c06 nfs \u5171\u4eab\u76ee\u5f55\u6302\u8f7d\u5230\u4e0a\u9762\u7684\u76ee\u5f55\uff1a mount -t nfs 10.151.30.57:/data/k8s /root/course/kubeadm/data 2\u3001\u521b\u5efaStorageClass \u00b6 \u8981\u4f7f\u7528 StorageClass\uff0c\u6211\u4eec\u5c31\u5f97\u5b89\u88c5\u5bf9\u5e94\u7684\u81ea\u52a8\u914d\u7f6e\u7a0b\u5e8f\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5b58\u50a8\u540e\u7aef\u4f7f\u7528\u7684\u662f nfs\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230\u4e00\u4e2a nfs-client \u7684\u81ea\u52a8\u914d\u7f6e\u7a0b\u5e8f\uff0c\u6211\u4eec\u4e5f\u53eb\u5b83 Provisioner\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u6211\u4eec\u5df2\u7ecf\u914d\u7f6e\u597d\u7684 nfs \u670d\u52a1\u5668\uff0c\u6765\u81ea\u52a8\u521b\u5efa\u6301\u4e45\u5377\uff0c\u4e5f\u5c31\u662f\u81ea\u52a8\u5e2e\u6211\u4eec\u521b\u5efa PV\u3002 \u81ea\u52a8\u521b\u5efa\u7684 PV \u4ee5 {namespace}- {namespace}- -${pvName}\u8fd9\u6837\u7684\u547d\u540d\u683c\u5f0f\u521b\u5efa\u5728 NFS \u670d\u52a1\u5668\u4e0a\u7684\u5171\u4eab\u6570\u636e\u76ee\u5f55\u4e2d \u800c\u5f53\u8fd9\u4e2a PV \u88ab\u56de\u6536\u540e\u4f1a\u4ee5archieved- {namespace}- {namespace}- -${pvName}\u8fd9\u6837\u7684\u547d\u540d\u683c\u5f0f\u5b58\u5728 NFS \u670d\u52a1\u5668\u4e0a\u3002 \u7b2c\u4e00\u6b65\uff1a\u914d\u7f6e Deployment\uff0c\u5c06\u91cc\u9762\u7684\u5bf9\u5e94\u7684\u53c2\u6570\u66ff\u6362\u6210\u6211\u4eec\u81ea\u5df1\u7684 nfs \u914d\u7f6e\uff08nfs-client.yaml\uff09 kind: Deployment apiVersion: apps/v1 metadata: name: nfs-client-provisioner spec: replicas: 1 strategy: type: Recreate selector: matchLabels: app: nfs-client-provisioner template: metadata: labels: app: nfs-client-provisioner spec: serviceAccountName: nfs-client-provisioner containers: - name: nfs-client-provisioner image: quay.io/external_storage/nfs-client-provisioner:latest volumeMounts: - name: nfs-client-root mountPath: /persistentvolumes env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 10.23.78.228 - name: NFS_PATH value: /data/k8s volumes: - name: nfs-client-root nfs: server: 10.23.78.228 path: /data/k8s \u7b2c\u4e8c\u6b65\uff1a\u5c06\u73af\u5883\u53d8\u91cf NFS_SERVER \u548c NFS_PATH \u66ff\u6362\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u4e0b\u9762\u7684 nfs \u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a nfs-client-provisioner \u7684serviceAccount\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u521b\u5efa\u4e00\u4e2a sa\uff0c\u7136\u540e\u7ed1\u5b9a\u4e0a\u5bf9\u5e94\u7684\u6743\u9650\uff1a\uff08nfs-client-sa.yaml\uff09 apiVersion: v1 kind: ServiceAccount metadata: name: nfs-client-provisioner --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: name: nfs-client-provisioner-runner rules: - apiGroups: [\"\"] resources: [\"persistentvolumes\"] verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"] - apiGroups: [\"\"] resources: [\"persistentvolumeclaims\"] verbs: [\"get\", \"list\", \"watch\", \"update\"] - apiGroups: [\"storage.k8s.io\"] resources: [\"storageclasses\"] verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: [\"events\"] verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"] - apiGroups: [\"\"] resources: [\"endpoints\"] verbs: [\"create\", \"delete\", \"get\", \"list\", \"watch\", \"patch\", \"update\"] --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata: name: run-nfs-client-provisioner subjects: - kind: ServiceAccount name: nfs-client-provisioner namespace: default roleRef: kind: ClusterRole name: nfs-client-provisioner-runner apiGroup: rbac.authorization.k8s.io \u6211\u4eec\u8fd9\u91cc\u65b0\u5efa\u7684\u4e00\u4e2a\u540d\u4e3a nfs-client-provisioner \u7684ServiceAccount\uff0c\u7136\u540e\u7ed1\u5b9a\u4e86\u4e00\u4e2a\u540d\u4e3a nfs-client-provisioner-runner \u7684ClusterRole\uff0c\u800c\u8be5ClusterRole\u58f0\u660e\u4e86\u4e00\u4e9b\u6743\u9650\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u5bf9persistentvolumes\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u7b49\u6743\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8be5ServiceAccount\u6765\u81ea\u52a8\u521b\u5efa PV\u3002 \u7b2c\u4e09\u6b65\uff1anfs-client \u7684 Deployment \u58f0\u660e\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u521b\u5efa\u4e00\u4e2aStorageClass\u5bf9\u8c61\u4e86\uff1a\uff08nfs-client-class.yaml\uff09 apiVersion: storage.k8s.io/v1 kind: StorageClass metadata: name: course-nfs-storage provisioner: fuseim.pri/ifs # or choose another name, must match deployment's env PROVISIONER_NAME' \u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a course-nfs-storage \u7684StorageClass\u5bf9\u8c61\uff0c\u6ce8\u610f\u4e0b\u9762\u7684provisioner\u5bf9\u5e94\u7684\u503c\u4e00\u5b9a\u8981\u548c\u4e0a\u9762\u7684Deployment\u4e0b\u9762\u7684 PROVISIONER_NAME \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\u4e00\u6837\u3002 \u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u5427\uff1a kubectl create -f nfs-client.yaml kubectl create -f nfs-client-sa.yaml kubectl create -f nfs-client-class.yaml \u4f7f\u7528helm\u5b89\u88c5 \u00b6 helm install course-nfs-storage --set nfs.server=10.23.78.228 --set nfs.path=/data/nfs stable/nfs-client-provisioner \u6d4b\u8bd5 \u00b6 \u521b\u5efatest-pvc.yaml apiVersion : v1 kind : PersistentVolumeClaim metadata : name : test-pvc annotations : volume.beta.kubernetes.io/storage-class : \"course-nfs-storage\" spec : accessModes : - ReadWriteMany resources : requests : storage : 1Mi FAQ \u00b6 kubernetes v1.20.1\u4e0d\u80fd\u4f7f\u7528nfs\u4f5c\u4e3astorageclass,\u62a5\u9519\u201cprovision \"default/test-pvc\" class \"nfs-client\": unexpected error getting claim reference: selfLink was empty\u201d Current workaround is to edit /etc/kubernetes/manifests/kube-apiserver.yaml Under here : spec : containers : - command : - kube-apiserver Add this line : - --feature-gates=RemoveSelfLink=false","title":"Kubernetes\u4f7f\u7528StorageClass\u52a8\u6001\u751f\u6210NFS\u7c7b\u578b\u7684PV"},{"location":"kubernetes/%E4%BD%BF%E7%94%A8StorageClass%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90NFS%E7%B1%BB%E5%9E%8B%E7%9A%84PV/#kubernetesstorageclassnfspv","text":"\u5b98\u65b9\u6587\u6863\uff1a https://github.com/kubernetes-incubator/external-storage/tree/master/nfs \u4ee5\u81ea\u5df1\u5355\u72ec\u5b89\u88c5NFS\u7cfb\u7edf\u4e3a\u4f8b","title":"Kubernetes\u4f7f\u7528StorageClass\u52a8\u6001\u751f\u6210NFS\u7c7b\u578b\u7684PV"},{"location":"kubernetes/%E4%BD%BF%E7%94%A8StorageClass%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90NFS%E7%B1%BB%E5%9E%8B%E7%9A%84PV/#1nfsnasawsebs","text":"# \u5173\u95ed\u9632\u706b\u5899 systemctl stop firewalld.service systemctl disable firewalld.service # \u5b89\u88c5\u914d\u7f6e nfs yum -y install nfs-utils rpcbind # \u5171\u4eab\u76ee\u5f55\u8bbe\u7f6e\u6743\u9650\uff1a chmod 755 /data/k8s/ # \u914d\u7f6e nfs\uff0cnfs \u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u5728 /etc/exports \u6587\u4ef6\u4e0b\uff0c\u5728\u8be5\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e0b\u9762\u7684\u914d\u7f6e\u4fe1\u606f\uff1a vim /etc/exports /data/k8s *(rw,sync,no_root_squash) \u914d\u7f6e\u8bf4\u660e\uff1a /data/k8s\uff1a\u662f\u5171\u4eab\u7684\u6570\u636e\u76ee\u5f55 *\uff1a\u8868\u793a\u4efb\u4f55\u4eba\u90fd\u6709\u6743\u9650\u8fde\u63a5\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u6bb5\uff0c\u4e00\u4e2a IP\uff0c\u4e5f\u53ef\u4ee5\u662f\u57df\u540d rw\uff1a\u8bfb\u5199\u7684\u6743\u9650 sync\uff1a\u8868\u793a\u6587\u4ef6\u540c\u65f6\u5199\u5165\u786c\u76d8\u548c\u5185\u5b58 no_root_squash\uff1a\u5f53\u767b\u5f55 NFS \u4e3b\u673a\u4f7f\u7528\u5171\u4eab\u76ee\u5f55\u7684\u4f7f\u7528\u8005\u662f root \u65f6\uff0c\u5176\u6743\u9650\u5c06\u88ab\u8f6c\u6362\u6210\u4e3a\u533f\u540d\u4f7f\u7528\u8005\uff0c\u901a\u5e38\u5b83\u7684 UID \u4e0e GID\uff0c\u90fd\u4f1a\u53d8\u6210 nobody \u8eab\u4efd \u542f\u52a8\u670d\u52a1\uff1a \u6ce8\u610f\u542f\u52a8\u987a\u5e8f\uff0c\u5148\u542f\u52a8 rpcbind systemctl start rpcbind.service systemctl enable rpcbind systemctl start nfs.service systemctl enable nfs \u5230\u8fd9\u91cc\u6211\u4eec\u5c31\u628a nfs server \u7ed9\u5b89\u88c5\u6210\u529f\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8282\u70b9\u4e0a\u6765\u5b89\u88c5 nfs \u7684\u5ba2\u6237\u7aef\u6765\u9a8c\u8bc1\u4e0b nfs # \u5173\u95ed\u9632\u706b\u5899 systemctl stop firewalld.service systemctl disable firewalld.service # \u5b89\u88c5\u914d\u7f6e nfs yum -y install nfs-utils rpcbind \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u548c\u4e0a\u9762\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u5148\u542f\u52a8 rpc\u3001\u7136\u540e\u542f\u52a8 nfs\uff1a systemctl start rpcbind.service systemctl enable rpcbind.service systemctl start nfs.service systemctl enable nfs.service \u6302\u8f7d\u6570\u636e\u76ee\u5f55 \u5ba2\u6237\u7aef\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5728\u5ba2\u6237\u7aef\u6765\u6302\u8f7d\u4e0b nfs \u6d4b\u8bd5\u4e0b\uff1a \u9996\u5148\u68c0\u67e5\u4e0b nfs \u662f\u5426\u6709\u5171\u4eab\u76ee\u5f55\uff1a showmount -e 10.23.78.228 Export list for 10.23.78.228: /data/k8s * \u7136\u540e\u6211\u4eec\u5728\u5ba2\u6237\u7aef\u4e0a\u65b0\u5efa\u76ee\u5f55\uff1a mkdir -p /root/course/kubeadm/data \u5c06 nfs \u5171\u4eab\u76ee\u5f55\u6302\u8f7d\u5230\u4e0a\u9762\u7684\u76ee\u5f55\uff1a mount -t nfs 10.151.30.57:/data/k8s /root/course/kubeadm/data","title":"1\u3001\u5b89\u88c5nfs\u8bbe\u7f6e\u5171\u4eab\uff08\u751f\u4ea7\u73af\u5883\u5efa\u8bae\u4f7f\u7528\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u4e91\u5171\u4eab\u5b58\u50a8\u5982\uff1a\u963f\u91cc\u4e91\u7684NAS\uff0cAWS\u7684EBS\uff09"},{"location":"kubernetes/%E4%BD%BF%E7%94%A8StorageClass%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90NFS%E7%B1%BB%E5%9E%8B%E7%9A%84PV/#2storageclass","text":"\u8981\u4f7f\u7528 StorageClass\uff0c\u6211\u4eec\u5c31\u5f97\u5b89\u88c5\u5bf9\u5e94\u7684\u81ea\u52a8\u914d\u7f6e\u7a0b\u5e8f\uff0c\u6bd4\u5982\u6211\u4eec\u8fd9\u91cc\u5b58\u50a8\u540e\u7aef\u4f7f\u7528\u7684\u662f nfs\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u5230\u4e00\u4e2a nfs-client \u7684\u81ea\u52a8\u914d\u7f6e\u7a0b\u5e8f\uff0c\u6211\u4eec\u4e5f\u53eb\u5b83 Provisioner\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u6211\u4eec\u5df2\u7ecf\u914d\u7f6e\u597d\u7684 nfs \u670d\u52a1\u5668\uff0c\u6765\u81ea\u52a8\u521b\u5efa\u6301\u4e45\u5377\uff0c\u4e5f\u5c31\u662f\u81ea\u52a8\u5e2e\u6211\u4eec\u521b\u5efa PV\u3002 \u81ea\u52a8\u521b\u5efa\u7684 PV \u4ee5 {namespace}- {namespace}- -${pvName}\u8fd9\u6837\u7684\u547d\u540d\u683c\u5f0f\u521b\u5efa\u5728 NFS \u670d\u52a1\u5668\u4e0a\u7684\u5171\u4eab\u6570\u636e\u76ee\u5f55\u4e2d \u800c\u5f53\u8fd9\u4e2a PV \u88ab\u56de\u6536\u540e\u4f1a\u4ee5archieved- {namespace}- {namespace}- -${pvName}\u8fd9\u6837\u7684\u547d\u540d\u683c\u5f0f\u5b58\u5728 NFS \u670d\u52a1\u5668\u4e0a\u3002 \u7b2c\u4e00\u6b65\uff1a\u914d\u7f6e Deployment\uff0c\u5c06\u91cc\u9762\u7684\u5bf9\u5e94\u7684\u53c2\u6570\u66ff\u6362\u6210\u6211\u4eec\u81ea\u5df1\u7684 nfs \u914d\u7f6e\uff08nfs-client.yaml\uff09 kind: Deployment apiVersion: apps/v1 metadata: name: nfs-client-provisioner spec: replicas: 1 strategy: type: Recreate selector: matchLabels: app: nfs-client-provisioner template: metadata: labels: app: nfs-client-provisioner spec: serviceAccountName: nfs-client-provisioner containers: - name: nfs-client-provisioner image: quay.io/external_storage/nfs-client-provisioner:latest volumeMounts: - name: nfs-client-root mountPath: /persistentvolumes env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 10.23.78.228 - name: NFS_PATH value: /data/k8s volumes: - name: nfs-client-root nfs: server: 10.23.78.228 path: /data/k8s \u7b2c\u4e8c\u6b65\uff1a\u5c06\u73af\u5883\u53d8\u91cf NFS_SERVER \u548c NFS_PATH \u66ff\u6362\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u4e0b\u9762\u7684 nfs \u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a nfs-client-provisioner \u7684serviceAccount\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u521b\u5efa\u4e00\u4e2a sa\uff0c\u7136\u540e\u7ed1\u5b9a\u4e0a\u5bf9\u5e94\u7684\u6743\u9650\uff1a\uff08nfs-client-sa.yaml\uff09 apiVersion: v1 kind: ServiceAccount metadata: name: nfs-client-provisioner --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata: name: nfs-client-provisioner-runner rules: - apiGroups: [\"\"] resources: [\"persistentvolumes\"] verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"] - apiGroups: [\"\"] resources: [\"persistentvolumeclaims\"] verbs: [\"get\", \"list\", \"watch\", \"update\"] - apiGroups: [\"storage.k8s.io\"] resources: [\"storageclasses\"] verbs: [\"get\", \"list\", \"watch\"] - apiGroups: [\"\"] resources: [\"events\"] verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"] - apiGroups: [\"\"] resources: [\"endpoints\"] verbs: [\"create\", \"delete\", \"get\", \"list\", \"watch\", \"patch\", \"update\"] --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata: name: run-nfs-client-provisioner subjects: - kind: ServiceAccount name: nfs-client-provisioner namespace: default roleRef: kind: ClusterRole name: nfs-client-provisioner-runner apiGroup: rbac.authorization.k8s.io \u6211\u4eec\u8fd9\u91cc\u65b0\u5efa\u7684\u4e00\u4e2a\u540d\u4e3a nfs-client-provisioner \u7684ServiceAccount\uff0c\u7136\u540e\u7ed1\u5b9a\u4e86\u4e00\u4e2a\u540d\u4e3a nfs-client-provisioner-runner \u7684ClusterRole\uff0c\u800c\u8be5ClusterRole\u58f0\u660e\u4e86\u4e00\u4e9b\u6743\u9650\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u5bf9persistentvolumes\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u7b49\u6743\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8be5ServiceAccount\u6765\u81ea\u52a8\u521b\u5efa PV\u3002 \u7b2c\u4e09\u6b65\uff1anfs-client \u7684 Deployment \u58f0\u660e\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6765\u521b\u5efa\u4e00\u4e2aStorageClass\u5bf9\u8c61\u4e86\uff1a\uff08nfs-client-class.yaml\uff09 apiVersion: storage.k8s.io/v1 kind: StorageClass metadata: name: course-nfs-storage provisioner: fuseim.pri/ifs # or choose another name, must match deployment's env PROVISIONER_NAME' \u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a course-nfs-storage \u7684StorageClass\u5bf9\u8c61\uff0c\u6ce8\u610f\u4e0b\u9762\u7684provisioner\u5bf9\u5e94\u7684\u503c\u4e00\u5b9a\u8981\u548c\u4e0a\u9762\u7684Deployment\u4e0b\u9762\u7684 PROVISIONER_NAME \u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u503c\u4e00\u6837\u3002 \u73b0\u5728\u6211\u4eec\u6765\u521b\u5efa\u8fd9\u4e9b\u8d44\u6e90\u5bf9\u8c61\u5427\uff1a kubectl create -f nfs-client.yaml kubectl create -f nfs-client-sa.yaml kubectl create -f nfs-client-class.yaml","title":"2\u3001\u521b\u5efaStorageClass"},{"location":"kubernetes/%E4%BD%BF%E7%94%A8StorageClass%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90NFS%E7%B1%BB%E5%9E%8B%E7%9A%84PV/#helm","text":"helm install course-nfs-storage --set nfs.server=10.23.78.228 --set nfs.path=/data/nfs stable/nfs-client-provisioner","title":"\u4f7f\u7528helm\u5b89\u88c5"},{"location":"kubernetes/%E4%BD%BF%E7%94%A8StorageClass%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90NFS%E7%B1%BB%E5%9E%8B%E7%9A%84PV/#_1","text":"\u521b\u5efatest-pvc.yaml apiVersion : v1 kind : PersistentVolumeClaim metadata : name : test-pvc annotations : volume.beta.kubernetes.io/storage-class : \"course-nfs-storage\" spec : accessModes : - ReadWriteMany resources : requests : storage : 1Mi","title":"\u6d4b\u8bd5"},{"location":"kubernetes/%E4%BD%BF%E7%94%A8StorageClass%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90NFS%E7%B1%BB%E5%9E%8B%E7%9A%84PV/#faq","text":"kubernetes v1.20.1\u4e0d\u80fd\u4f7f\u7528nfs\u4f5c\u4e3astorageclass,\u62a5\u9519\u201cprovision \"default/test-pvc\" class \"nfs-client\": unexpected error getting claim reference: selfLink was empty\u201d Current workaround is to edit /etc/kubernetes/manifests/kube-apiserver.yaml Under here : spec : containers : - command : - kube-apiserver Add this line : - --feature-gates=RemoveSelfLink=false","title":"FAQ"},{"location":"mkdocs/","text":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2 \u00b6 \u672c\u6587\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b3\u4e2a\u90e8\u5206 mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9 markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548cmkdocs-material\u652f\u6301\u7684\u6269\u5c55\u8bed\u6cd5 mkdocs-material\u6240\u652f\u6301\u7684\u5404\u79cd\u6269\u5c55","title":"1. \u672c\u6587\u4e3b\u9898"},{"location":"mkdocs/#mkdocs-material","text":"\u672c\u6587\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b3\u4e2a\u90e8\u5206 mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9 markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548cmkdocs-material\u652f\u6301\u7684\u6269\u5c55\u8bed\u6cd5 mkdocs-material\u6240\u652f\u6301\u7684\u5404\u79cd\u6269\u5c55","title":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2"},{"location":"mkdocs/appendix/baidu_tongji/","text":"\u5148\u5728\u767e\u5ea6\u7edf\u8ba1\u91cc\u521b\u5efa\u6dfb\u52a0\u7ad9\u70b9\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: \u786e\u5b9a\u540e\u4f1a\u770b\u5230javascript\u4ee3\u7801\uff0c\u590d\u5236\u4ee3\u7801 \u5728docs\u76ee\u5f55\u4e0b\u65b0\u5efajs\u76ee\u5f55\uff0c\u5e76\u5728docs/js\u76ee\u5f55\u91cc\u653e\u7f6ebaidu-tongji.js\uff0c\u5c06\u590d\u5236\u7684\u4ee3\u7801\u7c98\u8d34\u8fdb\u6765\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: var _hmt = _hmt || []; ( function () { var hm = document . createElement ( \"script\" ); hm . src = \"https://hm.baidu.com/hm.js?51fafb2ac8f80ecf43b05bb4cc281020\" ; var s = document . getElementsByTagName ( \"script\" )[ 0 ]; s . parentNode . insertBefore ( hm , s ); })(); \u6700\u540e\u5728mkdocs.yml\u91cc\u65b0\u589e\u5982\u4e0b\u914d\u7f6e: extra_javascript : - 'js/baidu-tongji.js' \u6548\u679c: js\u4f1a\u81ea\u52a8\u52a0\u5728 \u524d\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b:","title":"3. \u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1"},{"location":"mkdocs/appendix/chrome/","text":"\u7ecf\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5f53\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e2d\u6587\u8bed\u8a00\u65f6\uff0c\u901a\u8fc7chrome\u6d4f\u89c8\u5668\u8bbf\u95ee\uff0c\u5728\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u56fa\u5b9a\u5c3a\u5bf8\u8303\u56f4\u5185\uff0c\u6700\u53f3\u8fb9\u4e00\u680f\u663e\u793a\u4f1a\u6709\u5f02\u5e38\uff0c\u6bd4\u5982\u8fd9\u6837 \u5176\u4ed6\u6d4f\u89c8\u5668\u6216\u8005\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u82f1\u6587\u65f6chrome\u6d4f\u89c8\u5668\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cdBUG \u7b14\u8005\u5df2\u5c06\u8be5\u95ee\u9898\u63d0\u4ea4\u7ed9mkdocs-material\u7684\u539f\u4f5c\u8005\uff0c\u8be6\u89c1 https://github.com/squidfunk/mkdocs-material/issues/911 \u7b14\u8005\u4f1a\u5c06\u6301\u7eed\u8ddf\u8fdb\u8be5BUG\u7684\u8fdb\u5c55","title":"10. \u5173\u4e8echrome\u663e\u793a\u5f02\u5e38\u7684\u95ee\u9898"},{"location":"mkdocs/appendix/color/","text":"\u4ecb\u7ecd \u00b6 mkdocs-material\u652f\u6301google material ui\u89c4\u8303\u5b9a\u4e49\u768419\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u4f7f\u7528 \u00b6 \u5728mkdocs.yml\u91cc\u6dfb\u52a0\u914d\u7f6e\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: extra : palette : primary : 'Blue Grey' accent : 'Pink' primary\u548caccent\u7684\u9ed8\u8ba4\u503c\u5747\u662f\"Indigo\" 19\u79cd\u4e3b\u4f53\u914d\u8272 \u00b6 \u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u4e3b\u4f53\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) }) 16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u00b6 \u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"4. \u914d\u8272"},{"location":"mkdocs/appendix/color/#_1","text":"mkdocs-material\u652f\u6301google material ui\u89c4\u8303\u5b9a\u4e49\u768419\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272","title":"\u4ecb\u7ecd"},{"location":"mkdocs/appendix/color/#_2","text":"\u5728mkdocs.yml\u91cc\u6dfb\u52a0\u914d\u7f6e\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: extra : palette : primary : 'Blue Grey' accent : 'Pink' primary\u548caccent\u7684\u9ed8\u8ba4\u503c\u5747\u662f\"Indigo\"","title":"\u4f7f\u7528"},{"location":"mkdocs/appendix/color/#19","text":"\u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u4e3b\u4f53\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) })","title":"19\u79cd\u4e3b\u4f53\u914d\u8272"},{"location":"mkdocs/appendix/color/#16","text":"\u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272"},{"location":"mkdocs/appendix/emoji_shortname/","text":"\u8be5\u8868\u683c\u4e3aemojione-3.1.2(pymdownx-4.0\u96c6\u6210)\u7684\u5168\u540d\u548c\u77ed\u540d\u6620\u5c04\u8868\uff0c\u51712666\u4e2a \u5168\u540d \u77ed\u540d hundred points :100: input numbers :1234: pool 8 ball :8ball: A button (blood type) :a: AB button (blood type) :ab: input latin letters :abc: input latin lowercase :abcd: Japanese \\u201cacceptable\\u201d button :accept: adult :adult: adult: light skin tone :adult_tone1: adult: medium-light skin tone :adult_tone2: adult: medium skin tone :adult_tone3: adult: medium-dark skin tone :adult_tone4: adult: dark skin tone :adult_tone5: aerial tramway :aerial_tramway: airplane :airplane: airplane arrival :airplane_arriving: airplane departure :airplane_departure: small airplane :airplane_small: alarm clock :alarm_clock: alembic :alembic: alien :alien: ambulance :ambulance: amphora :amphora: anchor :anchor: baby angel :angel: baby angel: light skin tone :angel_tone1: baby angel: medium-light skin tone :angel_tone2: baby angel: medium skin tone :angel_tone3: baby angel: medium-dark skin tone :angel_tone4: baby angel: dark skin tone :angel_tone5: anger symbol :anger: right anger bubble :anger_right: angry face :angry: anguished face :anguished: ant :ant: red apple :apple: Aquarius :aquarius: Aries :aries: reverse button :arrow_backward: fast down button :arrow_double_down: fast up button :arrow_double_up: down arrow :arrow_down: down button :arrow_down_small: play button :arrow_forward: right arrow curving down :arrow_heading_down: right arrow curving up :arrow_heading_up: left arrow :arrow_left: down-left arrow :arrow_lower_left: down-right arrow :arrow_lower_right: right arrow :arrow_right: left arrow curving right :arrow_right_hook: up arrow :arrow_up: up-down arrow :arrow_up_down: up button :arrow_up_small: up-left arrow :arrow_upper_left: up-right arrow :arrow_upper_right: clockwise vertical arrows :arrows_clockwise: anticlockwise arrows button :arrows_counterclockwise: artist palette :art: articulated lorry :articulated_lorry: keycap: * :asterisk: asterisk :asterisk_symbol: astonished face :astonished: running shoe :athletic_shoe: ATM sign :atm: atom symbol :atom: avocado :avocado: B button (blood type) :b: baby :baby: baby bottle :baby_bottle: baby chick :baby_chick: baby symbol :baby_symbol: baby: light skin tone :baby_tone1: baby: medium-light skin tone :baby_tone2: baby: medium skin tone :baby_tone3: baby: medium-dark skin tone :baby_tone4: baby: dark skin tone :baby_tone5: BACK arrow :back: bacon :bacon: badminton :badminton: baggage claim :baggage_claim: balloon :balloon: ballot box with ballot :ballot_box: ballot box with check :ballot_box_with_check: pine decoration :bamboo: banana :banana: double exclamation mark :bangbang: bank :bank: bar chart :bar_chart: barber pole :barber: baseball :baseball: basketball :basketball: bat :bat: person taking bath :bath: person taking bath: light skin tone :bath_tone1: person taking bath: medium-light skin tone :bath_tone2: person taking bath: medium skin tone :bath_tone3: person taking bath: medium-dark skin tone :bath_tone4: person taking bath: dark skin tone :bath_tone5: bathtub :bathtub: battery :battery: beach with umbrella :beach: umbrella on ground :beach_umbrella: bear face :bear: bearded person :bearded_person: bearded person: light skin tone :bearded_person_tone1: bearded person: medium-light skin tone :bearded_person_tone2: bearded person: medium skin tone :bearded_person_tone3: bearded person: medium-dark skin tone :bearded_person_tone4: bearded person: dark skin tone :bearded_person_tone5: bed :bed: honeybee :bee: beer mug :beer: clinking beer mugs :beers: lady beetle :beetle: Japanese symbol for beginner :beginner: bell :bell: bellhop bell :bellhop: bento box :bento: bicycle :bike: bikini :bikini: billed cap :billed_cap: biohazard :biohazard: bird :bird: birthday cake :birthday: black circle :black_circle: black heart :black_heart: joker :black_joker: black large square :black_large_square: black medium-small square :black_medium_small_square: black medium square :black_medium_square: black nib :black_nib: black small square :black_small_square: black square button :black_square_button: blond-haired man :blond-haired_man: blond-haired man: light skin tone :blond-haired_man_tone1: blond-haired man: medium-light skin tone :blond-haired_man_tone2: blond-haired man: medium skin tone :blond-haired_man_tone3: blond-haired man: medium-dark skin tone :blond-haired_man_tone4: blond-haired man: dark skin tone :blond-haired_man_tone5: blond-haired woman :blond-haired_woman: blond-haired woman: light skin tone :blond-haired_woman_tone1: blond-haired woman: medium-light skin tone :blond-haired_woman_tone2: blond-haired woman: medium skin tone :blond-haired_woman_tone3: blond-haired woman: medium-dark skin tone :blond-haired_woman_tone4: blond-haired woman: dark skin tone :blond-haired_woman_tone5: blond-haired person :blond_haired_person: blond-haired person: light skin tone :blond_haired_person_tone1: blond-haired person: medium-light skin tone :blond_haired_person_tone2: blond-haired person: medium skin tone :blond_haired_person_tone3: blond-haired person: medium-dark skin tone :blond_haired_person_tone4: blond-haired person: dark skin tone :blond_haired_person_tone5: blossom :blossom: blowfish :blowfish: blue book :blue_book: sport utility vehicle :blue_car: blue circle :blue_circle: blue heart :blue_heart: smiling face with smiling eyes :blush: boar :boar: bomb :bomb: open book :book: bookmark :bookmark: bookmark tabs :bookmark_tabs: books :books: collision :boom: woman\\u2019s boot :boot: bouquet :bouquet: bow and arrow :bow_and_arrow: bowl with spoon :bowl_with_spoon: bowling :bowling: boxing glove :boxing_glove: boy :boy: boy: light skin tone :boy_tone1: boy: medium-light skin tone :boy_tone2: boy: medium skin tone :boy_tone3: boy: medium-dark skin tone :boy_tone4: boy: dark skin tone :boy_tone5: brain :brain: bread :bread: breast-feeding :breast_feeding: breast-feeding: light skin tone :breast_feeding_tone1: breast-feeding: medium-light skin tone :breast_feeding_tone2: breast-feeding: medium skin tone :breast_feeding_tone3: breast-feeding: medium-dark skin tone :breast_feeding_tone4: breast-feeding: dark skin tone :breast_feeding_tone5: bride with veil :bride_with_veil: bride with veil: light skin tone :bride_with_veil_tone1: bride with veil: medium-light skin tone :bride_with_veil_tone2: bride with veil: medium skin tone :bride_with_veil_tone3: bride with veil: medium-dark skin tone :bride_with_veil_tone4: bride with veil: dark skin tone :bride_with_veil_tone5: bridge at night :bridge_at_night: briefcase :briefcase: broccoli :broccoli: broken heart :broken_heart: bug :bug: light bulb :bulb: high-speed train with bullet nose :bullettrain_front: high-speed train :bullettrain_side: burrito :burrito: bus :bus: bus stop :busstop: bust in silhouette :bust_in_silhouette: busts in silhouette :busts_in_silhouette: butterfly :butterfly: cactus :cactus: shortcake :cake: tear-off calendar :calendar: spiral calendar :calendar_spiral: call me hand :call_me: call me hand: light skin tone :call_me_tone1: call me hand: medium-light skin tone :call_me_tone2: call me hand: medium skin tone :call_me_tone3: call me hand: medium-dark skin tone :call_me_tone4: call me hand: dark skin tone :call_me_tone5: mobile phone with arrow :calling: two-hump camel :camel: camera :camera: camera with flash :camera_with_flash: camping :camping: Cancer :cancer: candle :candle: candy :candy: canned food :canned_food: canoe :canoe: input latin uppercase :capital_abcd: Capricorn :capricorn: card file box :card_box: card index :card_index: carousel horse :carousel_horse: carrot :carrot: cat :cat2: cat face :cat: optical disk :cd: chains :chains: bottle with popping cork :champagne: clinking glasses :champagne_glass: chart increasing with yen :chart: chart decreasing :chart_with_downwards_trend: chart increasing :chart_with_upwards_trend: chequered flag :checkered_flag: cheese wedge :cheese: cherries :cherries: cherry blossom :cherry_blossom: chestnut :chestnut: chicken :chicken: child :child: child: light skin tone :child_tone1: child: medium-light skin tone :child_tone2: child: medium skin tone :child_tone3: child: medium-dark skin tone :child_tone4: child: dark skin tone :child_tone5: children crossing :children_crossing: chipmunk :chipmunk: chocolate bar :chocolate_bar: chopsticks :chopsticks: Christmas tree :christmas_tree: church :church: cinema :cinema: circus tent :circus_tent: cityscape at dusk :city_dusk: sunset :city_sunset: cityscape :cityscape: CL button :cl: clapping hands :clap: clapping hands: light skin tone :clap_tone1: clapping hands: medium-light skin tone :clap_tone2: clapping hands: medium skin tone :clap_tone3: clapping hands: medium-dark skin tone :clap_tone4: clapping hands: dark skin tone :clap_tone5: clapper board :clapper: classical building :classical_building: clipboard :clipboard: ten-thirty :clock1030: ten o\\u2019clock :clock10: eleven-thirty :clock1130: eleven o\\u2019clock :clock11: twelve-thirty :clock1230: twelve o\\u2019clock :clock12: one-thirty :clock130: one o\\u2019clock :clock1: two-thirty :clock230: two o\\u2019clock :clock2: three-thirty :clock330: three o\\u2019clock :clock3: four-thirty :clock430: four o\\u2019clock :clock4: five-thirty :clock530: five o\\u2019clock :clock5: six-thirty :clock630: six o\\u2019clock :clock6: seven-thirty :clock730: seven o\\u2019clock :clock7: eight-thirty :clock830: eight o\\u2019clock :clock8: nine-thirty :clock930: nine o\\u2019clock :clock9: mantelpiece clock :clock: closed book :closed_book: locked with key :closed_lock_with_key: closed umbrella :closed_umbrella: cloud :cloud: cloud with lightning :cloud_lightning: cloud with rain :cloud_rain: cloud with snow :cloud_snow: tornado :cloud_tornado: clown face :clown: club suit :clubs: coat :coat: cocktail glass :cocktail: coconut :coconut: hot beverage :coffee: coffin :coffin: face with open mouth & cold sweat :cold_sweat: comet :comet: clamp :compression: laptop computer :computer: confetti ball :confetti_ball: confounded face :confounded: confused face :confused: Japanese \\u201ccongratulations\\u201d button :congratulations: construction :construction: building construction :construction_site: construction worker :construction_worker: construction worker: light skin tone :construction_worker_tone1: construction worker: medium-light skin tone :construction_worker_tone2: construction worker: medium skin tone :construction_worker_tone3: construction worker: medium-dark skin tone :construction_worker_tone4: construction worker: dark skin tone :construction_worker_tone5: control knobs :control_knobs: convenience store :convenience_store: cookie :cookie: cooking :cooking: COOL button :cool: copyright :copyright: ear of corn :corn: couch and lamp :couch: man and woman holding hands :couple: couple with heart: man, man :couple_mm: couple with heart :couple_with_heart: couple with heart: woman, man :couple_with_heart_woman_man: couple with heart: woman, woman :couple_ww: kiss :couplekiss: cow :cow2: cow face :cow: cowboy hat face :cowboy: crab :crab: crayon :crayon: crazy face :crazy_face: credit card :credit_card: crescent moon :crescent_moon: cricket :cricket: cricket game :cricket_game: crocodile :crocodile: croissant :croissant: latin cross :cross: crossed flags :crossed_flags: crossed swords :crossed_swords: crown :crown: passenger ship :cruise_ship: crying face :cry: crying cat face :crying_cat_face: crystal ball :crystal_ball: cucumber :cucumber: cup with straw :cup_with_straw: heart with arrow :cupid: curling stone :curling_stone: curly loop :curly_loop: currency exchange :currency_exchange: curry rice :curry: custard :custard: customs :customs: cut of meat :cut_of_meat: cyclone :cyclone: dagger :dagger: woman dancing :dancer: woman dancing: light skin tone :dancer_tone1: woman dancing: medium-light skin tone :dancer_tone2: woman dancing: medium skin tone :dancer_tone3: woman dancing: medium-dark skin tone :dancer_tone4: woman dancing: dark skin tone :dancer_tone5: dango :dango: sunglasses :dark_sunglasses: direct hit :dart: dashing away :dash: calendar :date: deciduous tree :deciduous_tree: deer :deer: department store :department_store: desert :desert: desktop computer :desktop: detective :detective: detective: light skin tone :detective_tone1: detective: medium-light skin tone :detective_tone2: detective: medium skin tone :detective_tone3: detective: medium-dark skin tone :detective_tone4: detective: dark skin tone :detective_tone5: diamond with a dot :diamond_shape_with_a_dot_inside: diamond suit :diamonds: digit eight :digit_eight: digit five :digit_five: digit four :digit_four: digit nine :digit_nine: digit one :digit_one: digit seven :digit_seven: digit six :digit_six: digit three :digit_three: digit two :digit_two: digit zero :digit_zero: disappointed face :disappointed: disappointed but relieved face :disappointed_relieved: card index dividers :dividers: dizzy :dizzy: dizzy face :dizzy_face: no littering :do_not_litter: dog :dog2: dog face :dog: dollar banknote :dollar: Japanese dolls :dolls: dolphin :dolphin: door :door: doughnut :doughnut: dove :dove: dragon :dragon: dragon face :dragon_face: dress :dress: camel :dromedary_camel: drooling face :drooling_face: droplet :droplet: drum :drum: duck :duck: dumpling :dumpling: dvd :dvd: e-mail :e-mail: eagle :eagle: ear :ear: sheaf of rice :ear_of_rice: ear: light skin tone :ear_tone1: ear: medium-light skin tone :ear_tone2: ear: medium skin tone :ear_tone3: ear: medium-dark skin tone :ear_tone4: ear: dark skin tone :ear_tone5: globe showing Europe-Africa :earth_africa: globe showing Americas :earth_americas: globe showing Asia-Australia :earth_asia: egg :egg: eggplant :eggplant: keycap: 8 :eight: eight-pointed star :eight_pointed_black_star: eight-spoked asterisk :eight_spoked_asterisk: eject button :eject: electric plug :electric_plug: elephant :elephant: elf :elf: elf: light skin tone :elf_tone1: elf: medium-light skin tone :elf_tone2: elf: medium skin tone :elf_tone3: elf: medium-dark skin tone :elf_tone4: elf: dark skin tone :elf_tone5: END arrow :end: England :england: envelope :envelope: envelope with arrow :envelope_with_arrow: euro banknote :euro: castle :european_castle: post office :european_post_office: evergreen tree :evergreen_tree: exclamation mark :exclamation: exploding head :exploding_head: expressionless face :expressionless: eye :eye: eye in speech bubble :eye_in_speech_bubble: glasses :eyeglasses: eyes :eyes: face vomiting :face_vomiting: face with hand over mouth :face_with_hand_over_mouth: face with monocle :face_with_monocle: face with raised eyebrow :face_with_raised_eyebrow: face with symbols over mouth :face_with_symbols_over_mouth: factory :factory: fairy :fairy: fairy: light skin tone :fairy_tone1: fairy: medium-light skin tone :fairy_tone2: fairy: medium skin tone :fairy_tone3: fairy: medium-dark skin tone :fairy_tone4: fairy: dark skin tone :fairy_tone5: fallen leaf :fallen_leaf: family :family: family: man, boy :family_man_boy: family: man, boy, boy :family_man_boy_boy: family: man, girl :family_man_girl: family: man, girl, boy :family_man_girl_boy: family: man, girl, girl :family_man_girl_girl: family: man, woman, boy :family_man_woman_boy: family: man, man, boy :family_mmb: family: man, man, boy, boy :family_mmbb: family: man, man, girl :family_mmg: family: man, man, girl, boy :family_mmgb: family: man, man, girl, girl :family_mmgg: family: man, woman, boy, boy :family_mwbb: family: man, woman, girl :family_mwg: family: man, woman, girl, boy :family_mwgb: family: man, woman, girl, girl :family_mwgg: family: woman, boy :family_woman_boy: family: woman, boy, boy :family_woman_boy_boy: family: woman, girl :family_woman_girl: family: woman, girl, boy :family_woman_girl_boy: family: woman, girl, girl :family_woman_girl_girl: family: woman, woman, boy :family_wwb: family: woman, woman, boy, boy :family_wwbb: family: woman, woman, girl :family_wwg: family: woman, woman, girl, boy :family_wwgb: family: woman, woman, girl, girl :family_wwgg: fast-forward button :fast_forward: fax machine :fax: fearful face :fearful: paw prints :feet: female sign :female_sign: ferris wheel :ferris_wheel: ferry :ferry: field hockey :field_hockey: file cabinet :file_cabinet: file folder :file_folder: film frames :film_frames: crossed fingers :fingers_crossed: crossed fingers: light skin tone :fingers_crossed_tone1: crossed fingers: medium-light skin tone :fingers_crossed_tone2: crossed fingers: medium skin tone :fingers_crossed_tone3: crossed fingers: medium-dark skin tone :fingers_crossed_tone4: crossed fingers: dark skin tone :fingers_crossed_tone5: fire :fire: fire engine :fire_engine: fireworks :fireworks: 1 st place medal :first_place: first quarter moon :first_quarter_moon: first quarter moon with face :first_quarter_moon_with_face: fish :fish: fish cake with swirl :fish_cake: fishing pole :fishing_pole_and_fish: raised fist :fist: raised fist: light skin tone :fist_tone1: raised fist: medium-light skin tone :fist_tone2: raised fist: medium skin tone :fist_tone3: raised fist: medium-dark skin tone :fist_tone4: raised fist: dark skin tone :fist_tone5: keycap: 5 :five: Ascension Island :flag_ac: Andorra :flag_ad: United Arab Emirates :flag_ae: Afghanistan :flag_af: Antigua & Barbuda :flag_ag: Anguilla :flag_ai: Albania :flag_al: Armenia :flag_am: Angola :flag_ao: Antarctica :flag_aq: Argentina :flag_ar: American Samoa :flag_as: Austria :flag_at: Australia :flag_au: Aruba :flag_aw: \\u00c5land Islands :flag_ax: Azerbaijan :flag_az: Bosnia & Herzegovina :flag_ba: Barbados :flag_bb: Bangladesh :flag_bd: Belgium :flag_be: Burkina Faso :flag_bf: Bulgaria :flag_bg: Bahrain :flag_bh: Burundi :flag_bi: Benin :flag_bj: St. Barth\\u00e9lemy :flag_bl: black flag :flag_black: Bermuda :flag_bm: Brunei :flag_bn: Bolivia :flag_bo: Caribbean Netherlands :flag_bq: Brazil :flag_br: Bahamas :flag_bs: Bhutan :flag_bt: Bouvet Island :flag_bv: Botswana :flag_bw: Belarus :flag_by: Belize :flag_bz: Canada :flag_ca: Cocos (Keeling) Islands :flag_cc: Congo - Kinshasa :flag_cd: Central African Republic :flag_cf: Congo - Brazzaville :flag_cg: Switzerland :flag_ch: C\\u00f4te d\\u2019Ivoire :flag_ci: Cook Islands :flag_ck: Chile :flag_cl: Cameroon :flag_cm: China :flag_cn: Colombia :flag_co: Clipperton Island :flag_cp: Costa Rica :flag_cr: Cuba :flag_cu: Cape Verde :flag_cv: Cura\\u00e7ao :flag_cw: Christmas Island :flag_cx: Cyprus :flag_cy: Czechia :flag_cz: Germany :flag_de: Diego Garcia :flag_dg: Djibouti :flag_dj: Denmark :flag_dk: Dominica :flag_dm: Dominican Republic :flag_do: Algeria :flag_dz: Ceuta & Melilla :flag_ea: Ecuador :flag_ec: Estonia :flag_ee: Egypt :flag_eg: Western Sahara :flag_eh: Eritrea :flag_er: Spain :flag_es: Ethiopia :flag_et: European Union :flag_eu: Finland :flag_fi: Fiji :flag_fj: Falkland Islands :flag_fk: Micronesia :flag_fm: Faroe Islands :flag_fo: France :flag_fr: Gabon :flag_ga: United Kingdom :flag_gb: Grenada :flag_gd: Georgia :flag_ge: French Guiana :flag_gf: Guernsey :flag_gg: Ghana :flag_gh: Gibraltar :flag_gi: Greenland :flag_gl: Gambia :flag_gm: Guinea :flag_gn: Guadeloupe :flag_gp: Equatorial Guinea :flag_gq: Greece :flag_gr: South Georgia & South Sandwich Islands :flag_gs: Guatemala :flag_gt: Guam :flag_gu: Guinea-Bissau :flag_gw: Guyana :flag_gy: Hong Kong SAR China :flag_hk: Heard & McDonald Islands :flag_hm: Honduras :flag_hn: Croatia :flag_hr: Haiti :flag_ht: Hungary :flag_hu: Canary Islands :flag_ic: Indonesia :flag_id: Ireland :flag_ie: Israel :flag_il: Isle of Man :flag_im: India :flag_in: British Indian Ocean Territory :flag_io: Iraq :flag_iq: Iran :flag_ir: Iceland :flag_is: Italy :flag_it: Jersey :flag_je: Jamaica :flag_jm: Jordan :flag_jo: Japan :flag_jp: Kenya :flag_ke: Kyrgyzstan :flag_kg: Cambodia :flag_kh: Kiribati :flag_ki: Comoros :flag_km: St. Kitts & Nevis :flag_kn: North Korea :flag_kp: South Korea :flag_kr: Kuwait :flag_kw: Cayman Islands :flag_ky: Kazakhstan :flag_kz: Laos :flag_la: Lebanon :flag_lb: St. Lucia :flag_lc: Liechtenstein :flag_li: Sri Lanka :flag_lk: Liberia :flag_lr: Lesotho :flag_ls: Lithuania :flag_lt: Luxembourg :flag_lu: Latvia :flag_lv: Libya :flag_ly: Morocco :flag_ma: Monaco :flag_mc: Moldova :flag_md: Montenegro :flag_me: St. Martin :flag_mf: Madagascar :flag_mg: Marshall Islands :flag_mh: Macedonia :flag_mk: Mali :flag_ml: Myanmar (Burma) :flag_mm: Mongolia :flag_mn: Macau SAR China :flag_mo: Northern Mariana Islands :flag_mp: Martinique :flag_mq: Mauritania :flag_mr: Montserrat :flag_ms: Malta :flag_mt: Mauritius :flag_mu: Maldives :flag_mv: Malawi :flag_mw: Mexico :flag_mx: Malaysia :flag_my: Mozambique :flag_mz: Namibia :flag_na: New Caledonia :flag_nc: Niger :flag_ne: Norfolk Island :flag_nf: Nigeria :flag_ng: Nicaragua :flag_ni: Netherlands :flag_nl: Norway :flag_no: Nepal :flag_np: Nauru :flag_nr: Niue :flag_nu: New Zealand :flag_nz: Oman :flag_om: Panama :flag_pa: Peru :flag_pe: French Polynesia :flag_pf: Papua New Guinea :flag_pg: Philippines :flag_ph: Pakistan :flag_pk: Poland :flag_pl: St. Pierre & Miquelon :flag_pm: Pitcairn Islands :flag_pn: Puerto Rico :flag_pr: Palestinian Territories :flag_ps: Portugal :flag_pt: Palau :flag_pw: Paraguay :flag_py: Qatar :flag_qa: R\\u00e9union :flag_re: Romania :flag_ro: Serbia :flag_rs: Russia :flag_ru: Rwanda :flag_rw: Saudi Arabia :flag_sa: Solomon Islands :flag_sb: Seychelles :flag_sc: Sudan :flag_sd: Sweden :flag_se: Singapore :flag_sg: St. Helena :flag_sh: Slovenia :flag_si: Svalbard & Jan Mayen :flag_sj: Slovakia :flag_sk: Sierra Leone :flag_sl: San Marino :flag_sm: Senegal :flag_sn: Somalia :flag_so: Suriname :flag_sr: South Sudan :flag_ss: S\\u00e3o Tom\\u00e9 & Pr\\u00edncipe :flag_st: El Salvador :flag_sv: Sint Maarten :flag_sx: Syria :flag_sy: Swaziland :flag_sz: Tristan da Cunha :flag_ta: Turks & Caicos Islands :flag_tc: Chad :flag_td: French Southern Territories :flag_tf: Togo :flag_tg: Thailand :flag_th: Tajikistan :flag_tj: Tokelau :flag_tk: Timor-Leste :flag_tl: Turkmenistan :flag_tm: Tunisia :flag_tn: Tonga :flag_to: Turkey :flag_tr: Trinidad & Tobago :flag_tt: Tuvalu :flag_tv: Taiwan :flag_tw: Tanzania :flag_tz: Ukraine :flag_ua: Uganda :flag_ug: U.S. Outlying Islands :flag_um: United States :flag_us: Uruguay :flag_uy: Uzbekistan :flag_uz: Vatican City :flag_va: St. Vincent & Grenadines :flag_vc: Venezuela :flag_ve: British Virgin Islands :flag_vg: U.S. Virgin Islands :flag_vi: Vietnam :flag_vn: Vanuatu :flag_vu: Wallis & Futuna :flag_wf: white flag :flag_white: Samoa :flag_ws: Kosovo :flag_xk: Yemen :flag_ye: Mayotte :flag_yt: South Africa :flag_za: Zambia :flag_zm: Zimbabwe :flag_zw: carp streamer :flags: flashlight :flashlight: fleur-de-lis :fleur-de-lis: floppy disk :floppy_disk: flower playing cards :flower_playing_cards: flushed face :flushed: flying saucer :flying_saucer: fog :fog: foggy :foggy: american football :football: footprints :footprints: fork and knife :fork_and_knife: fork and knife with plate :fork_knife_plate: fortune cookie :fortune_cookie: fountain :fountain: keycap: 4 :four: four leaf clover :four_leaf_clover: fox face :fox: framed picture :frame_photo: FREE button :free: baguette bread :french_bread: fried shrimp :fried_shrimp: french fries :fries: frog face :frog: frowning face :frowning2: frowning face with open mouth :frowning: fuel pump :fuelpump: full moon :full_moon: full moon with face :full_moon_with_face: game die :game_die: gear :gear: gem stone :gem: Gemini :gemini: genie :genie: ghost :ghost: wrapped gift :gift: heart with ribbon :gift_heart: giraffe :giraffe: girl :girl: girl: light skin tone :girl_tone1: girl: medium-light skin tone :girl_tone2: girl: medium skin tone :girl_tone3: girl: medium-dark skin tone :girl_tone4: girl: dark skin tone :girl_tone5: globe with meridians :globe_with_meridians: gloves :gloves: goal net :goal: goat :goat: flag in hole :golf: gorilla :gorilla: grapes :grapes: green apple :green_apple: green book :green_book: green heart :green_heart: white exclamation mark :grey_exclamation: white question mark :grey_question: grimacing face :grimacing: grinning face with smiling eyes :grin: grinning face :grinning: guard :guard: guard: light skin tone :guard_tone1: guard: medium-light skin tone :guard_tone2: guard: medium skin tone :guard_tone3: guard: medium-dark skin tone :guard_tone4: guard: dark skin tone :guard_tone5: guitar :guitar: pistol :gun: hamburger :hamburger: hammer :hammer: hammer and pick :hammer_pick: hamster face :hamster: raised hand with fingers splayed :hand_splayed: raised hand with fingers splayed: light skin tone :hand_splayed_tone1: raised hand with fingers splayed: medium-light skin tone :hand_splayed_tone2: raised hand with fingers splayed: medium skin tone :hand_splayed_tone3: raised hand with fingers splayed: medium-dark skin tone :hand_splayed_tone4: raised hand with fingers splayed: dark skin tone :hand_splayed_tone5: handbag :handbag: handshake :handshake: keycap: # :hash: front-facing baby chick :hatched_chick: hatching chick :hatching_chick: face with head-bandage :head_bandage: headphone :headphones: hear-no-evil monkey :hear_no_evil: red heart :heart: heart decoration :heart_decoration: heavy heart exclamation :heart_exclamation: smiling face with heart-eyes :heart_eyes: smiling cat face with heart-eyes :heart_eyes_cat: beating heart :heartbeat: growing heart :heartpulse: heart suit :hearts: heavy check mark :heavy_check_mark: heavy division sign :heavy_division_sign: heavy dollar sign :heavy_dollar_sign: heavy minus sign :heavy_minus_sign: heavy multiplication x :heavy_multiplication_x: heavy plus sign :heavy_plus_sign: hedgehog :hedgehog: helicopter :helicopter: rescue worker\\u2019s helmet :helmet_with_cross: herb :herb: hibiscus :hibiscus: bright button :high_brightness: high-heeled shoe :high_heel: ice hockey :hockey: hole :hole: houses :homes: honey pot :honey_pot: horse face :horse: horse racing :horse_racing: horse racing: light skin tone :horse_racing_tone1: horse racing: medium-light skin tone :horse_racing_tone2: horse racing: medium skin tone :horse_racing_tone3: horse racing: medium-dark skin tone :horse_racing_tone4: horse racing: dark skin tone :horse_racing_tone5: hospital :hospital: hot pepper :hot_pepper: hot dog :hotdog: hotel :hotel: hot springs :hotsprings: hourglass :hourglass: hourglass with flowing sand :hourglass_flowing_sand: house :house: derelict house :house_abandoned: house with garden :house_with_garden: hugging face :hugging: hushed face :hushed: ice cream :ice_cream: ice skate :ice_skate: soft ice cream :icecream: ID button :id: Japanese \\u201cbargain\\u201d button :ideograph_advantage: angry face with horns :imp: inbox tray :inbox_tray: incoming envelope :incoming_envelope: information :information_source: smiling face with halo :innocent: exclamation question mark :interrobang: mobile phone :iphone: desert island :island: red paper lantern :izakaya_lantern: jack-o-lantern :jack_o_lantern: map of Japan :japan: Japanese castle :japanese_castle: goblin :japanese_goblin: ogre :japanese_ogre: jeans :jeans: face with tears of joy :joy: cat face with tears of joy :joy_cat: joystick :joystick: kaaba :kaaba: old key :key2: key :key: keyboard :keyboard: keycap 10 :keycap_ten: kimono :kimono: kiss mark :kiss: kiss: man, man :kiss_mm: kiss: woman, man :kiss_woman_man: kiss: woman, woman :kiss_ww: kissing face :kissing: kissing cat face with closed eyes :kissing_cat: kissing face with closed eyes :kissing_closed_eyes: face blowing a kiss :kissing_heart: kissing face with smiling eyes :kissing_smiling_eyes: kiwi fruit :kiwi: kitchen knife :knife: koala :koala: Japanese \\u201chere\\u201d button :koko: label :label: large blue diamond :large_blue_diamond: large orange diamond :large_orange_diamond: last quarter moon :last_quarter_moon: last quarter moon with face :last_quarter_moon_with_face: smiling face with open mouth & closed eyes :laughing: leaf fluttering in wind :leaves: ledger :ledger: left-facing fist :left_facing_fist: left-facing fist: light skin tone :left_facing_fist_tone1: left-facing fist: medium-light skin tone :left_facing_fist_tone2: left-facing fist: medium skin tone :left_facing_fist_tone3: left-facing fist: medium-dark skin tone :left_facing_fist_tone4: left-facing fist: dark skin tone :left_facing_fist_tone5: left luggage :left_luggage: left-right arrow :left_right_arrow: right arrow curving left :leftwards_arrow_with_hook: lemon :lemon: Leo :leo: leopard :leopard: level slider :level_slider: man in business suit levitating :levitate: Libra :libra: light rail :light_rail: link :link: lion face :lion_face: mouth :lips: lipstick :lipstick: lizard :lizard: locked :lock: locked with pen :lock_with_ink_pen: lollipop :lollipop: double curly loop :loop: speaker high volume :loud_sound: loudspeaker :loudspeaker: love hotel :love_hotel: love letter :love_letter: love-you gesture :love_you_gesture: love-you gesture: light skin tone :love_you_gesture_tone1: love-you gesture: medium-light skin tone :love_you_gesture_tone2: love-you gesture: medium skin tone :love_you_gesture_tone3: love-you gesture: medium-dark skin tone :love_you_gesture_tone4: love-you gesture: dark skin tone :love_you_gesture_tone5: dim button :low_brightness: lying face :lying_face: circled M :m: left-pointing magnifying glass :mag: right-pointing magnifying glass :mag_right: mage :mage: mage: light skin tone :mage_tone1: mage: medium-light skin tone :mage_tone2: mage: medium skin tone :mage_tone3: mage: medium-dark skin tone :mage_tone4: mage: dark skin tone :mage_tone5: mahjong red dragon :mahjong: closed mailbox with raised flag :mailbox: closed mailbox with lowered flag :mailbox_closed: open mailbox with raised flag :mailbox_with_mail: open mailbox with lowered flag :mailbox_with_no_mail: male sign :male_sign: man :man: man artist :man_artist: man artist: light skin tone :man_artist_tone1: man artist: medium-light skin tone :man_artist_tone2: man artist: medium skin tone :man_artist_tone3: man artist: medium-dark skin tone :man_artist_tone4: man artist: dark skin tone :man_artist_tone5: man astronaut :man_astronaut: man astronaut: light skin tone :man_astronaut_tone1: man astronaut: medium-light skin tone :man_astronaut_tone2: man astronaut: medium skin tone :man_astronaut_tone3: man astronaut: medium-dark skin tone :man_astronaut_tone4: man astronaut: dark skin tone :man_astronaut_tone5: man biking :man_biking: man biking: light skin tone :man_biking_tone1: man biking: medium-light skin tone :man_biking_tone2: man biking: medium skin tone :man_biking_tone3: man biking: medium-dark skin tone :man_biking_tone4: man biking: dark skin tone :man_biking_tone5: man bouncing ball :man_bouncing_ball: man bouncing ball: light skin tone :man_bouncing_ball_tone1: man bouncing ball: medium-light skin tone :man_bouncing_ball_tone2: man bouncing ball: medium skin tone :man_bouncing_ball_tone3: man bouncing ball: medium-dark skin tone :man_bouncing_ball_tone4: man bouncing ball: dark skin tone :man_bouncing_ball_tone5: man bowing :man_bowing: man bowing: light skin tone :man_bowing_tone1: man bowing: medium-light skin tone :man_bowing_tone2: man bowing: medium skin tone :man_bowing_tone3: man bowing: medium-dark skin tone :man_bowing_tone4: man bowing: dark skin tone :man_bowing_tone5: man cartwheeling :man_cartwheeling: man cartwheeling: light skin tone :man_cartwheeling_tone1: man cartwheeling: medium-light skin tone :man_cartwheeling_tone2: man cartwheeling: medium skin tone :man_cartwheeling_tone3: man cartwheeling: medium-dark skin tone :man_cartwheeling_tone4: man cartwheeling: dark skin tone :man_cartwheeling_tone5: man climbing :man_climbing: man climbing: light skin tone :man_climbing_tone1: man climbing: medium-light skin tone :man_climbing_tone2: man climbing: medium skin tone :man_climbing_tone3: man climbing: medium-dark skin tone :man_climbing_tone4: man climbing: dark skin tone :man_climbing_tone5: man construction worker :man_construction_worker: man construction worker: light skin tone :man_construction_worker_tone1: man construction worker: medium-light skin tone :man_construction_worker_tone2: man construction worker: medium skin tone :man_construction_worker_tone3: man construction worker: medium-dark skin tone :man_construction_worker_tone4: man construction worker: dark skin tone :man_construction_worker_tone5: man cook :man_cook: man cook: light skin tone :man_cook_tone1: man cook: medium-light skin tone :man_cook_tone2: man cook: medium skin tone :man_cook_tone3: man cook: medium-dark skin tone :man_cook_tone4: man cook: dark skin tone :man_cook_tone5: man dancing :man_dancing: man dancing: light skin tone :man_dancing_tone1: man dancing: medium-light skin tone :man_dancing_tone2: man dancing: medium skin tone :man_dancing_tone3: man dancing: medium-dark skin tone :man_dancing_tone4: man dancing: dark skin tone :man_dancing_tone5: man detective :man_detective: man detective: light skin tone :man_detective_tone1: man detective: medium-light skin tone :man_detective_tone2: man detective: medium skin tone :man_detective_tone3: man detective: medium-dark skin tone :man_detective_tone4: man detective: dark skin tone :man_detective_tone5: man elf :man_elf: man elf: light skin tone :man_elf_tone1: man elf: medium-light skin tone :man_elf_tone2: man elf: medium skin tone :man_elf_tone3: man elf: medium-dark skin tone :man_elf_tone4: man elf: dark skin tone :man_elf_tone5: man facepalming :man_facepalming: man facepalming: light skin tone :man_facepalming_tone1: man facepalming: medium-light skin tone :man_facepalming_tone2: man facepalming: medium skin tone :man_facepalming_tone3: man facepalming: medium-dark skin tone :man_facepalming_tone4: man facepalming: dark skin tone :man_facepalming_tone5: man factory worker :man_factory_worker: man factory worker: light skin tone :man_factory_worker_tone1: man factory worker: medium-light skin tone :man_factory_worker_tone2: man factory worker: medium skin tone :man_factory_worker_tone3: man factory worker: medium-dark skin tone :man_factory_worker_tone4: man factory worker: dark skin tone :man_factory_worker_tone5: man fairy :man_fairy: man fairy: light skin tone :man_fairy_tone1: man fairy: medium-light skin tone :man_fairy_tone2: man fairy: medium skin tone :man_fairy_tone3: man fairy: medium-dark skin tone :man_fairy_tone4: man fairy: dark skin tone :man_fairy_tone5: man farmer :man_farmer: man farmer: light skin tone :man_farmer_tone1: man farmer: medium-light skin tone :man_farmer_tone2: man farmer: medium skin tone :man_farmer_tone3: man farmer: medium-dark skin tone :man_farmer_tone4: man farmer: dark skin tone :man_farmer_tone5: man firefighter :man_firefighter: man firefighter: light skin tone :man_firefighter_tone1: man firefighter: medium-light skin tone :man_firefighter_tone2: man firefighter: medium skin tone :man_firefighter_tone3: man firefighter: medium-dark skin tone :man_firefighter_tone4: man firefighter: dark skin tone :man_firefighter_tone5: man frowning :man_frowning: man frowning: light skin tone :man_frowning_tone1: man frowning: medium-light skin tone :man_frowning_tone2: man frowning: medium skin tone :man_frowning_tone3: man frowning: medium-dark skin tone :man_frowning_tone4: man frowning: dark skin tone :man_frowning_tone5: man genie :man_genie: man gesturing NO :man_gesturing_no: man gesturing NO: light skin tone :man_gesturing_no_tone1: man gesturing NO: medium-light skin tone :man_gesturing_no_tone2: man gesturing NO: medium skin tone :man_gesturing_no_tone3: man gesturing NO: medium-dark skin tone :man_gesturing_no_tone4: man gesturing NO: dark skin tone :man_gesturing_no_tone5: man gesturing OK :man_gesturing_ok: man gesturing OK: light skin tone :man_gesturing_ok_tone1: man gesturing OK: medium-light skin tone :man_gesturing_ok_tone2: man gesturing OK: medium skin tone :man_gesturing_ok_tone3: man gesturing OK: medium-dark skin tone :man_gesturing_ok_tone4: man gesturing OK: dark skin tone :man_gesturing_ok_tone5: man getting massage :man_getting_face_massage: man getting massage: light skin tone :man_getting_face_massage_tone1: man getting massage: medium-light skin tone :man_getting_face_massage_tone2: man getting massage: medium skin tone :man_getting_face_massage_tone3: man getting massage: medium-dark skin tone :man_getting_face_massage_tone4: man getting massage: dark skin tone :man_getting_face_massage_tone5: man getting haircut :man_getting_haircut: man getting haircut: light skin tone :man_getting_haircut_tone1: man getting haircut: medium-light skin tone :man_getting_haircut_tone2: man getting haircut: medium skin tone :man_getting_haircut_tone3: man getting haircut: medium-dark skin tone :man_getting_haircut_tone4: man getting haircut: dark skin tone :man_getting_haircut_tone5: man golfing :man_golfing: man golfing: light skin tone :man_golfing_tone1: man golfing: medium-light skin tone :man_golfing_tone2: man golfing: medium skin tone :man_golfing_tone3: man golfing: medium-dark skin tone :man_golfing_tone4: man golfing: dark skin tone :man_golfing_tone5: man guard :man_guard: man guard: light skin tone :man_guard_tone1: man guard: medium-light skin tone :man_guard_tone2: man guard: medium skin tone :man_guard_tone3: man guard: medium-dark skin tone :man_guard_tone4: man guard: dark skin tone :man_guard_tone5: man health worker :man_health_worker: man health worker: light skin tone :man_health_worker_tone1: man health worker: medium-light skin tone :man_health_worker_tone2: man health worker: medium skin tone :man_health_worker_tone3: man health worker: medium-dark skin tone :man_health_worker_tone4: man health worker: dark skin tone :man_health_worker_tone5: man in business suit levitating: light skin tone :man_in_business_suit_levitating_tone1: man in business suit levitating: medium-light skin tone :man_in_business_suit_levitating_tone2: man in business suit levitating: medium skin tone :man_in_business_suit_levitating_tone3: man in business suit levitating: medium-dark skin tone :man_in_business_suit_levitating_tone4: man in business suit levitating: dark skin tone :man_in_business_suit_levitating_tone5: man in lotus position :man_in_lotus_position: man in lotus position: light skin tone :man_in_lotus_position_tone1: man in lotus position: medium-light skin tone :man_in_lotus_position_tone2: man in lotus position: medium skin tone :man_in_lotus_position_tone3: man in lotus position: medium-dark skin tone :man_in_lotus_position_tone4: man in lotus position: dark skin tone :man_in_lotus_position_tone5: man in steamy room :man_in_steamy_room: man in steamy room: light skin tone :man_in_steamy_room_tone1: man in steamy room: medium-light skin tone :man_in_steamy_room_tone2: man in steamy room: medium skin tone :man_in_steamy_room_tone3: man in steamy room: medium-dark skin tone :man_in_steamy_room_tone4: man in steamy room: dark skin tone :man_in_steamy_room_tone5: man in tuxedo :man_in_tuxedo: man in tuxedo: light skin tone :man_in_tuxedo_tone1: man in tuxedo: medium-light skin tone :man_in_tuxedo_tone2: man in tuxedo: medium skin tone :man_in_tuxedo_tone3: man in tuxedo: medium-dark skin tone :man_in_tuxedo_tone4: man in tuxedo: dark skin tone :man_in_tuxedo_tone5: man judge :man_judge: man judge: light skin tone :man_judge_tone1: man judge: medium-light skin tone :man_judge_tone2: man judge: medium skin tone :man_judge_tone3: man judge: medium-dark skin tone :man_judge_tone4: man judge: dark skin tone :man_judge_tone5: man juggling :man_juggling: man juggling: light skin tone :man_juggling_tone1: man juggling: medium-light skin tone :man_juggling_tone2: man juggling: medium skin tone :man_juggling_tone3: man juggling: medium-dark skin tone :man_juggling_tone4: man juggling: dark skin tone :man_juggling_tone5: man lifting weights :man_lifting_weights: man lifting weights: light skin tone :man_lifting_weights_tone1: man lifting weights: medium-light skin tone :man_lifting_weights_tone2: man lifting weights: medium skin tone :man_lifting_weights_tone3: man lifting weights: medium-dark skin tone :man_lifting_weights_tone4: man lifting weights: dark skin tone :man_lifting_weights_tone5: man mage :man_mage: man mage: light skin tone :man_mage_tone1: man mage: medium-light skin tone :man_mage_tone2: man mage: medium skin tone :man_mage_tone3: man mage: medium-dark skin tone :man_mage_tone4: man mage: dark skin tone :man_mage_tone5: man mechanic :man_mechanic: man mechanic: light skin tone :man_mechanic_tone1: man mechanic: medium-light skin tone :man_mechanic_tone2: man mechanic: medium skin tone :man_mechanic_tone3: man mechanic: medium-dark skin tone :man_mechanic_tone4: man mechanic: dark skin tone :man_mechanic_tone5: man mountain biking :man_mountain_biking: man mountain biking: light skin tone :man_mountain_biking_tone1: man mountain biking: medium-light skin tone :man_mountain_biking_tone2: man mountain biking: medium skin tone :man_mountain_biking_tone3: man mountain biking: medium-dark skin tone :man_mountain_biking_tone4: man mountain biking: dark skin tone :man_mountain_biking_tone5: man office worker :man_office_worker: man office worker: light skin tone :man_office_worker_tone1: man office worker: medium-light skin tone :man_office_worker_tone2: man office worker: medium skin tone :man_office_worker_tone3: man office worker: medium-dark skin tone :man_office_worker_tone4: man office worker: dark skin tone :man_office_worker_tone5: man pilot :man_pilot: man pilot: light skin tone :man_pilot_tone1: man pilot: medium-light skin tone :man_pilot_tone2: man pilot: medium skin tone :man_pilot_tone3: man pilot: medium-dark skin tone :man_pilot_tone4: man pilot: dark skin tone :man_pilot_tone5: man playing handball :man_playing_handball: man playing handball: light skin tone :man_playing_handball_tone1: man playing handball: medium-light skin tone :man_playing_handball_tone2: man playing handball: medium skin tone :man_playing_handball_tone3: man playing handball: medium-dark skin tone :man_playing_handball_tone4: man playing handball: dark skin tone :man_playing_handball_tone5: man playing water polo :man_playing_water_polo: man playing water polo: light skin tone :man_playing_water_polo_tone1: man playing water polo: medium-light skin tone :man_playing_water_polo_tone2: man playing water polo: medium skin tone :man_playing_water_polo_tone3: man playing water polo: medium-dark skin tone :man_playing_water_polo_tone4: man playing water polo: dark skin tone :man_playing_water_polo_tone5: man police officer :man_police_officer: man police officer: light skin tone :man_police_officer_tone1: man police officer: medium-light skin tone :man_police_officer_tone2: man police officer: medium skin tone :man_police_officer_tone3: man police officer: medium-dark skin tone :man_police_officer_tone4: man police officer: dark skin tone :man_police_officer_tone5: man pouting :man_pouting: man pouting: light skin tone :man_pouting_tone1: man pouting: medium-light skin tone :man_pouting_tone2: man pouting: medium skin tone :man_pouting_tone3: man pouting: medium-dark skin tone :man_pouting_tone4: man pouting: dark skin tone :man_pouting_tone5: man raising hand :man_raising_hand: man raising hand: light skin tone :man_raising_hand_tone1: man raising hand: medium-light skin tone :man_raising_hand_tone2: man raising hand: medium skin tone :man_raising_hand_tone3: man raising hand: medium-dark skin tone :man_raising_hand_tone4: man raising hand: dark skin tone :man_raising_hand_tone5: man rowing boat :man_rowing_boat: man rowing boat: light skin tone :man_rowing_boat_tone1: man rowing boat: medium-light skin tone :man_rowing_boat_tone2: man rowing boat: medium skin tone :man_rowing_boat_tone3: man rowing boat: medium-dark skin tone :man_rowing_boat_tone4: man rowing boat: dark skin tone :man_rowing_boat_tone5: man running :man_running: man running: light skin tone :man_running_tone1: man running: medium-light skin tone :man_running_tone2: man running: medium skin tone :man_running_tone3: man running: medium-dark skin tone :man_running_tone4: man running: dark skin tone :man_running_tone5: man scientist :man_scientist: man scientist: light skin tone :man_scientist_tone1: man scientist: medium-light skin tone :man_scientist_tone2: man scientist: medium skin tone :man_scientist_tone3: man scientist: medium-dark skin tone :man_scientist_tone4: man scientist: dark skin tone :man_scientist_tone5: man shrugging :man_shrugging: man shrugging: light skin tone :man_shrugging_tone1: man shrugging: medium-light skin tone :man_shrugging_tone2: man shrugging: medium skin tone :man_shrugging_tone3: man shrugging: medium-dark skin tone :man_shrugging_tone4: man shrugging: dark skin tone :man_shrugging_tone5: man singer :man_singer: man singer: light skin tone :man_singer_tone1: man singer: medium-light skin tone :man_singer_tone2: man singer: medium skin tone :man_singer_tone3: man singer: medium-dark skin tone :man_singer_tone4: man singer: dark skin tone :man_singer_tone5: man student :man_student: man student: light skin tone :man_student_tone1: man student: medium-light skin tone :man_student_tone2: man student: medium skin tone :man_student_tone3: man student: medium-dark skin tone :man_student_tone4: man student: dark skin tone :man_student_tone5: man surfing :man_surfing: man surfing: light skin tone :man_surfing_tone1: man surfing: medium-light skin tone :man_surfing_tone2: man surfing: medium skin tone :man_surfing_tone3: man surfing: medium-dark skin tone :man_surfing_tone4: man surfing: dark skin tone :man_surfing_tone5: man swimming :man_swimming: man swimming: light skin tone :man_swimming_tone1: man swimming: medium-light skin tone :man_swimming_tone2: man swimming: medium skin tone :man_swimming_tone3: man swimming: medium-dark skin tone :man_swimming_tone4: man swimming: dark skin tone :man_swimming_tone5: man teacher :man_teacher: man teacher: light skin tone :man_teacher_tone1: man teacher: medium-light skin tone :man_teacher_tone2: man teacher: medium skin tone :man_teacher_tone3: man teacher: medium-dark skin tone :man_teacher_tone4: man teacher: dark skin tone :man_teacher_tone5: man technologist :man_technologist: man technologist: light skin tone :man_technologist_tone1: man technologist: medium-light skin tone :man_technologist_tone2: man technologist: medium skin tone :man_technologist_tone3: man technologist: medium-dark skin tone :man_technologist_tone4: man technologist: dark skin tone :man_technologist_tone5: man tipping hand :man_tipping_hand: man tipping hand: light skin tone :man_tipping_hand_tone1: man tipping hand: medium-light skin tone :man_tipping_hand_tone2: man tipping hand: medium skin tone :man_tipping_hand_tone3: man tipping hand: medium-dark skin tone :man_tipping_hand_tone4: man tipping hand: dark skin tone :man_tipping_hand_tone5: man: light skin tone :man_tone1: man: medium-light skin tone :man_tone2: man: medium skin tone :man_tone3: man: medium-dark skin tone :man_tone4: man: dark skin tone :man_tone5: man vampire :man_vampire: man vampire: light skin tone :man_vampire_tone1: man vampire: medium-light skin tone :man_vampire_tone2: man vampire: medium skin tone :man_vampire_tone3: man vampire: medium-dark skin tone :man_vampire_tone4: man vampire: dark skin tone :man_vampire_tone5: man walking :man_walking: man walking: light skin tone :man_walking_tone1: man walking: medium-light skin tone :man_walking_tone2: man walking: medium skin tone :man_walking_tone3: man walking: medium-dark skin tone :man_walking_tone4: man walking: dark skin tone :man_walking_tone5: man wearing turban :man_wearing_turban: man wearing turban: light skin tone :man_wearing_turban_tone1: man wearing turban: medium-light skin tone :man_wearing_turban_tone2: man wearing turban: medium skin tone :man_wearing_turban_tone3: man wearing turban: medium-dark skin tone :man_wearing_turban_tone4: man wearing turban: dark skin tone :man_wearing_turban_tone5: man with Chinese cap :man_with_chinese_cap: man with Chinese cap: light skin tone :man_with_chinese_cap_tone1: man with Chinese cap: medium-light skin tone :man_with_chinese_cap_tone2: man with Chinese cap: medium skin tone :man_with_chinese_cap_tone3: man with Chinese cap: medium-dark skin tone :man_with_chinese_cap_tone4: man with Chinese cap: dark skin tone :man_with_chinese_cap_tone5: man zombie :man_zombie: man\\u2019s shoe :mans_shoe: world map :map: maple leaf :maple_leaf: martial arts uniform :martial_arts_uniform: face with medical mask :mask: meat on bone :meat_on_bone: sports medal :medal: medical symbol :medical_symbol: megaphone :mega: melon :melon: men with bunny ears partying :men_with_bunny_ears_partying: men wrestling :men_wrestling: menorah :menorah: men\\u2019s room :mens: mermaid :mermaid: mermaid: light skin tone :mermaid_tone1: mermaid: medium-light skin tone :mermaid_tone2: mermaid: medium skin tone :mermaid_tone3: mermaid: medium-dark skin tone :mermaid_tone4: mermaid: dark skin tone :mermaid_tone5: merman :merman: merman: light skin tone :merman_tone1: merman: medium-light skin tone :merman_tone2: merman: medium skin tone :merman_tone3: merman: medium-dark skin tone :merman_tone4: merman: dark skin tone :merman_tone5: merperson :merperson: merperson: light skin tone :merperson_tone1: merperson: medium-light skin tone :merperson_tone2: merperson: medium skin tone :merperson_tone3: merperson: medium-dark skin tone :merperson_tone4: merperson: dark skin tone :merperson_tone5: sign of the horns :metal: sign of the horns: light skin tone :metal_tone1: sign of the horns: medium-light skin tone :metal_tone2: sign of the horns: medium skin tone :metal_tone3: sign of the horns: medium-dark skin tone :metal_tone4: sign of the horns: dark skin tone :metal_tone5: metro :metro: studio microphone :microphone2: microphone :microphone: microscope :microscope: middle finger :middle_finger: middle finger: light skin tone :middle_finger_tone1: middle finger: medium-light skin tone :middle_finger_tone2: middle finger: medium skin tone :middle_finger_tone3: middle finger: medium-dark skin tone :middle_finger_tone4: middle finger: dark skin tone :middle_finger_tone5: military medal :military_medal: glass of milk :milk: milky way :milky_way: minibus :minibus: computer disk :minidisc: mobile phone off :mobile_phone_off: money-mouth face :money_mouth: money with wings :money_with_wings: money bag :moneybag: monkey :monkey: monkey face :monkey_face: monorail :monorail: graduation cap :mortar_board: mosque :mosque: motor scooter :motor_scooter: motor boat :motorboat: motorcycle :motorcycle: motorway :motorway: mount fuji :mount_fuji: mountain :mountain: mountain cableway :mountain_cableway: mountain railway :mountain_railway: snow-capped mountain :mountain_snow: mouse :mouse2: mouse face :mouse: computer mouse :mouse_three_button: movie camera :movie_camera: moai :moyai: Mrs. Claus :mrs_claus: Mrs. Claus: light skin tone :mrs_claus_tone1: Mrs. Claus: medium-light skin tone :mrs_claus_tone2: Mrs. Claus: medium skin tone :mrs_claus_tone3: Mrs. Claus: medium-dark skin tone :mrs_claus_tone4: Mrs. Claus: dark skin tone :mrs_claus_tone5: flexed biceps :muscle: flexed biceps: light skin tone :muscle_tone1: flexed biceps: medium-light skin tone :muscle_tone2: flexed biceps: medium skin tone :muscle_tone3: flexed biceps: medium-dark skin tone :muscle_tone4: flexed biceps: dark skin tone :muscle_tone5: mushroom :mushroom: musical keyboard :musical_keyboard: musical note :musical_note: musical score :musical_score: muted speaker :mute: nail polish :nail_care: nail polish: light skin tone :nail_care_tone1: nail polish: medium-light skin tone :nail_care_tone2: nail polish: medium skin tone :nail_care_tone3: nail polish: medium-dark skin tone :nail_care_tone4: nail polish: dark skin tone :nail_care_tone5: name badge :name_badge: nauseated face :nauseated_face: necktie :necktie: cross mark button :negative_squared_cross_mark: nerd face :nerd: neutral face :neutral_face: NEW button :new: new moon :new_moon: new moon face :new_moon_with_face: rolled-up newspaper :newspaper2: newspaper :newspaper: NG button :ng: night with stars :night_with_stars: keycap: 9 :nine: bell with slash :no_bell: no bicycles :no_bicycles: no entry :no_entry: prohibited :no_entry_sign: no mobile phones :no_mobile_phones: face without mouth :no_mouth: no pedestrians :no_pedestrians: no smoking :no_smoking: non-potable water :non-potable_water: nose :nose: nose: light skin tone :nose_tone1: nose: medium-light skin tone :nose_tone2: nose: medium skin tone :nose_tone3: nose: medium-dark skin tone :nose_tone4: nose: dark skin tone :nose_tone5: notebook :notebook: notebook with decorative cover :notebook_with_decorative_cover: spiral notepad :notepad_spiral: musical notes :notes: nut and bolt :nut_and_bolt: O button (blood type) :o2: heavy large circle :o: water wave :ocean: stop sign :octagonal_sign: octopus :octopus: oden :oden: office building :office: oil drum :oil: OK button :ok: OK hand :ok_hand: OK hand: light skin tone :ok_hand_tone1: OK hand: medium-light skin tone :ok_hand_tone2: OK hand: medium skin tone :ok_hand_tone3: OK hand: medium-dark skin tone :ok_hand_tone4: OK hand: dark skin tone :ok_hand_tone5: older adult :older_adult: older adult: light skin tone :older_adult_tone1: older adult: medium-light skin tone :older_adult_tone2: older adult: medium skin tone :older_adult_tone3: older adult: medium-dark skin tone :older_adult_tone4: older adult: dark skin tone :older_adult_tone5: old man :older_man: old man: light skin tone :older_man_tone1: old man: medium-light skin tone :older_man_tone2: old man: medium skin tone :older_man_tone3: old man: medium-dark skin tone :older_man_tone4: old man: dark skin tone :older_man_tone5: old woman :older_woman: old woman: light skin tone :older_woman_tone1: old woman: medium-light skin tone :older_woman_tone2: old woman: medium skin tone :older_woman_tone3: old woman: medium-dark skin tone :older_woman_tone4: old woman: dark skin tone :older_woman_tone5: om :om_symbol: ON! arrow :on: oncoming automobile :oncoming_automobile: oncoming bus :oncoming_bus: oncoming police car :oncoming_police_car: oncoming taxi :oncoming_taxi: keycap: 1 :one: open file folder :open_file_folder: open hands :open_hands: open hands: light skin tone :open_hands_tone1: open hands: medium-light skin tone :open_hands_tone2: open hands: medium skin tone :open_hands_tone3: open hands: medium-dark skin tone :open_hands_tone4: open hands: dark skin tone :open_hands_tone5: face with open mouth :open_mouth: Ophiuchus :ophiuchus: orange book :orange_book: orange heart :orange_heart: orthodox cross :orthodox_cross: outbox tray :outbox_tray: owl :owl: ox :ox: package :package: page facing up :page_facing_up: page with curl :page_with_curl: pager :pager: paintbrush :paintbrush: palm tree :palm_tree: palms up together :palms_up_together: palms up together: light skin tone :palms_up_together_tone1: palms up together: medium-light skin tone :palms_up_together_tone2: palms up together: medium skin tone :palms_up_together_tone3: palms up together: medium-dark skin tone :palms_up_together_tone4: palms up together: dark skin tone :palms_up_together_tone5: pancakes :pancakes: panda face :panda_face: paperclip :paperclip: linked paperclips :paperclips: national park :park: P button :parking: part alternation mark :part_alternation_mark: sun behind cloud :partly_sunny: passport control :passport_control: pause button :pause_button: peace symbol :peace: peach :peach: peanuts :peanuts: pear :pear: pen :pen_ballpoint: fountain pen :pen_fountain: pencil :pencil2: memo :pencil: penguin :penguin: pensive face :pensive: people with bunny ears partying :people_with_bunny_ears_partying: people wrestling :people_wrestling: performing arts :performing_arts: persevering face :persevere: person biking :person_biking: person biking: light skin tone :person_biking_tone1: person biking: medium-light skin tone :person_biking_tone2: person biking: medium skin tone :person_biking_tone3: person biking: medium-dark skin tone :person_biking_tone4: person biking: dark skin tone :person_biking_tone5: person bouncing ball :person_bouncing_ball: person bouncing ball: light skin tone :person_bouncing_ball_tone1: person bouncing ball: medium-light skin tone :person_bouncing_ball_tone2: person bouncing ball: medium skin tone :person_bouncing_ball_tone3: person bouncing ball: medium-dark skin tone :person_bouncing_ball_tone4: person bouncing ball: dark skin tone :person_bouncing_ball_tone5: person bowing :person_bowing: person bowing: light skin tone :person_bowing_tone1: person bowing: medium-light skin tone :person_bowing_tone2: person bowing: medium skin tone :person_bowing_tone3: person bowing: medium-dark skin tone :person_bowing_tone4: person bowing: dark skin tone :person_bowing_tone5: person climbing :person_climbing: person climbing: light skin tone :person_climbing_tone1: person climbing: medium-light skin tone :person_climbing_tone2: person climbing: medium skin tone :person_climbing_tone3: person climbing: medium-dark skin tone :person_climbing_tone4: person climbing: dark skin tone :person_climbing_tone5: person cartwheeling :person_doing_cartwheel: person cartwheeling: light skin tone :person_doing_cartwheel_tone1: person cartwheeling: medium-light skin tone :person_doing_cartwheel_tone2: person cartwheeling: medium skin tone :person_doing_cartwheel_tone3: person cartwheeling: medium-dark skin tone :person_doing_cartwheel_tone4: person cartwheeling: dark skin tone :person_doing_cartwheel_tone5: person facepalming :person_facepalming: person facepalming: light skin tone :person_facepalming_tone1: person facepalming: medium-light skin tone :person_facepalming_tone2: person facepalming: medium skin tone :person_facepalming_tone3: person facepalming: medium-dark skin tone :person_facepalming_tone4: person facepalming: dark skin tone :person_facepalming_tone5: person fencing :person_fencing: person frowning :person_frowning: person frowning: light skin tone :person_frowning_tone1: person frowning: medium-light skin tone :person_frowning_tone2: person frowning: medium skin tone :person_frowning_tone3: person frowning: medium-dark skin tone :person_frowning_tone4: person frowning: dark skin tone :person_frowning_tone5: person gesturing NO :person_gesturing_no: person gesturing NO: light skin tone :person_gesturing_no_tone1: person gesturing NO: medium-light skin tone :person_gesturing_no_tone2: person gesturing NO: medium skin tone :person_gesturing_no_tone3: person gesturing NO: medium-dark skin tone :person_gesturing_no_tone4: person gesturing NO: dark skin tone :person_gesturing_no_tone5: person gesturing OK :person_gesturing_ok: person gesturing OK: light skin tone :person_gesturing_ok_tone1: person gesturing OK: medium-light skin tone :person_gesturing_ok_tone2: person gesturing OK: medium skin tone :person_gesturing_ok_tone3: person gesturing OK: medium-dark skin tone :person_gesturing_ok_tone4: person gesturing OK: dark skin tone :person_gesturing_ok_tone5: person getting haircut :person_getting_haircut: person getting haircut: light skin tone :person_getting_haircut_tone1: person getting haircut: medium-light skin tone :person_getting_haircut_tone2: person getting haircut: medium skin tone :person_getting_haircut_tone3: person getting haircut: medium-dark skin tone :person_getting_haircut_tone4: person getting haircut: dark skin tone :person_getting_haircut_tone5: person getting massage :person_getting_massage: person getting massage: light skin tone :person_getting_massage_tone1: person getting massage: medium-light skin tone :person_getting_massage_tone2: person getting massage: medium skin tone :person_getting_massage_tone3: person getting massage: medium-dark skin tone :person_getting_massage_tone4: person getting massage: dark skin tone :person_getting_massage_tone5: person golfing :person_golfing: person golfing: light skin tone :person_golfing_tone1: person golfing: medium-light skin tone :person_golfing_tone2: person golfing: medium skin tone :person_golfing_tone3: person golfing: medium-dark skin tone :person_golfing_tone4: person golfing: dark skin tone :person_golfing_tone5: person in bed: light skin tone :person_in_bed_tone1: person in bed: medium-light skin tone :person_in_bed_tone2: person in bed: medium skin tone :person_in_bed_tone3: person in bed: medium-dark skin tone :person_in_bed_tone4: person in bed: dark skin tone :person_in_bed_tone5: person in lotus position :person_in_lotus_position: person in lotus position: light skin tone :person_in_lotus_position_tone1: person in lotus position: medium-light skin tone :person_in_lotus_position_tone2: person in lotus position: medium skin tone :person_in_lotus_position_tone3: person in lotus position: medium-dark skin tone :person_in_lotus_position_tone4: person in lotus position: dark skin tone :person_in_lotus_position_tone5: person in steamy room :person_in_steamy_room: person in steamy room: light skin tone :person_in_steamy_room_tone1: person in steamy room: medium-light skin tone :person_in_steamy_room_tone2: person in steamy room: medium skin tone :person_in_steamy_room_tone3: person in steamy room: medium-dark skin tone :person_in_steamy_room_tone4: person in steamy room: dark skin tone :person_in_steamy_room_tone5: person juggling :person_juggling: person juggling: light skin tone :person_juggling_tone1: person juggling: medium-light skin tone :person_juggling_tone2: person juggling: medium skin tone :person_juggling_tone3: person juggling: medium-dark skin tone :person_juggling_tone4: person juggling: dark skin tone :person_juggling_tone5: person lifting weights :person_lifting_weights: person lifting weights: light skin tone :person_lifting_weights_tone1: person lifting weights: medium-light skin tone :person_lifting_weights_tone2: person lifting weights: medium skin tone :person_lifting_weights_tone3: person lifting weights: medium-dark skin tone :person_lifting_weights_tone4: person lifting weights: dark skin tone :person_lifting_weights_tone5: person mountain biking :person_mountain_biking: person mountain biking: light skin tone :person_mountain_biking_tone1: person mountain biking: medium-light skin tone :person_mountain_biking_tone2: person mountain biking: medium skin tone :person_mountain_biking_tone3: person mountain biking: medium-dark skin tone :person_mountain_biking_tone4: person mountain biking: dark skin tone :person_mountain_biking_tone5: person playing handball :person_playing_handball: person playing handball: light skin tone :person_playing_handball_tone1: person playing handball: medium-light skin tone :person_playing_handball_tone2: person playing handball: medium skin tone :person_playing_handball_tone3: person playing handball: medium-dark skin tone :person_playing_handball_tone4: person playing handball: dark skin tone :person_playing_handball_tone5: person playing water polo :person_playing_water_polo: person playing water polo: light skin tone :person_playing_water_polo_tone1: person playing water polo: medium-light skin tone :person_playing_water_polo_tone2: person playing water polo: medium skin tone :person_playing_water_polo_tone3: person playing water polo: medium-dark skin tone :person_playing_water_polo_tone4: person playing water polo: dark skin tone :person_playing_water_polo_tone5: person pouting :person_pouting: person pouting: light skin tone :person_pouting_tone1: person pouting: medium-light skin tone :person_pouting_tone2: person pouting: medium skin tone :person_pouting_tone3: person pouting: medium-dark skin tone :person_pouting_tone4: person pouting: dark skin tone :person_pouting_tone5: person raising hand :person_raising_hand: person raising hand: light skin tone :person_raising_hand_tone1: person raising hand: medium-light skin tone :person_raising_hand_tone2: person raising hand: medium skin tone :person_raising_hand_tone3: person raising hand: medium-dark skin tone :person_raising_hand_tone4: person raising hand: dark skin tone :person_raising_hand_tone5: person rowing boat :person_rowing_boat: person rowing boat: light skin tone :person_rowing_boat_tone1: person rowing boat: medium-light skin tone :person_rowing_boat_tone2: person rowing boat: medium skin tone :person_rowing_boat_tone3: person rowing boat: medium-dark skin tone :person_rowing_boat_tone4: person rowing boat: dark skin tone :person_rowing_boat_tone5: person running :person_running: person running: light skin tone :person_running_tone1: person running: medium-light skin tone :person_running_tone2: person running: medium skin tone :person_running_tone3: person running: medium-dark skin tone :person_running_tone4: person running: dark skin tone :person_running_tone5: person shrugging :person_shrugging: person shrugging: light skin tone :person_shrugging_tone1: person shrugging: medium-light skin tone :person_shrugging_tone2: person shrugging: medium skin tone :person_shrugging_tone3: person shrugging: medium-dark skin tone :person_shrugging_tone4: person shrugging: dark skin tone :person_shrugging_tone5: person surfing :person_surfing: person surfing: light skin tone :person_surfing_tone1: person surfing: medium-light skin tone :person_surfing_tone2: person surfing: medium skin tone :person_surfing_tone3: person surfing: medium-dark skin tone :person_surfing_tone4: person surfing: dark skin tone :person_surfing_tone5: person swimming :person_swimming: person swimming: light skin tone :person_swimming_tone1: person swimming: medium-light skin tone :person_swimming_tone2: person swimming: medium skin tone :person_swimming_tone3: person swimming: medium-dark skin tone :person_swimming_tone4: person swimming: dark skin tone :person_swimming_tone5: person tipping hand :person_tipping_hand: person tipping hand: light skin tone :person_tipping_hand_tone1: person tipping hand: medium-light skin tone :person_tipping_hand_tone2: person tipping hand: medium skin tone :person_tipping_hand_tone3: person tipping hand: medium-dark skin tone :person_tipping_hand_tone4: person tipping hand: dark skin tone :person_tipping_hand_tone5: person walking :person_walking: person walking: light skin tone :person_walking_tone1: person walking: medium-light skin tone :person_walking_tone2: person walking: medium skin tone :person_walking_tone3: person walking: medium-dark skin tone :person_walking_tone4: person walking: dark skin tone :person_walking_tone5: person wearing turban :person_wearing_turban: person wearing turban: light skin tone :person_wearing_turban_tone1: person wearing turban: medium-light skin tone :person_wearing_turban_tone2: person wearing turban: medium skin tone :person_wearing_turban_tone3: person wearing turban: medium-dark skin tone :person_wearing_turban_tone4: person wearing turban: dark skin tone :person_wearing_turban_tone5: pick :pick: pie :pie: pig :pig2: pig face :pig: pig nose :pig_nose: pill :pill: pineapple :pineapple: ping pong :ping_pong: Pisces :pisces: pizza :pizza: place of worship :place_of_worship: play or pause button :play_pause: backhand index pointing down :point_down: backhand index pointing down: light skin tone :point_down_tone1: backhand index pointing down: medium-light skin tone :point_down_tone2: backhand index pointing down: medium skin tone :point_down_tone3: backhand index pointing down: medium-dark skin tone :point_down_tone4: backhand index pointing down: dark skin tone :point_down_tone5: backhand index pointing left :point_left: backhand index pointing left: light skin tone :point_left_tone1: backhand index pointing left: medium-light skin tone :point_left_tone2: backhand index pointing left: medium skin tone :point_left_tone3: backhand index pointing left: medium-dark skin tone :point_left_tone4: backhand index pointing left: dark skin tone :point_left_tone5: backhand index pointing right :point_right: backhand index pointing right: light skin tone :point_right_tone1: backhand index pointing right: medium-light skin tone :point_right_tone2: backhand index pointing right: medium skin tone :point_right_tone3: backhand index pointing right: medium-dark skin tone :point_right_tone4: backhand index pointing right: dark skin tone :point_right_tone5: index pointing up :point_up: backhand index pointing up :point_up_2: backhand index pointing up: light skin tone :point_up_2_tone1: backhand index pointing up: medium-light skin tone :point_up_2_tone2: backhand index pointing up: medium skin tone :point_up_2_tone3: backhand index pointing up: medium-dark skin tone :point_up_2_tone4: backhand index pointing up: dark skin tone :point_up_2_tone5: index pointing up: light skin tone :point_up_tone1: index pointing up: medium-light skin tone :point_up_tone2: index pointing up: medium skin tone :point_up_tone3: index pointing up: medium-dark skin tone :point_up_tone4: index pointing up: dark skin tone :point_up_tone5: police car :police_car: police officer :police_officer: police officer: light skin tone :police_officer_tone1: police officer: medium-light skin tone :police_officer_tone2: police officer: medium skin tone :police_officer_tone3: police officer: medium-dark skin tone :police_officer_tone4: police officer: dark skin tone :police_officer_tone5: poodle :poodle: pile of poo :poop: popcorn :popcorn: Japanese post office :post_office: postal horn :postal_horn: postbox :postbox: potable water :potable_water: potato :potato: clutch bag :pouch: poultry leg :poultry_leg: pound banknote :pound: pound symbol :pound_symbol: pouting cat face :pouting_cat: folded hands :pray: folded hands: light skin tone :pray_tone1: folded hands: medium-light skin tone :pray_tone2: folded hands: medium skin tone :pray_tone3: folded hands: medium-dark skin tone :pray_tone4: folded hands: dark skin tone :pray_tone5: prayer beads :prayer_beads: pregnant woman :pregnant_woman: pregnant woman: light skin tone :pregnant_woman_tone1: pregnant woman: medium-light skin tone :pregnant_woman_tone2: pregnant woman: medium skin tone :pregnant_woman_tone3: pregnant woman: medium-dark skin tone :pregnant_woman_tone4: pregnant woman: dark skin tone :pregnant_woman_tone5: pretzel :pretzel: prince :prince: prince: light skin tone :prince_tone1: prince: medium-light skin tone :prince_tone2: prince: medium skin tone :prince_tone3: prince: medium-dark skin tone :prince_tone4: prince: dark skin tone :prince_tone5: princess :princess: princess: light skin tone :princess_tone1: princess: medium-light skin tone :princess_tone2: princess: medium skin tone :princess_tone3: princess: medium-dark skin tone :princess_tone4: princess: dark skin tone :princess_tone5: printer :printer: film projector :projector: oncoming fist :punch: oncoming fist: light skin tone :punch_tone1: oncoming fist: medium-light skin tone :punch_tone2: oncoming fist: medium skin tone :punch_tone3: oncoming fist: medium-dark skin tone :punch_tone4: oncoming fist: dark skin tone :punch_tone5: purple heart :purple_heart: purse :purse: pushpin :pushpin: litter in bin sign :put_litter_in_its_place: question mark :question: rabbit :rabbit2: rabbit face :rabbit: racing car :race_car: horse :racehorse: radio :radio: radio button :radio_button: radioactive :radioactive: pouting face :rage: railway car :railway_car: railway track :railway_track: rainbow :rainbow: rainbow flag :rainbow_flag: raised back of hand :raised_back_of_hand: raised back of hand: light skin tone :raised_back_of_hand_tone1: raised back of hand: medium-light skin tone :raised_back_of_hand_tone2: raised back of hand: medium skin tone :raised_back_of_hand_tone3: raised back of hand: medium-dark skin tone :raised_back_of_hand_tone4: raised back of hand: dark skin tone :raised_back_of_hand_tone5: raised hand :raised_hand: raised hand: light skin tone :raised_hand_tone1: raised hand: medium-light skin tone :raised_hand_tone2: raised hand: medium skin tone :raised_hand_tone3: raised hand: medium-dark skin tone :raised_hand_tone4: raised hand: dark skin tone :raised_hand_tone5: raising hands :raised_hands: raising hands: light skin tone :raised_hands_tone1: raising hands: medium-light skin tone :raised_hands_tone2: raising hands: medium skin tone :raised_hands_tone3: raising hands: medium-dark skin tone :raised_hands_tone4: raising hands: dark skin tone :raised_hands_tone5: ram :ram: steaming bowl :ramen: rat :rat: record button :record_button: recycling symbol :recycle: automobile :red_car: red circle :red_circle: regional indicator symbol letter a :regional_indicator_a: regional indicator symbol letter b :regional_indicator_b: regional indicator symbol letter c :regional_indicator_c: regional indicator symbol letter d :regional_indicator_d: regional indicator symbol letter e :regional_indicator_e: regional indicator symbol letter f :regional_indicator_f: regional indicator symbol letter g :regional_indicator_g: regional indicator symbol letter h :regional_indicator_h: regional indicator symbol letter i :regional_indicator_i: regional indicator symbol letter j :regional_indicator_j: regional indicator symbol letter k :regional_indicator_k: regional indicator symbol letter l :regional_indicator_l: regional indicator symbol letter m :regional_indicator_m: regional indicator symbol letter n :regional_indicator_n: regional indicator symbol letter o :regional_indicator_o: regional indicator symbol letter p :regional_indicator_p: regional indicator symbol letter q :regional_indicator_q: regional indicator symbol letter r :regional_indicator_r: regional indicator symbol letter s :regional_indicator_s: regional indicator symbol letter t :regional_indicator_t: regional indicator symbol letter u :regional_indicator_u: regional indicator symbol letter v :regional_indicator_v: regional indicator symbol letter w :regional_indicator_w: regional indicator symbol letter x :regional_indicator_x: regional indicator symbol letter y :regional_indicator_y: regional indicator symbol letter z :regional_indicator_z: registered :registered: smiling face :relaxed: relieved face :relieved: reminder ribbon :reminder_ribbon: repeat button :repeat: repeat single button :repeat_one: restroom :restroom: revolving hearts :revolving_hearts: fast reverse button :rewind: rhinoceros :rhino: ribbon :ribbon: cooked rice :rice: rice ball :rice_ball: rice cracker :rice_cracker: moon viewing ceremony :rice_scene: right-facing fist :right_facing_fist: right-facing fist: light skin tone :right_facing_fist_tone1: right-facing fist: medium-light skin tone :right_facing_fist_tone2: right-facing fist: medium skin tone :right_facing_fist_tone3: right-facing fist: medium-dark skin tone :right_facing_fist_tone4: right-facing fist: dark skin tone :right_facing_fist_tone5: ring :ring: robot face :robot: rocket :rocket: rolling on the floor laughing :rofl: roller coaster :roller_coaster: face with rolling eyes :rolling_eyes: rooster :rooster: rose :rose: rosette :rosette: police car light :rotating_light: round pushpin :round_pushpin: rugby football :rugby_football: running shirt :running_shirt_with_sash: Japanese \\u201cservice charge\\u201d button :sa: Sagittarius :sagittarius: sailboat :sailboat: sake :sake: green salad :salad: woman\\u2019s sandal :sandal: sandwich :sandwich: Santa Claus :santa: Santa Claus: light skin tone :santa_tone1: Santa Claus: medium-light skin tone :santa_tone2: Santa Claus: medium skin tone :santa_tone3: Santa Claus: medium-dark skin tone :santa_tone4: Santa Claus: dark skin tone :santa_tone5: satellite antenna :satellite: satellite :satellite_orbital: sauropod :sauropod: saxophone :saxophone: balance scale :scales: scarf :scarf: school :school: school backpack :school_satchel: scissors :scissors: kick scooter :scooter: scorpion :scorpion: Scorpius :scorpius: Scotland :scotland: face screaming in fear :scream: weary cat face :scream_cat: scroll :scroll: seat :seat: 2 nd place medal :second_place: Japanese \\u201csecret\\u201d button :secret: see-no-evil monkey :see_no_evil: seedling :seedling: selfie :selfie: selfie: light skin tone :selfie_tone1: selfie: medium-light skin tone :selfie_tone2: selfie: medium skin tone :selfie_tone3: selfie: medium-dark skin tone :selfie_tone4: selfie: dark skin tone :selfie_tone5: keycap: 7 :seven: shallow pan of food :shallow_pan_of_food: shamrock :shamrock: shark :shark: shaved ice :shaved_ice: ewe :sheep: spiral shell :shell: shield :shield: shinto shrine :shinto_shrine: ship :ship: t-shirt :shirt: shopping bags :shopping_bags: shopping cart :shopping_cart: shower :shower: shrimp :shrimp: shushing face :shushing_face: antenna bars :signal_strength: keycap: 6 :six: dotted six-pointed star :six_pointed_star: skis :ski: skier :skier: skull :skull: skull and crossbones :skull_crossbones: sled :sled: sleeping face :sleeping: person in bed :sleeping_accommodation: sleepy face :sleepy: slightly frowning face :slight_frown: slightly smiling face :slight_smile: slot machine :slot_machine: small blue diamond :small_blue_diamond: small orange diamond :small_orange_diamond: red triangle pointed up :small_red_triangle: red triangle pointed down :small_red_triangle_down: smiling face with open mouth & smiling eyes :smile: grinning cat face with smiling eyes :smile_cat: smiling face with open mouth :smiley: smiling cat face with open mouth :smiley_cat: smiling face with horns :smiling_imp: smirking face :smirk: cat face with wry smile :smirk_cat: cigarette :smoking: snail :snail: snake :snake: sneezing face :sneezing_face: snowboarder :snowboarder: snowboarder: light skin tone :snowboarder_tone1: snowboarder: medium-light skin tone :snowboarder_tone2: snowboarder: medium skin tone :snowboarder_tone3: snowboarder: medium-dark skin tone :snowboarder_tone4: snowboarder: dark skin tone :snowboarder_tone5: snowflake :snowflake: snowman :snowman2: snowman without snow :snowman: loudly crying face :sob: soccer ball :soccer: socks :socks: SOON arrow :soon: SOS button :sos: speaker medium volume :sound: alien monster :space_invader: spade suit :spades: spaghetti :spaghetti: sparkle :sparkle: sparkler :sparkler: sparkles :sparkles: sparkling heart :sparkling_heart: speak-no-evil monkey :speak_no_evil: speaker low volume :speaker: speaking head :speaking_head: speech balloon :speech_balloon: left speech bubble :speech_left: speedboat :speedboat: spider :spider: spider web :spider_web: spoon :spoon: squid :squid: stadium :stadium: glowing star :star2: white medium star :star: star and crescent :star_and_crescent: star of David :star_of_david: star-struck :star_struck: shooting star :stars: station :station: Statue of Liberty :statue_of_liberty: locomotive :steam_locomotive: pot of food :stew: stop button :stop_button: stopwatch :stopwatch: straight ruler :straight_ruler: strawberry :strawberry: face with stuck-out tongue :stuck_out_tongue: face with stuck-out tongue & closed eyes :stuck_out_tongue_closed_eyes: face with stuck-out tongue & winking eye :stuck_out_tongue_winking_eye: stuffed flatbread :stuffed_flatbread: sun with face :sun_with_face: sunflower :sunflower: smiling face with sunglasses :sunglasses: sun :sunny: sunrise :sunrise: sunrise over mountains :sunrise_over_mountains: sushi :sushi: suspension railway :suspension_railway: face with cold sweat :sweat: sweat droplets :sweat_drops: smiling face with open mouth & cold sweat :sweat_smile: roasted sweet potato :sweet_potato: input symbols :symbols: synagogue :synagogue: syringe :syringe: T-Rex :t_rex: taco :taco: party popper :tada: takeout box :takeout_box: tanabata tree :tanabata_tree: tangerine :tangerine: Taurus :taurus: taxi :taxi: teacup without handle :tea: telephone :telephone: telephone receiver :telephone_receiver: telescope :telescope: tennis :tennis: tent :tent: thermometer :thermometer: face with thermometer :thermometer_face: thinking face :thinking: 3 rd place medal :third_place: thought balloon :thought_balloon: keycap: 3 :three: thumbs down :thumbsdown: thumbs down: light skin tone :thumbsdown_tone1: thumbs down: medium-light skin tone :thumbsdown_tone2: thumbs down: medium skin tone :thumbsdown_tone3: thumbs down: medium-dark skin tone :thumbsdown_tone4: thumbs down: dark skin tone :thumbsdown_tone5: thumbs up :thumbsup: thumbs up: light skin tone :thumbsup_tone1: thumbs up: medium-light skin tone :thumbsup_tone2: thumbs up: medium skin tone :thumbsup_tone3: thumbs up: medium-dark skin tone :thumbsup_tone4: thumbs up: dark skin tone :thumbsup_tone5: cloud with lightning and rain :thunder_cloud_rain: ticket :ticket: admission tickets :tickets: tiger :tiger2: tiger face :tiger: timer clock :timer: tired face :tired_face: trade mark :tm: toilet :toilet: Tokyo tower :tokyo_tower: tomato :tomato: light skin tone :tone1: medium-light skin tone :tone2: medium skin tone :tone3: medium-dark skin tone :tone4: dark skin tone :tone5: tongue :tongue: hammer and wrench :tools: TOP arrow :top: top hat :tophat: next track button :track_next: last track button :track_previous: trackball :trackball: tractor :tractor: horizontal traffic light :traffic_light: train :train2: tram car :train: tram :tram: triangular flag :triangular_flag_on_post: triangular ruler :triangular_ruler: trident emblem :trident: face with steam from nose :triumph: trolleybus :trolleybus: trophy :trophy: tropical drink :tropical_drink: tropical fish :tropical_fish: delivery truck :truck: trumpet :trumpet: tulip :tulip: tumbler glass :tumbler_glass: turkey :turkey: turtle :turtle: television :tv: shuffle tracks button :twisted_rightwards_arrows: keycap: 2 :two: two hearts :two_hearts: two men holding hands :two_men_holding_hands: two women holding hands :two_women_holding_hands: Japanese \\u201cdiscount\\u201d button :u5272: Japanese \\u201cpassing grade\\u201d button :u5408: Japanese \\u201copen for business\\u201d button :u55b6: Japanese \\u201creserved\\u201d button :u6307: Japanese \\u201cmonthly amount\\u201d button :u6708: Japanese \\u201cnot free of charge\\u201d button :u6709: Japanese \\u201cno vacancy\\u201d button :u6e80: Japanese \\u201cfree of charge\\u201d button :u7121: Japanese \\u201capplication\\u201d button :u7533: Japanese \\u201cprohibited\\u201d button :u7981: Japanese \\u201cvacancy\\u201d button :u7a7a: umbrella :umbrella2: umbrella with rain drops :umbrella: unamused face :unamused: no one under eighteen :underage: unicorn face :unicorn: United Nations :united_nations: unlocked :unlock: UP! button :up: upside-down face :upside_down: funeral urn :urn: victory hand :v: victory hand: light skin tone :v_tone1: victory hand: medium-light skin tone :v_tone2: victory hand: medium skin tone :v_tone3: victory hand: medium-dark skin tone :v_tone4: victory hand: dark skin tone :v_tone5: vampire :vampire: vampire: light skin tone :vampire_tone1: vampire: medium-light skin tone :vampire_tone2: vampire: medium skin tone :vampire_tone3: vampire: medium-dark skin tone :vampire_tone4: vampire: dark skin tone :vampire_tone5: vertical traffic light :vertical_traffic_light: videocassette :vhs: vibration mode :vibration_mode: video camera :video_camera: video game :video_game: violin :violin: Virgo :virgo: volcano :volcano: volleyball :volleyball: VS button :vs: vulcan salute :vulcan: vulcan salute: light skin tone :vulcan_tone1: vulcan salute: medium-light skin tone :vulcan_tone2: vulcan salute: medium skin tone :vulcan_tone3: vulcan salute: medium-dark skin tone :vulcan_tone4: vulcan salute: dark skin tone :vulcan_tone5: Wales :wales: waning crescent moon :waning_crescent_moon: waning gibbous moon :waning_gibbous_moon: warning :warning: wastebasket :wastebasket: watch :watch: water buffalo :water_buffalo: watermelon :watermelon: waving hand :wave: waving hand: light skin tone :wave_tone1: waving hand: medium-light skin tone :wave_tone2: waving hand: medium skin tone :wave_tone3: waving hand: medium-dark skin tone :wave_tone4: waving hand: dark skin tone :wave_tone5: wavy dash :wavy_dash: waxing crescent moon :waxing_crescent_moon: waxing gibbous moon :waxing_gibbous_moon: water closet :wc: weary face :weary: wedding :wedding: whale :whale2: spouting whale :whale: wheel of dharma :wheel_of_dharma: wheelchair symbol :wheelchair: white heavy check mark :white_check_mark: white circle :white_circle: white flower :white_flower: white large square :white_large_square: white medium-small square :white_medium_small_square: white medium square :white_medium_square: white small square :white_small_square: white square button :white_square_button: sun behind large cloud :white_sun_cloud: sun behind rain cloud :white_sun_rain_cloud: sun behind small cloud :white_sun_small_cloud: wilted flower :wilted_rose: wind face :wind_blowing_face: wind chime :wind_chime: wine glass :wine_glass: winking face :wink: wolf face :wolf: woman :woman: woman artist :woman_artist: woman artist: light skin tone :woman_artist_tone1: woman artist: medium-light skin tone :woman_artist_tone2: woman artist: medium skin tone :woman_artist_tone3: woman artist: medium-dark skin tone :woman_artist_tone4: woman artist: dark skin tone :woman_artist_tone5: woman astronaut :woman_astronaut: woman astronaut: light skin tone :woman_astronaut_tone1: woman astronaut: medium-light skin tone :woman_astronaut_tone2: woman astronaut: medium skin tone :woman_astronaut_tone3: woman astronaut: medium-dark skin tone :woman_astronaut_tone4: woman astronaut: dark skin tone :woman_astronaut_tone5: woman biking :woman_biking: woman biking: light skin tone :woman_biking_tone1: woman biking: medium-light skin tone :woman_biking_tone2: woman biking: medium skin tone :woman_biking_tone3: woman biking: medium-dark skin tone :woman_biking_tone4: woman biking: dark skin tone :woman_biking_tone5: woman bouncing ball :woman_bouncing_ball: woman bouncing ball: light skin tone :woman_bouncing_ball_tone1: woman bouncing ball: medium-light skin tone :woman_bouncing_ball_tone2: woman bouncing ball: medium skin tone :woman_bouncing_ball_tone3: woman bouncing ball: medium-dark skin tone :woman_bouncing_ball_tone4: woman bouncing ball: dark skin tone :woman_bouncing_ball_tone5: woman bowing :woman_bowing: woman bowing: light skin tone :woman_bowing_tone1: woman bowing: medium-light skin tone :woman_bowing_tone2: woman bowing: medium skin tone :woman_bowing_tone3: woman bowing: medium-dark skin tone :woman_bowing_tone4: woman bowing: dark skin tone :woman_bowing_tone5: woman cartwheeling :woman_cartwheeling: woman cartwheeling: light skin tone :woman_cartwheeling_tone1: woman cartwheeling: medium-light skin tone :woman_cartwheeling_tone2: woman cartwheeling: medium skin tone :woman_cartwheeling_tone3: woman cartwheeling: medium-dark skin tone :woman_cartwheeling_tone4: woman cartwheeling: dark skin tone :woman_cartwheeling_tone5: woman climbing :woman_climbing: woman climbing: light skin tone :woman_climbing_tone1: woman climbing: medium-light skin tone :woman_climbing_tone2: woman climbing: medium skin tone :woman_climbing_tone3: woman climbing: medium-dark skin tone :woman_climbing_tone4: woman climbing: dark skin tone :woman_climbing_tone5: woman construction worker :woman_construction_worker: woman construction worker: light skin tone :woman_construction_worker_tone1: woman construction worker: medium-light skin tone :woman_construction_worker_tone2: woman construction worker: medium skin tone :woman_construction_worker_tone3: woman construction worker: medium-dark skin tone :woman_construction_worker_tone4: woman construction worker: dark skin tone :woman_construction_worker_tone5: woman cook :woman_cook: woman cook: light skin tone :woman_cook_tone1: woman cook: medium-light skin tone :woman_cook_tone2: woman cook: medium skin tone :woman_cook_tone3: woman cook: medium-dark skin tone :woman_cook_tone4: woman cook: dark skin tone :woman_cook_tone5: woman detective :woman_detective: woman detective: light skin tone :woman_detective_tone1: woman detective: medium-light skin tone :woman_detective_tone2: woman detective: medium skin tone :woman_detective_tone3: woman detective: medium-dark skin tone :woman_detective_tone4: woman detective: dark skin tone :woman_detective_tone5: woman elf :woman_elf: woman elf: light skin tone :woman_elf_tone1: woman elf: medium-light skin tone :woman_elf_tone2: woman elf: medium skin tone :woman_elf_tone3: woman elf: medium-dark skin tone :woman_elf_tone4: woman elf: dark skin tone :woman_elf_tone5: woman facepalming :woman_facepalming: woman facepalming: light skin tone :woman_facepalming_tone1: woman facepalming: medium-light skin tone :woman_facepalming_tone2: woman facepalming: medium skin tone :woman_facepalming_tone3: woman facepalming: medium-dark skin tone :woman_facepalming_tone4: woman facepalming: dark skin tone :woman_facepalming_tone5: woman factory worker :woman_factory_worker: woman factory worker: light skin tone :woman_factory_worker_tone1: woman factory worker: medium-light skin tone :woman_factory_worker_tone2: woman factory worker: medium skin tone :woman_factory_worker_tone3: woman factory worker: medium-dark skin tone :woman_factory_worker_tone4: woman factory worker: dark skin tone :woman_factory_worker_tone5: woman fairy :woman_fairy: woman fairy: light skin tone :woman_fairy_tone1: woman fairy: medium-light skin tone :woman_fairy_tone2: woman fairy: medium skin tone :woman_fairy_tone3: woman fairy: medium-dark skin tone :woman_fairy_tone4: woman fairy: dark skin tone :woman_fairy_tone5: woman farmer :woman_farmer: woman farmer: light skin tone :woman_farmer_tone1: woman farmer: medium-light skin tone :woman_farmer_tone2: woman farmer: medium skin tone :woman_farmer_tone3: woman farmer: medium-dark skin tone :woman_farmer_tone4: woman farmer: dark skin tone :woman_farmer_tone5: woman firefighter :woman_firefighter: woman firefighter: light skin tone :woman_firefighter_tone1: woman firefighter: medium-light skin tone :woman_firefighter_tone2: woman firefighter: medium skin tone :woman_firefighter_tone3: woman firefighter: medium-dark skin tone :woman_firefighter_tone4: woman firefighter: dark skin tone :woman_firefighter_tone5: woman frowning :woman_frowning: woman frowning: light skin tone :woman_frowning_tone1: woman frowning: medium-light skin tone :woman_frowning_tone2: woman frowning: medium skin tone :woman_frowning_tone3: woman frowning: medium-dark skin tone :woman_frowning_tone4: woman frowning: dark skin tone :woman_frowning_tone5: woman genie :woman_genie: woman gesturing NO :woman_gesturing_no: woman gesturing NO: light skin tone :woman_gesturing_no_tone1: woman gesturing NO: medium-light skin tone :woman_gesturing_no_tone2: woman gesturing NO: medium skin tone :woman_gesturing_no_tone3: woman gesturing NO: medium-dark skin tone :woman_gesturing_no_tone4: woman gesturing NO: dark skin tone :woman_gesturing_no_tone5: woman gesturing OK :woman_gesturing_ok: woman gesturing OK: light skin tone :woman_gesturing_ok_tone1: woman gesturing OK: medium-light skin tone :woman_gesturing_ok_tone2: woman gesturing OK: medium skin tone :woman_gesturing_ok_tone3: woman gesturing OK: medium-dark skin tone :woman_gesturing_ok_tone4: woman gesturing OK: dark skin tone :woman_gesturing_ok_tone5: woman getting massage :woman_getting_face_massage: woman getting massage: light skin tone :woman_getting_face_massage_tone1: woman getting massage: medium-light skin tone :woman_getting_face_massage_tone2: woman getting massage: medium skin tone :woman_getting_face_massage_tone3: woman getting massage: medium-dark skin tone :woman_getting_face_massage_tone4: woman getting massage: dark skin tone :woman_getting_face_massage_tone5: woman getting haircut :woman_getting_haircut: woman getting haircut: light skin tone :woman_getting_haircut_tone1: woman getting haircut: medium-light skin tone :woman_getting_haircut_tone2: woman getting haircut: medium skin tone :woman_getting_haircut_tone3: woman getting haircut: medium-dark skin tone :woman_getting_haircut_tone4: woman getting haircut: dark skin tone :woman_getting_haircut_tone5: woman golfing :woman_golfing: woman golfing: light skin tone :woman_golfing_tone1: woman golfing: medium-light skin tone :woman_golfing_tone2: woman golfing: medium skin tone :woman_golfing_tone3: woman golfing: medium-dark skin tone :woman_golfing_tone4: woman golfing: dark skin tone :woman_golfing_tone5: woman guard :woman_guard: woman guard: light skin tone :woman_guard_tone1: woman guard: medium-light skin tone :woman_guard_tone2: woman guard: medium skin tone :woman_guard_tone3: woman guard: medium-dark skin tone :woman_guard_tone4: woman guard: dark skin tone :woman_guard_tone5: woman health worker :woman_health_worker: woman health worker: light skin tone :woman_health_worker_tone1: woman health worker: medium-light skin tone :woman_health_worker_tone2: woman health worker: medium skin tone :woman_health_worker_tone3: woman health worker: medium-dark skin tone :woman_health_worker_tone4: woman health worker: dark skin tone :woman_health_worker_tone5: woman in lotus position :woman_in_lotus_position: woman in lotus position: light skin tone :woman_in_lotus_position_tone1: woman in lotus position: medium-light skin tone :woman_in_lotus_position_tone2: woman in lotus position: medium skin tone :woman_in_lotus_position_tone3: woman in lotus position: medium-dark skin tone :woman_in_lotus_position_tone4: woman in lotus position: dark skin tone :woman_in_lotus_position_tone5: woman in steamy room :woman_in_steamy_room: woman in steamy room: light skin tone :woman_in_steamy_room_tone1: woman in steamy room: medium-light skin tone :woman_in_steamy_room_tone2: woman in steamy room: medium skin tone :woman_in_steamy_room_tone3: woman in steamy room: medium-dark skin tone :woman_in_steamy_room_tone4: woman in steamy room: dark skin tone :woman_in_steamy_room_tone5: woman judge :woman_judge: woman judge: light skin tone :woman_judge_tone1: woman judge: medium-light skin tone :woman_judge_tone2: woman judge: medium skin tone :woman_judge_tone3: woman judge: medium-dark skin tone :woman_judge_tone4: woman judge: dark skin tone :woman_judge_tone5: woman juggling :woman_juggling: woman juggling: light skin tone :woman_juggling_tone1: woman juggling: medium-light skin tone :woman_juggling_tone2: woman juggling: medium skin tone :woman_juggling_tone3: woman juggling: medium-dark skin tone :woman_juggling_tone4: woman juggling: dark skin tone :woman_juggling_tone5: woman lifting weights :woman_lifting_weights: woman lifting weights: light skin tone :woman_lifting_weights_tone1: woman lifting weights: medium-light skin tone :woman_lifting_weights_tone2: woman lifting weights: medium skin tone :woman_lifting_weights_tone3: woman lifting weights: medium-dark skin tone :woman_lifting_weights_tone4: woman lifting weights: dark skin tone :woman_lifting_weights_tone5: woman mage :woman_mage: woman mage: light skin tone :woman_mage_tone1: woman mage: medium-light skin tone :woman_mage_tone2: woman mage: medium skin tone :woman_mage_tone3: woman mage: medium-dark skin tone :woman_mage_tone4: woman mage: dark skin tone :woman_mage_tone5: woman mechanic :woman_mechanic: woman mechanic: light skin tone :woman_mechanic_tone1: woman mechanic: medium-light skin tone :woman_mechanic_tone2: woman mechanic: medium skin tone :woman_mechanic_tone3: woman mechanic: medium-dark skin tone :woman_mechanic_tone4: woman mechanic: dark skin tone :woman_mechanic_tone5: woman mountain biking :woman_mountain_biking: woman mountain biking: light skin tone :woman_mountain_biking_tone1: woman mountain biking: medium-light skin tone :woman_mountain_biking_tone2: woman mountain biking: medium skin tone :woman_mountain_biking_tone3: woman mountain biking: medium-dark skin tone :woman_mountain_biking_tone4: woman mountain biking: dark skin tone :woman_mountain_biking_tone5: woman office worker :woman_office_worker: woman office worker: light skin tone :woman_office_worker_tone1: woman office worker: medium-light skin tone :woman_office_worker_tone2: woman office worker: medium skin tone :woman_office_worker_tone3: woman office worker: medium-dark skin tone :woman_office_worker_tone4: woman office worker: dark skin tone :woman_office_worker_tone5: woman pilot :woman_pilot: woman pilot: light skin tone :woman_pilot_tone1: woman pilot: medium-light skin tone :woman_pilot_tone2: woman pilot: medium skin tone :woman_pilot_tone3: woman pilot: medium-dark skin tone :woman_pilot_tone4: woman pilot: dark skin tone :woman_pilot_tone5: woman playing handball :woman_playing_handball: woman playing handball: light skin tone :woman_playing_handball_tone1: woman playing handball: medium-light skin tone :woman_playing_handball_tone2: woman playing handball: medium skin tone :woman_playing_handball_tone3: woman playing handball: medium-dark skin tone :woman_playing_handball_tone4: woman playing handball: dark skin tone :woman_playing_handball_tone5: woman playing water polo :woman_playing_water_polo: woman playing water polo: light skin tone :woman_playing_water_polo_tone1: woman playing water polo: medium-light skin tone :woman_playing_water_polo_tone2: woman playing water polo: medium skin tone :woman_playing_water_polo_tone3: woman playing water polo: medium-dark skin tone :woman_playing_water_polo_tone4: woman playing water polo: dark skin tone :woman_playing_water_polo_tone5: woman police officer :woman_police_officer: woman police officer: light skin tone :woman_police_officer_tone1: woman police officer: medium-light skin tone :woman_police_officer_tone2: woman police officer: medium skin tone :woman_police_officer_tone3: woman police officer: medium-dark skin tone :woman_police_officer_tone4: woman police officer: dark skin tone :woman_police_officer_tone5: woman pouting :woman_pouting: woman pouting: light skin tone :woman_pouting_tone1: woman pouting: medium-light skin tone :woman_pouting_tone2: woman pouting: medium skin tone :woman_pouting_tone3: woman pouting: medium-dark skin tone :woman_pouting_tone4: woman pouting: dark skin tone :woman_pouting_tone5: woman raising hand :woman_raising_hand: woman raising hand: light skin tone :woman_raising_hand_tone1: woman raising hand: medium-light skin tone :woman_raising_hand_tone2: woman raising hand: medium skin tone :woman_raising_hand_tone3: woman raising hand: medium-dark skin tone :woman_raising_hand_tone4: woman raising hand: dark skin tone :woman_raising_hand_tone5: woman rowing boat :woman_rowing_boat: woman rowing boat: light skin tone :woman_rowing_boat_tone1: woman rowing boat: medium-light skin tone :woman_rowing_boat_tone2: woman rowing boat: medium skin tone :woman_rowing_boat_tone3: woman rowing boat: medium-dark skin tone :woman_rowing_boat_tone4: woman rowing boat: dark skin tone :woman_rowing_boat_tone5: woman running :woman_running: woman running: light skin tone :woman_running_tone1: woman running: medium-light skin tone :woman_running_tone2: woman running: medium skin tone :woman_running_tone3: woman running: medium-dark skin tone :woman_running_tone4: woman running: dark skin tone :woman_running_tone5: woman scientist :woman_scientist: woman scientist: light skin tone :woman_scientist_tone1: woman scientist: medium-light skin tone :woman_scientist_tone2: woman scientist: medium skin tone :woman_scientist_tone3: woman scientist: medium-dark skin tone :woman_scientist_tone4: woman scientist: dark skin tone :woman_scientist_tone5: woman shrugging :woman_shrugging: woman shrugging: light skin tone :woman_shrugging_tone1: woman shrugging: medium-light skin tone :woman_shrugging_tone2: woman shrugging: medium skin tone :woman_shrugging_tone3: woman shrugging: medium-dark skin tone :woman_shrugging_tone4: woman shrugging: dark skin tone :woman_shrugging_tone5: woman singer :woman_singer: woman singer: light skin tone :woman_singer_tone1: woman singer: medium-light skin tone :woman_singer_tone2: woman singer: medium skin tone :woman_singer_tone3: woman singer: medium-dark skin tone :woman_singer_tone4: woman singer: dark skin tone :woman_singer_tone5: woman student :woman_student: woman student: light skin tone :woman_student_tone1: woman student: medium-light skin tone :woman_student_tone2: woman student: medium skin tone :woman_student_tone3: woman student: medium-dark skin tone :woman_student_tone4: woman student: dark skin tone :woman_student_tone5: woman surfing :woman_surfing: woman surfing: light skin tone :woman_surfing_tone1: woman surfing: medium-light skin tone :woman_surfing_tone2: woman surfing: medium skin tone :woman_surfing_tone3: woman surfing: medium-dark skin tone :woman_surfing_tone4: woman surfing: dark skin tone :woman_surfing_tone5: woman swimming :woman_swimming: woman swimming: light skin tone :woman_swimming_tone1: woman swimming: medium-light skin tone :woman_swimming_tone2: woman swimming: medium skin tone :woman_swimming_tone3: woman swimming: medium-dark skin tone :woman_swimming_tone4: woman swimming: dark skin tone :woman_swimming_tone5: woman teacher :woman_teacher: woman teacher: light skin tone :woman_teacher_tone1: woman teacher: medium-light skin tone :woman_teacher_tone2: woman teacher: medium skin tone :woman_teacher_tone3: woman teacher: medium-dark skin tone :woman_teacher_tone4: woman teacher: dark skin tone :woman_teacher_tone5: woman technologist :woman_technologist: woman technologist: light skin tone :woman_technologist_tone1: woman technologist: medium-light skin tone :woman_technologist_tone2: woman technologist: medium skin tone :woman_technologist_tone3: woman technologist: medium-dark skin tone :woman_technologist_tone4: woman technologist: dark skin tone :woman_technologist_tone5: woman tipping hand :woman_tipping_hand: woman tipping hand: light skin tone :woman_tipping_hand_tone1: woman tipping hand: medium-light skin tone :woman_tipping_hand_tone2: woman tipping hand: medium skin tone :woman_tipping_hand_tone3: woman tipping hand: medium-dark skin tone :woman_tipping_hand_tone4: woman tipping hand: dark skin tone :woman_tipping_hand_tone5: woman: light skin tone :woman_tone1: woman: medium-light skin tone :woman_tone2: woman: medium skin tone :woman_tone3: woman: medium-dark skin tone :woman_tone4: woman: dark skin tone :woman_tone5: woman vampire :woman_vampire: woman vampire: light skin tone :woman_vampire_tone1: woman vampire: medium-light skin tone :woman_vampire_tone2: woman vampire: medium skin tone :woman_vampire_tone3: woman vampire: medium-dark skin tone :woman_vampire_tone4: woman vampire: dark skin tone :woman_vampire_tone5: woman walking :woman_walking: woman walking: light skin tone :woman_walking_tone1: woman walking: medium-light skin tone :woman_walking_tone2: woman walking: medium skin tone :woman_walking_tone3: woman walking: medium-dark skin tone :woman_walking_tone4: woman walking: dark skin tone :woman_walking_tone5: woman wearing turban :woman_wearing_turban: woman wearing turban: light skin tone :woman_wearing_turban_tone1: woman wearing turban: medium-light skin tone :woman_wearing_turban_tone2: woman wearing turban: medium skin tone :woman_wearing_turban_tone3: woman wearing turban: medium-dark skin tone :woman_wearing_turban_tone4: woman wearing turban: dark skin tone :woman_wearing_turban_tone5: woman with headscarf :woman_with_headscarf: woman with headscarf: light skin tone :woman_with_headscarf_tone1: woman with headscarf: medium-light skin tone :woman_with_headscarf_tone2: woman with headscarf: medium skin tone :woman_with_headscarf_tone3: woman with headscarf: medium-dark skin tone :woman_with_headscarf_tone4: woman with headscarf: dark skin tone :woman_with_headscarf_tone5: woman zombie :woman_zombie: woman\\u2019s clothes :womans_clothes: woman\\u2019s hat :womans_hat: women with bunny ears partying :women_with_bunny_ears_partying: women wrestling :women_wrestling: women\\u2019s room :womens: worried face :worried: wrench :wrench: writing hand :writing_hand: writing hand: light skin tone :writing_hand_tone1: writing hand: medium-light skin tone :writing_hand_tone2: writing hand: medium skin tone :writing_hand_tone3: writing hand: medium-dark skin tone :writing_hand_tone4: writing hand: dark skin tone :writing_hand_tone5: cross mark :x: yellow heart :yellow_heart: yen banknote :yen: yin yang :yin_yang: face savouring delicious food :yum: high voltage :zap: zebra :zebra: keycap: 0 :zero: zipper-mouth face :zipper_mouth: zombie :zombie: zzz :zzz:","title":"2. emojione\u5168\u540d\u77ed\u540d\u6620\u5c04\u8868"},{"location":"mkdocs/appendix/level/","text":"\u4e00\u4e2a.md\u91cc\u53ea\u80fd\u6709\u4e00\u4e2a#\uff08h1\uff09\uff0c\u4e0b\u9762\u662f\u591a\u4e2a## \u5982\u679c\u6709\u591a\u4e2a#\uff08h1\uff09\uff0c\u5219\u662f\u4e0d\u6807\u51c6\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u4e0d\u4f1a\u81ea\u52a8\u751f\u4ea7\u76ee\u5f55 \u5982\u679c.md\u6ca1\u6709\u7528#\uff08h1\uff09\uff0c\u5219mkdocs\u4f1a\u81ea\u52a8\u5c06\u8be5\u6587\u4ef6\u5728mkdocs.yml\u91cc\u5bf9\u5e94\u7684page\u540d\u7528h1\u6548\u679c\u5c55\u793a\u5728\u7b2c\u4e00\u884c","title":"6. mkdocs\u5c42\u7ea7\u5173\u7cfb"},{"location":"mkdocs/appendix/module/","text":"\u4e0b\u8ff0\u5747\u4e3a\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027 python markdown \u00b6 \u662f\u7528python\u5199\u7684markdown\u6a21\u5757\uff0c\u7528\u8fd9\u6a21\u5757\u53ef\u4ee5\u5c06markdown\u6587\u672c\u6e32\u67d3\u6210html\uff0c\u6bd4\u5982\uff1a >>> import markdown >>> text = ''' ... # abc ... ```go ... import \"fmt\" ... ``` ... ... ## sss ... ... - xxx ... - yyy ... ''' >>> html = markdown.markdown(text) >>> print html <h1>abc</h1> <p><code>go import \"fmt\"</code></p> <h2>sss</h2> <ul> <li>xxx</li> <li>yyy</li> </ul> \u540c\u65f6markdown\u6a21\u5757\u5185\u7f6e\u4e00\u4e9b\u6269\u5c55\uff0c\u6709\uff1a abbr.py admonition.py attr_list.py codehilite.py def_list.py extra.py fenced_code.py footnotes.py headerid.py meta.py nl2br.py sane_lists.py smart_strong.py smarty.py tables.py toc.py wikilinks.py pymdownx \u00b6 \u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u6269\u5c55\u4e86markdown\u7684\u529f\u80fd\uff0c\u6bd4\u5982emoji\u56fe\u6807\u3001\u53ef\u6298\u53e0\u7684\u6587\u672c\u6846\u7b49\uff0cpymdownx\u4e5f\u662f\u8c03\u7528markdown\u6a21\u5757\u505a\u4e8b\uff0cpymdownx\u5305\u542b\u4ee5\u4e0b\u529f\u80fd\uff1a arithmatex.py b64.py betterem.py caret.py critic.py details.py emoji.py emoji1_db.py escapeall.py extra.py extrarawhtml.py gemoji_db.py github.py highlight.py inlinehilite.py keymap_db.py keys.py magiclink.py mark.py pathconverter.py plainhtml.py progressbar.py slugs.py smartsymbols.py snippets.py superfences.py tasklist.py tilde.py twemoji_db.py util.py mkdocs \u00b6 \u662f\u7528python\u7f16\u5199\u7684\uff0c\u5305\u62ecmkdocs\u4e3b\u9898\u53ca\u547d\u4ee4\u884c\u5de5\u5177\uff0cmkdocs\u8c03\u7528python markdown\u6765\u6e32\u67d3html\uff0c\u5176\u4e2d\u91cd\u5199\u4e86\u5c11\u90e8\u5206\u57fa\u7840\u529f\u80fd\uff0c\u6bd4\u5982toc\uff0c\u4ee5\u8fbe\u5230\u7b26\u5408mkdocs\u4e3b\u9898\u6548\u679c\uff1bmkdocs\u4e5f\u5185\u7f6e\u4e00\u79cd\u4e3b\u9898\uff0c\u5c31\u53ebmkdocs\uff0c\u540c\u65f6\u4e5f\u5185\u7f6e\u652f\u6301readthedocs\uff0c\u5e76\u4e14mkdocs\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898\u3002mkdocs\u4e3b\u8981\u5c31\u662f\u4e00\u4e2a\u96c6\u6210\u5668\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u6765\u7b80\u5316\u6e32\u67d3\u3001\u90e8\u7f72\u3001\u4f7f\u7528\u3001\u6a21\u5757\u8c03\u7528\u3001\u4e3b\u9898\u8c03\u7528 material \u00b6 \u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u7b26\u5408mkdocs\u89c4\u8303\u7684\u81ea\u5b9a\u4e49\u4e3b\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7pip install mkdocs-material\u6765\u4e0b\u8f7d\uff0c\u8fd9\u4e2a\u6a21\u5757\u91cc\u9762\u90fd\u662f\u4e00\u4e9bjs\u3001css\u3001html\u6587\u4ef6 material\u8fd9\u4e2a\u6a21\u5757\u540d\u548c\u4e3b\u9898\u98ce\u683c\uff0c\u662f\u6765\u81ea\u4e8egoogle material\uff0c\u5373google\u5b9a\u4e49\u7684\u4e00\u79cd\u901a\u7528\u98ce\u683c\uff0c\u7528\u4e8e\u517c\u5bb9\u4e0d\u540c\u5206\u8fa8\u7387\u4e0b\u7684\u9875\u9762\u5c55\u793a\uff0c\u5373\u53ea\u8981\u7b26\u5408\u8fd9\u79cd\u8c37\u6b4c\u98ce\u683c\u7684\uff0c\u4e00\u5904\u7f16\u5199\uff0c\u5904\u5904\u4f7f\u7528\uff08\u5728pc\u3001\u624b\u673a\u4e0a\u90fd\u53ef\u4ee5\u7528\uff0c\u5373\u4f1a\u6839\u636e\u5206\u8fa8\u7387\u81ea\u52a8\u8c03\u6574\u9875\u9762\u5c55\u793a\uff09 material\u4e3b\u9898\u5bf9python markdown\u7684\u4e00\u4e9b\u5185\u7f6e\u6269\u5c55\u548cpymdownx\u7684\u529f\u80fd\u505a\u4e86\u4e3b\u9898\u6548\u679c\u4f18\u5316\uff0c\u4ee5\u4fbf\u66f4\u4f18\u7f8e\uff0c\u5185\u7f6e\u7684\u6709\uff1a \u652f\u6301\u7684python markdown\u6269\u5c55\u6709\uff1aAdmonition\u3001CodeHilite\u3001Footnotes\u3001Metadata\u3001Permalinks pymdownx\u6709\uff1aArithmatex\u3001BetterEM\u3001Caret\u3001Critic\u3001Details\u3001Emoji\u3001InlineHilite\u3001MagicLink\u3001Mark\u3001SmartSymbols\u3001SuperFences\u3001Tasklist\u3001Tilde","title":"5. \u6a21\u5757\u4ecb\u7ecd"},{"location":"mkdocs/appendix/module/#python-markdown","text":"\u662f\u7528python\u5199\u7684markdown\u6a21\u5757\uff0c\u7528\u8fd9\u6a21\u5757\u53ef\u4ee5\u5c06markdown\u6587\u672c\u6e32\u67d3\u6210html\uff0c\u6bd4\u5982\uff1a >>> import markdown >>> text = ''' ... # abc ... ```go ... import \"fmt\" ... ``` ... ... ## sss ... ... - xxx ... - yyy ... ''' >>> html = markdown.markdown(text) >>> print html <h1>abc</h1> <p><code>go import \"fmt\"</code></p> <h2>sss</h2> <ul> <li>xxx</li> <li>yyy</li> </ul> \u540c\u65f6markdown\u6a21\u5757\u5185\u7f6e\u4e00\u4e9b\u6269\u5c55\uff0c\u6709\uff1a abbr.py admonition.py attr_list.py codehilite.py def_list.py extra.py fenced_code.py footnotes.py headerid.py meta.py nl2br.py sane_lists.py smart_strong.py smarty.py tables.py toc.py wikilinks.py","title":"python markdown"},{"location":"mkdocs/appendix/module/#pymdownx","text":"\u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u6269\u5c55\u4e86markdown\u7684\u529f\u80fd\uff0c\u6bd4\u5982emoji\u56fe\u6807\u3001\u53ef\u6298\u53e0\u7684\u6587\u672c\u6846\u7b49\uff0cpymdownx\u4e5f\u662f\u8c03\u7528markdown\u6a21\u5757\u505a\u4e8b\uff0cpymdownx\u5305\u542b\u4ee5\u4e0b\u529f\u80fd\uff1a arithmatex.py b64.py betterem.py caret.py critic.py details.py emoji.py emoji1_db.py escapeall.py extra.py extrarawhtml.py gemoji_db.py github.py highlight.py inlinehilite.py keymap_db.py keys.py magiclink.py mark.py pathconverter.py plainhtml.py progressbar.py slugs.py smartsymbols.py snippets.py superfences.py tasklist.py tilde.py twemoji_db.py util.py","title":"pymdownx"},{"location":"mkdocs/appendix/module/#mkdocs","text":"\u662f\u7528python\u7f16\u5199\u7684\uff0c\u5305\u62ecmkdocs\u4e3b\u9898\u53ca\u547d\u4ee4\u884c\u5de5\u5177\uff0cmkdocs\u8c03\u7528python markdown\u6765\u6e32\u67d3html\uff0c\u5176\u4e2d\u91cd\u5199\u4e86\u5c11\u90e8\u5206\u57fa\u7840\u529f\u80fd\uff0c\u6bd4\u5982toc\uff0c\u4ee5\u8fbe\u5230\u7b26\u5408mkdocs\u4e3b\u9898\u6548\u679c\uff1bmkdocs\u4e5f\u5185\u7f6e\u4e00\u79cd\u4e3b\u9898\uff0c\u5c31\u53ebmkdocs\uff0c\u540c\u65f6\u4e5f\u5185\u7f6e\u652f\u6301readthedocs\uff0c\u5e76\u4e14mkdocs\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898\u3002mkdocs\u4e3b\u8981\u5c31\u662f\u4e00\u4e2a\u96c6\u6210\u5668\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u6765\u7b80\u5316\u6e32\u67d3\u3001\u90e8\u7f72\u3001\u4f7f\u7528\u3001\u6a21\u5757\u8c03\u7528\u3001\u4e3b\u9898\u8c03\u7528","title":"mkdocs"},{"location":"mkdocs/appendix/module/#material","text":"\u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u7b26\u5408mkdocs\u89c4\u8303\u7684\u81ea\u5b9a\u4e49\u4e3b\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7pip install mkdocs-material\u6765\u4e0b\u8f7d\uff0c\u8fd9\u4e2a\u6a21\u5757\u91cc\u9762\u90fd\u662f\u4e00\u4e9bjs\u3001css\u3001html\u6587\u4ef6 material\u8fd9\u4e2a\u6a21\u5757\u540d\u548c\u4e3b\u9898\u98ce\u683c\uff0c\u662f\u6765\u81ea\u4e8egoogle material\uff0c\u5373google\u5b9a\u4e49\u7684\u4e00\u79cd\u901a\u7528\u98ce\u683c\uff0c\u7528\u4e8e\u517c\u5bb9\u4e0d\u540c\u5206\u8fa8\u7387\u4e0b\u7684\u9875\u9762\u5c55\u793a\uff0c\u5373\u53ea\u8981\u7b26\u5408\u8fd9\u79cd\u8c37\u6b4c\u98ce\u683c\u7684\uff0c\u4e00\u5904\u7f16\u5199\uff0c\u5904\u5904\u4f7f\u7528\uff08\u5728pc\u3001\u624b\u673a\u4e0a\u90fd\u53ef\u4ee5\u7528\uff0c\u5373\u4f1a\u6839\u636e\u5206\u8fa8\u7387\u81ea\u52a8\u8c03\u6574\u9875\u9762\u5c55\u793a\uff09 material\u4e3b\u9898\u5bf9python markdown\u7684\u4e00\u4e9b\u5185\u7f6e\u6269\u5c55\u548cpymdownx\u7684\u529f\u80fd\u505a\u4e86\u4e3b\u9898\u6548\u679c\u4f18\u5316\uff0c\u4ee5\u4fbf\u66f4\u4f18\u7f8e\uff0c\u5185\u7f6e\u7684\u6709\uff1a \u652f\u6301\u7684python markdown\u6269\u5c55\u6709\uff1aAdmonition\u3001CodeHilite\u3001Footnotes\u3001Metadata\u3001Permalinks pymdownx\u6709\uff1aArithmatex\u3001BetterEM\u3001Caret\u3001Critic\u3001Details\u3001Emoji\u3001InlineHilite\u3001MagicLink\u3001Mark\u3001SmartSymbols\u3001SuperFences\u3001Tasklist\u3001Tilde","title":"material"},{"location":"mkdocs/appendix/pygments/","text":"\u5305\u62ec\u9ad8\u7ea7\u8bed\u8a00\u3001\u6a21\u7248\u8bed\u8a00\u3001\u6807\u8bb0\u8bed\u8a00\uff0c\u5171434\u4e2a \u683c\u5f0f \u77ed\u540d ABAP abap ABNF abnf ActionScript 3 as3, actionscript3 ActionScript as, actionscript Ada ada, ada95, ada2005 ADL adl Agda agda Aheui aheui Alloy alloy AmbientTalk at, ambienttalk, ambienttalk/2 Ampl ampl Angular2 ng2 ANTLR With ActionScript Target antlr-as, antlr-actionscript ANTLR With C# Target antlr-csharp, antlr-c# ANTLR With CPP Target antlr-cpp ANTLR With Java Target antlr-java ANTLR With ObjectiveC Target antlr-objc ANTLR With Perl Target antlr-perl ANTLR With Python Target antlr-python ANTLR With Ruby Target antlr-ruby, antlr-rb ANTLR antlr ApacheConf apacheconf, aconf, apache APL apl AppleScript applescript Arduino arduino AspectJ aspectj aspx-cs aspx-cs aspx-vb aspx-vb Asymptote asy, asymptote autohotkey ahk, autohotkey AutoIt autoit Awk awk, gawk, mawk, nawk Base Makefile basemake Bash Session console, shell-session Bash bash, sh, ksh, zsh, shell Batchfile bat, batch, dosbatch, winbatch BBCode bbcode BC bc Befunge befunge BibTeX bib, bibtex BlitzBasic blitzbasic, b3d, bplus BlitzMax blitzmax, bmax BNF bnf Boo boo Boogie boogie Brainfuck brainfuck, bf Bro bro BST bst, bst-pybtex BUGS bugs, winbugs, openbugs C c C# csharp, c# C++ cpp, c++ c-objdump c-objdump ca65 assembler ca65 cADL cadl CAmkES camkes, idl4 Cap'n Proto capnp CapDL capdl CBM BASIC V2 cbmbas Ceylon ceylon CFEngine3 cfengine3, cf3 cfstatement cfs ChaiScript chai, chaiscript Chapel chapel, chpl Cheetah cheetah, spitfire Cirru cirru Clay clay Clean clean Clojure clojure, clj ClojureScript clojurescript, cljs CMake cmake COBOL cobol COBOLFree cobolfree CoffeeScript coffee-script, coffeescript, coffee Coldfusion CFC cfc Coldfusion HTML cfm Common Lisp common-lisp, cl, lisp Component Pascal componentpascal, cp Coq coq cpp-objdump cpp-objdump, c++-objdumb, cxx-objdump CPSA cpsa Crmsh crmsh, pcmk Croc croc Cryptol cryptol, cry Crystal cr, crystal Csound Document csound-document, csound-csd Csound Orchestra csound, csound-orc Csound Score csound-score, csound-sco CSS css CSS+Django/Jinja css+django, css+jinja CSS+Genshi Text css+genshitext, css+genshi CSS+Lasso css+lasso CSS+Mako css+mako CSS+mozpreproc css+mozpreproc CSS+Myghty css+myghty CSS+PHP css+php CSS+Ruby css+erb, css+ruby CSS+Smarty css+smarty CUDA cuda, cu Cypher cypher Cython cython, pyx, pyrex D d d-objdump d-objdump Darcs Patch dpatch Dart dart Debian Control file control, debcontrol Debian Sourcelist sourceslist, sources.list, debsources Delphi delphi, pas, pascal, objectpascal dg dg Diff diff, udiff Django/Jinja django, jinja Docker docker, dockerfile DTD dtd Duel duel, jbst, jsonml+bst Dylan session dylan-console, dylan-repl Dylan dylan DylanLID dylan-lid, lid Earl Grey earl-grey, earlgrey, eg Easytrieve easytrieve EBNF ebnf eC ec ECL ecl Eiffel eiffel Elixir iex session iex Elixir elixir, ex, exs Elm elm EmacsLisp emacs, elisp, emacs-lisp Embedded Ragel ragel-em ERB erb Erlang erl session erl Erlang erlang Evoque evoque Ezhil ezhil Factor factor Fancy fancy, fy Fantom fan Felix felix, flx Fish fish, fishshell Flatline flatline Forth forth Fortran fortran FortranFixed fortranfixed FoxPro foxpro, vfp, clipper, xbase FSharp fsharp GAP gap GAS gas, asm Genshi Text genshitext Genshi genshi, kid, xml+genshi, xml+kid Gettext Catalog pot, po Gherkin cucumber, gherkin GLSL glsl Gnuplot gnuplot Go go Golo golo GoodData-CL gooddata-cl Gosu Template gst Gosu gosu Groff groff, nroff, man Groovy groovy Haml haml Handlebars handlebars Haskell haskell, hs Haxe hx, haxe, hxsl Hexdump hexdump HSAIL hsail, hsa HTML + Angular2 html+ng2 HTML html HTML+Cheetah html+cheetah, html+spitfire, htmlcheetah HTML+Django/Jinja html+django, html+jinja, htmldjango HTML+Evoque html+evoque HTML+Genshi html+genshi, html+kid HTML+Handlebars html+handlebars HTML+Lasso html+lasso HTML+Mako html+mako HTML+Myghty html+myghty HTML+PHP html+php HTML+Smarty html+smarty HTML+Twig html+twig HTML+Velocity html+velocity HTTP http Hxml haxeml, hxml Hy hylang Hybris hybris, hy IDL idl Idris idris, idr Igor igor, igorpro Inform 6 template i6t Inform 6 inform6, i6 Inform 7 inform7, i7 INI ini, cfg, dosini Io io Ioke ioke, ik IRC logs irc Isabelle isabelle J j JAGS jags Jasmin jasmin, jasminxt Java Server Page jsp Java java JavaScript js, javascript JavaScript+Cheetah js+cheetah, javascript+cheetah, js+spitfire, javascript+spitfire JavaScript+Django/Jinja js+django, javascript+django, js+jinja, javascript+jinja JavaScript+Genshi Text js+genshitext, js+genshi, javascript+genshitext, javascript+genshi JavaScript+Lasso js+lasso, javascript+lasso JavaScript+Mako js+mako, javascript+mako Javascript+mozpreproc javascript+mozpreproc JavaScript+Myghty js+myghty, javascript+myghty JavaScript+PHP js+php, javascript+php JavaScript+Ruby js+erb, javascript+erb, js+ruby, javascript+ruby JavaScript+Smarty js+smarty, javascript+smarty JCL jcl JSGF jsgf JSON json JSON-LD jsonld, json-ld JSONBareObject json-object Julia console jlcon Julia julia, jl Juttle juttle, juttle Kal kal Kconfig kconfig, menuconfig, linux-config, kernel-config Koka koka Kotlin kotlin Lasso lasso, lassoscript Lean lean LessCss less Lighttpd configuration file lighty, lighttpd Limbo limbo liquid liquid Literate Agda lagda, literate-agda Literate Cryptol lcry, literate-cryptol, lcryptol Literate Haskell lhs, literate-haskell, lhaskell Literate Idris lidr, literate-idris, lidris LiveScript live-script, livescript LLVM llvm Logos logos Logtalk logtalk LSL lsl Lua lua Makefile make, makefile, mf, bsdmake Mako mako MAQL maql markdown md Mask mask Mason mason Mathematica mathematica, mma, nb Matlab session matlabsession Matlab matlab MiniD minid Modelica modelica Modula-2 modula2, m2 MoinMoin/Trac Wiki markup trac-wiki, moin Monkey monkey Monte monte MOOCode moocode, moo MoonScript moon, moonscript mozhashpreproc mozhashpreproc mozpercentpreproc mozpercentpreproc MQL mql, mq4, mq5, mql4, mql5 Mscgen mscgen, msc MSDOS Session doscon MuPAD mupad MXML mxml Myghty myghty MySQL mysql NASM nasm NCL ncl Nemerle nemerle nesC nesc NewLisp newlisp Newspeak newspeak Nginx configuration file nginx Nimrod nim, nimrod Nit nit Nix nixos, nix NSIS nsis, nsi, nsh NumPy numpy NuSMV nusmv objdump objdump objdump-nasm objdump-nasm Objective-C objective-c, objectivec, obj-c, objc Objective-C++ objective-c++, objectivec++, obj-c++, objc++ Objective-J objective-j, objectivej, obj-j, objj OCaml ocaml Octave octave ODIN odin Ooc ooc Opa opa OpenEdge ABL openedge, abl, progress PacmanConf pacmanconf Pan pan ParaSail parasail Pawn pawn Perl perl, pl Perl6 perl6, pl6 PHP php, php3, php4, php5 Pig pig Pike pike PkgConfig pkgconfig PL/pgSQL plpgsql PostgreSQL console (psql) psql, postgresql-console, postgres-console PostgreSQL SQL dialect postgresql, postgres PostScript postscript, postscr POVRay pov PowerShell Session ps1con PowerShell powershell, posh, ps1, psm1 Praat praat Prolog prolog Properties properties, jproperties Protocol Buffer protobuf, proto Pug pug, jade Puppet puppet PyPy Log pypylog, pypy Python 3 python3, py3 Python 3.0 Traceback py3tb Python console session pycon Python Traceback pytb Python python, py, sage QBasic qbasic, basic QML qml, qbs QVTO qvto, qvt Racket racket, rkt Ragel in C Host ragel-c Ragel in CPP Host ragel-cpp Ragel in D Host ragel-d Ragel in Java Host ragel-java Ragel in Objective C Host ragel-objc Ragel in Ruby Host ragel-ruby, ragel-rb Ragel ragel Raw token data raw RConsole rconsole, rout Rd rd REBOL rebol Red red, red/system Redcode redcode reg registry Relax-NG Compact rnc, rng-compact ResourceBundle resource, resourcebundle reStructuredText rst, rest, restructuredtext Rexx rexx, arexx RHTML rhtml, html+erb, html+ruby Roboconf Graph roboconf-graph Roboconf Instances roboconf-instances RobotFramework robotframework RPMSpec spec RQL rql RSL rsl Ruby irb session rbcon, irb Ruby rb, ruby, duby Rust rust S splus, s, r SAS sas Sass sass Scala scala Scalate Server Page ssp Scaml scaml Scheme scheme, scm Scilab scilab SCSS scss Shen shen Silver silver Slim slim Smali smali Smalltalk smalltalk, squeak, st Smarty smarty Snobol snobol Snowball snowball SourcePawn sp SPARQL sparql SQL sql sqlite3con sqlite3 SquidConf squidconf, squid.conf, squid Stan stan Standard ML sml Stata stata, do SuperCollider sc, supercollider Swift swift SWIG swig systemverilog systemverilog, sv TADS 3 tads3 TAP tap TASM tasm Tcl tcl Tcsh Session tcshcon Tcsh tcsh, csh Tea tea Termcap termcap Terminfo terminfo Terraform terraform, tf TeX tex, latex Text only text Thrift thrift Todotxt todotxt TrafficScript rts, trafficscript Transact-SQL tsql, t-sql Treetop treetop Turtle turtle Twig twig TypeScript ts, typescript TypoScript typoscript TypoScriptCssData typoscriptcssdata TypoScriptHtmlData typoscripthtmldata UrbiScript urbiscript Vala vala, vapi VB.net vb.net, vbnet VCL vcl VCLSnippets vclsnippets, vclsnippet VCTreeStatus vctreestatus Velocity velocity verilog verilog, v VGL vgl vhdl vhdl VimL vim WDiff wdiff Whiley whiley X10 x10, xten XML xml XML+Cheetah xml+cheetah, xml+spitfire XML+Django/Jinja xml+django, xml+jinja XML+Evoque xml+evoque XML+Lasso xml+lasso XML+Mako xml+mako XML+Myghty xml+myghty XML+PHP xml+php XML+Ruby xml+erb, xml+ruby XML+Smarty xml+smarty XML+Velocity xml+velocity XQuery xquery, xqy, xq, xql, xqm XSLT xslt Xtend xtend xtlang extempore XUL+mozpreproc xul+mozpreproc YAML yaml YAML+Jinja yaml+jinja, salt, sls Zephir zephir \u8bf4\u660e \u9017\u53f7\u5206\u9694\u8868\u793a\u4efb\u9009\u4e00\u79cd\u5747\u53ef \u5e95\u5c42\u5b9e\u9645\u662f\u7531Pygments\u7684lexers\u6240\u5b9e\u73b0\uff0c\u4e0a\u8ff0\u8868\u683c\u4e2d\u7684Pygments\u7248\u672c\u662f2.2.0\uff0c\u652f\u6301\u5171434\u79cd\u8bed\u8a00\u3001\u6a21\u7248\u3001\u6807\u8bb0\u8bed\u8a00\u3002 \u53ea\u8981\u662f\u4f9d\u8d56Pygments\u5b9e\u73b0\u7684\u8bed\u6cd5\u9ad8\u4eae\uff0c\u4e0a\u8ff0\u8868\u683c\u91cc\u7684\u5747\u53ef\u4ee5\u4f7f\u7528 \u4e0a\u8ff0\u8868\u683c\u4e0d\u662f\u4ecepygments\u7684\u5b98\u7f51\u4e0a\u627e\u5230\u7684\uff0c\u56e0\u4e3a\u5b98\u7f51\u5df2\u7ecf\u5f88\u4e45\u6ca1\u66f4\u65b0\u8fd9\u4e2a\u8868\u683c\u4e86\uff08 http://pygments.org/languages/ \uff0c\u8fdego\u8bed\u8a00\u90fd\u6ca1\u5199\u51fa\u6765\uff09\uff0c\u6240\u4ee5\u6211\u662f\u76f4\u63a5\u4ecepygments\u6e90\u4ee3\u7801\uff08pygments/lexers/_mapping.py\uff09\u91cc\u641c\u96c6\u7684\u3002 \u9644: \u83b7\u5f97\u4e0a\u8ff0434\u79cd\u8bed\u8a00\u7684\u65b9\u6cd5 #!/usr/bin/python from pygments.lexers import get_all_lexers lexers = get_all_lexers () for lexer in lexers : print lexer","title":"1. \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u7684\u8bed\u8a00"},{"location":"mkdocs/appendix/search/","text":"\u867d\u7136search\u529f\u80fd(lunr.js)\u6682\u4e0d\u76f4\u63a5\u652f\u6301\u4e2d\u6587\uff0c\u4f46\u6d4b\u8bd5\u53d1\u73b0\u8bbe\u7f6e\u4e3a\u65e5\u8bed\u540e\uff0c\u4e2d\u6587\u548c\u82f1\u6587\u641c\u7d22\u90fd\u53ef\u4ee5\u4f7f\u7528 extra: search: language: 'jp' Note \u6d4b\u8bd5\u53d1\u73b0\uff0c\u5f53\u7ad9\u70b9\u6587\u5b57\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u6709\u7684\u65f6\u5019\u7b2c\u4e00\u6b21\u641c\u7d22\u52a0\u8f7d\u67e5\u8be2\u7684\u65f6\u95f4\u6bd4\u8f83\u4e45\uff0c\u4f1a\u5f15\u8d77\u6d4f\u89c8\u5668\u5047\u6b7b\uff0c\u591a\u7b49\u4e00\u4f1a\u5c31\u884c\u4e86\u3002\u6bd4\u5982\u672c\u7ad9\u70b9\u5185\u5bb9\u6bd4\u8f83\u591a\uff0c\u641c\u7d22\u5c31\u6bd4\u8f83\u5361 \u4e3a\u4ec0\u4e48\u4e0a\u9762\u8bf4\u7684\u662f\u6709\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u6211\u7684\u53e6\u4e00\u4e2a\u7ad9\u70b9\u6587\u5b57\u6570\u91cf\u6bd4\u672c\u7ad9\u8fd8\u8981\u591a\uff0c\u4f46\u641c\u7d22\u786e\u5f88\u5feb\uff0c\u7b49\u4ee5\u540e\u719f\u6089\u4e86lunr.js\u540e\u518d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 \u53e6\u5916\uff0c\u641c\u7d22\u5bf9\u8bdd\u6846\u7684\u663e\u793a\u6587\u5b57\uff0c\u9ed8\u8ba4\u4e3a\u82f1\u6587\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e2d\u6587\u3002\u4f8b\u5982\"search\"\u6539\u4e3a\u4e2d\u6587\u540e\u5c31\u53eb\"\u641c\u7d22\" theme: language: 'zh'","title":"7. \u652f\u6301\u4e2d\u6587\u641c\u7d22"},{"location":"mkdocs/appendix/tab/","text":"\u5f00\u542ftab \u00b6 theme : name : material feature : tabs : true \u5173\u95edtab \u00b6 theme : name : material feature : tabs : false","title":"9. tab"},{"location":"mkdocs/appendix/tab/#tab","text":"theme : name : material feature : tabs : true","title":"\u5f00\u542ftab"},{"location":"mkdocs/appendix/tab/#tab_1","text":"theme : name : material feature : tabs : false","title":"\u5173\u95edtab"},{"location":"mkdocs/appendix/yml/","text":"site_name : markdown\u8bed\u6cd5\u8be6\u89e3(\u57fa\u4e8emkdocs-material) - cyent\u7b14\u8bb0 site_description : \u5173\u4e8emkdocs-material\u652f\u6301\u7684markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548c\u6269\u5c55\u8bed\u6cd5 site_author : cyent site_url : https://cyent.github.io/markdown-with-mkdocs-material/ repo_name : 'cyent/markdown-with-mkdocs-material' repo_url : 'https://github.com/cyent/markdown-with-mkdocs-material' theme : name : material palette : primary : 'Blue Grey' accent : 'Pink' feature : tabs : false #font: #text: 'Ubuntu' #code: 'Ubuntu Mono' language : 'zh' extra : social : - type : github # \u5728\u65b0\u7248\u91cctype\u5df2\u5e9f\u5f03(\u611f\u8c22HuJialun\u7684\u53cd\u9988) link : https://github.com/cyent search : language : 'jp' markdown_extensions : - admonition - codehilite : guess_lang : false linenums : false - toc : permalink : true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_png #emoji_generator: !!python/name:pymdownx.emoji.to_svg #emoji_generator: !!python/name:pymdownx.emoji.to_png_sprite #emoji_generator: !!python/name:pymdownx.emoji.to_svg_sprite #emoji_generator: !!python/name:pymdownx.emoji.to_awesome #emoji_generator: !!python/name:pymdownx.emoji.to_alt - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde extra_javascript : - 'js/extra.js' - 'js/baidu-tongji.js' - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' nav : - \u4e00. \u4ecb\u7ecd : index.md - \u4e8c. \u5b89\u88c5 : - 1. \u672c\u5730\u73af\u5883\u642d\u5efa : install/local.md - 2. \u53d1\u5e03\u81f3GitHub Pages : install/github-pages.md - 3. \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server : install/http-server.md - \u4e09. \u8bed\u6cd5 : - 1. \u8bed\u6cd5\u603b\u89c8 : syntax/main.md - 2. \u6807\u9898 : syntax/headline.md - 3. \u6bb5\u843d : syntax/paragraph.md","title":"8. mkdocs.yml\u8303\u4f8b"},{"location":"mkdocs/install/github-pages/","text":"\u901a\u8fc7mkdocs gh-deploy\u81ea\u52a8\u7f16\u8bd1\u51fahtml\u5e76\u53d1\u5e03\u81f3GitHub pages \u521d\u59cb\u5316repo \u00b6 \u5728github\u4e0a\u521b\u5efa\u4e00\u4e2arepo\uff0c\u540d\u5b57\u53ebmy-project \u5c06repo\u540c\u6b65\u5230\u672c\u5730 \u5bfc\u5165\u9879\u76ee \u00b6 \u5c06mkdocs\u6839\u76ee\u5f55(my-project)\u4e0b\u7684\u6240\u6709\u4e1c\u897f\u79fb\u5230\u672c\u5730git\u76ee\u5f55\u4e0b (\u7136\u540e\u53ef\u4ee5\u5c06mkdocs\u6839\u76ee\u5f55\u5220\u9664\u4e86) \u53d1\u5e03 \u00b6 \u5728\u672c\u5730git\u76ee\u5f55\u4e0b\u6267\u884c mkdocs gh-deploy","title":"2. \u53d1\u5e03\u81f3GitHub Pages"},{"location":"mkdocs/install/github-pages/#repo","text":"\u5728github\u4e0a\u521b\u5efa\u4e00\u4e2arepo\uff0c\u540d\u5b57\u53ebmy-project \u5c06repo\u540c\u6b65\u5230\u672c\u5730","title":"\u521d\u59cb\u5316repo"},{"location":"mkdocs/install/github-pages/#_1","text":"\u5c06mkdocs\u6839\u76ee\u5f55(my-project)\u4e0b\u7684\u6240\u6709\u4e1c\u897f\u79fb\u5230\u672c\u5730git\u76ee\u5f55\u4e0b (\u7136\u540e\u53ef\u4ee5\u5c06mkdocs\u6839\u76ee\u5f55\u5220\u9664\u4e86)","title":"\u5bfc\u5165\u9879\u76ee"},{"location":"mkdocs/install/github-pages/#_2","text":"\u5728\u672c\u5730git\u76ee\u5f55\u4e0b\u6267\u884c mkdocs gh-deploy","title":"\u53d1\u5e03"},{"location":"mkdocs/install/http-server/","text":"\u901a\u8fc7mkdocs build\u7f16\u8bd1\u51fahtml\u5e76\u624b\u52a8\u540c\u6b65\u81f3http server\u7684\u6839\u76ee\u5f55 \u751f\u6210\u7ad9\u70b9\u6587\u4ef6 \u00b6 \u5728git\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs build \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\u53ef\u4ee5\u770b\u5230site\u76ee\u5f55 \u53d1\u5e03\u81f3http server \u00b6 \u5c06site\u76ee\u5f55\u91cc\u7684\u6240\u6709\u4e1c\u897f\u540c\u6b65\u81f3\u81ea\u5df1\u7684http server\u7684\u6839\u76ee\u5f55","title":"3. \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server"},{"location":"mkdocs/install/http-server/#_1","text":"\u5728git\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs build \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\u53ef\u4ee5\u770b\u5230site\u76ee\u5f55","title":"\u751f\u6210\u7ad9\u70b9\u6587\u4ef6"},{"location":"mkdocs/install/http-server/#http-server","text":"\u5c06site\u76ee\u5f55\u91cc\u7684\u6240\u6709\u4e1c\u897f\u540c\u6b65\u81f3\u81ea\u5df1\u7684http server\u7684\u6839\u76ee\u5f55","title":"\u53d1\u5e03\u81f3http server"},{"location":"mkdocs/install/local/","text":"\u73af\u5883\u8bf4\u660e \u00b6 python: 2.7.13 \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0 mkdocs-material\u90e8\u7f72 \u00b6 \u5b89\u88c5 \u00b6 pip install mkdocs mkdocs-material \u82e5\u4e0b\u8f7d\u6162\uff0c\u53ef\u66f4\u6362\u5b89\u88c5\u6e90\u4e3a\u8c46\u74e3 pip install --trusted-host pypi.douban.com -i http://pypi.douban.com/simple/ mkdocs mkdocs-material \u521d\u59cb\u5316\u9879\u76ee \u00b6 mkdocs new my-project \u4f1a\u751f\u6210my-project\u76ee\u5f55\uff0c\u8fdb\u5165\u8be5\u76ee\u5f55\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u653e\u7f6e\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u5305\u62ecmkdocs.yml\uff0c\u8fd9\u662f\u4e3b\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u4e3b\u9898 \u00b6 mkdocs.yml\u91cc\u6dfb\u52a0: theme: name: material \u6dfb\u52a0\u9875\u9762 \u00b6 mkdocs.yml\u91cc\u6dfb\u52a0: nav: - \u4ecb\u7ecd: index.md - \u5b89\u88c5: - \u672c\u5730\u73af\u5883\u642d\u5efa: install/local.md - \u53d1\u5e03\u81f3GitHub Pages: install/github-pages.md - \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server: install/http-server.md - \u8bed\u6cd5: - \u8bed\u6cd5\u603b\u89c8: syntax/main.md - \u6807\u9898: syntax/headline.md - \u6bb5\u843d: syntax/paragraph.md \u6dfb\u52a0\u6269\u5c55 \u00b6 mkdocs.yml\u91cc\u6dfb\u52a0: markdown_extensions: - admonition - codehilite: guess_lang: false linenums: false - toc: permalink: true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_png - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde [\u53ef\u9009] \u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1 [\u53ef\u9009] \u6539\u53d8\u9875\u9762\u914d\u8272 [\u63a8\u8350] \u652f\u6301\u4e2d\u6587\u641c\u7d22 \u53ef\u4ee5\u67e5\u770b\u6211\u7684mkdocs.yml\u8303\u4f8b\uff0c\u8be6\u89c1 mkdocs.yml\u8303\u4f8b mkdocs\u670d\u52a1\u542f\u52a8 \u00b6 # \u5728my-project\u76ee\u5f55\u91cc\u6267\u884c mkdocs serve \u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 http://127.0.0.1:8000/ \u67e5\u770b\u6548\u679c","title":"1. \u672c\u5730\u73af\u5883\u642d\u5efa(\u542b\u5165\u95e8\u914d\u7f6e)"},{"location":"mkdocs/install/local/#_1","text":"python: 2.7.13 \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0","title":"\u73af\u5883\u8bf4\u660e"},{"location":"mkdocs/install/local/#mkdocs-material","text":"","title":"mkdocs-material\u90e8\u7f72"},{"location":"mkdocs/install/local/#_2","text":"pip install mkdocs mkdocs-material \u82e5\u4e0b\u8f7d\u6162\uff0c\u53ef\u66f4\u6362\u5b89\u88c5\u6e90\u4e3a\u8c46\u74e3 pip install --trusted-host pypi.douban.com -i http://pypi.douban.com/simple/ mkdocs mkdocs-material","title":"\u5b89\u88c5"},{"location":"mkdocs/install/local/#_3","text":"mkdocs new my-project \u4f1a\u751f\u6210my-project\u76ee\u5f55\uff0c\u8fdb\u5165\u8be5\u76ee\u5f55\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u653e\u7f6e\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u5305\u62ecmkdocs.yml\uff0c\u8fd9\u662f\u4e3b\u914d\u7f6e\u6587\u4ef6","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"mkdocs/install/local/#_4","text":"mkdocs.yml\u91cc\u6dfb\u52a0: theme: name: material","title":"\u4fee\u6539\u4e3b\u9898"},{"location":"mkdocs/install/local/#_5","text":"mkdocs.yml\u91cc\u6dfb\u52a0: nav: - \u4ecb\u7ecd: index.md - \u5b89\u88c5: - \u672c\u5730\u73af\u5883\u642d\u5efa: install/local.md - \u53d1\u5e03\u81f3GitHub Pages: install/github-pages.md - \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server: install/http-server.md - \u8bed\u6cd5: - \u8bed\u6cd5\u603b\u89c8: syntax/main.md - \u6807\u9898: syntax/headline.md - \u6bb5\u843d: syntax/paragraph.md","title":"\u6dfb\u52a0\u9875\u9762"},{"location":"mkdocs/install/local/#_6","text":"mkdocs.yml\u91cc\u6dfb\u52a0: markdown_extensions: - admonition - codehilite: guess_lang: false linenums: false - toc: permalink: true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_png - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde [\u53ef\u9009] \u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1 [\u53ef\u9009] \u6539\u53d8\u9875\u9762\u914d\u8272 [\u63a8\u8350] \u652f\u6301\u4e2d\u6587\u641c\u7d22 \u53ef\u4ee5\u67e5\u770b\u6211\u7684mkdocs.yml\u8303\u4f8b\uff0c\u8be6\u89c1 mkdocs.yml\u8303\u4f8b","title":"\u6dfb\u52a0\u6269\u5c55"},{"location":"mkdocs/install/local/#mkdocs","text":"# \u5728my-project\u76ee\u5f55\u91cc\u6267\u884c mkdocs serve \u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 http://127.0.0.1:8000/ \u67e5\u770b\u6548\u679c","title":"mkdocs\u670d\u52a1\u542f\u52a8"},{"location":"mkdocs/syntax/code_block/","text":"4\u4e2a\u7a7a\u683c \u00b6 \u5728\u6bcf\u884c\u524d\u9762\u52a0\u4e0a4\u4e2a\u7a7a\u683c text = \"Hello, world!\" print text \u6548\u679c text = \"Hello, world!\" print text 3\u4e2a ` \u00b6 ```text text = \"Hello, world!\" print text ``` \u6548\u679c text = \"Hello, world!\" print text \u6ce81: \u652f\u6301\u4ee3\u7801\u9ad8\u4eae \uff0c\u8be6\u89c1\" \u533a\u5757\u4ee3\u7801\u9ad8\u4eae \" \u6ce82: \u5982\u679c\u4ee3\u7801\u533a\u5757\u4e0a\u65b9\u662f\u5217\u8868\uff0c\u5982 \u65e0\u5e8f\u5217\u8868 \u6216 \u6709\u5e8f\u5217\u8868 \uff0c\u90a3\u4e484\u4e2a\u7a7a\u683c\u4e0d\u4f1a\u88ab\u89e3\u6790\u4e3a\u4ee3\u7801\u533a\u5757\uff0c\u800c\u662f\u88ab\u89e3\u6790\u4e3a\u4e00\u4e2a\u666e\u901a\u7f29\u8fdb","title":"6.2. \u533a\u5757"},{"location":"mkdocs/syntax/code_block/#4","text":"\u5728\u6bcf\u884c\u524d\u9762\u52a0\u4e0a4\u4e2a\u7a7a\u683c text = \"Hello, world!\" print text \u6548\u679c text = \"Hello, world!\" print text","title":"4\u4e2a\u7a7a\u683c"},{"location":"mkdocs/syntax/code_block/#3","text":"```text text = \"Hello, world!\" print text ``` \u6548\u679c text = \"Hello, world!\" print text \u6ce81: \u652f\u6301\u4ee3\u7801\u9ad8\u4eae \uff0c\u8be6\u89c1\" \u533a\u5757\u4ee3\u7801\u9ad8\u4eae \" \u6ce82: \u5982\u679c\u4ee3\u7801\u533a\u5757\u4e0a\u65b9\u662f\u5217\u8868\uff0c\u5982 \u65e0\u5e8f\u5217\u8868 \u6216 \u6709\u5e8f\u5217\u8868 \uff0c\u90a3\u4e484\u4e2a\u7a7a\u683c\u4e0d\u4f1a\u88ab\u89e3\u6790\u4e3a\u4ee3\u7801\u533a\u5757\uff0c\u800c\u662f\u88ab\u89e3\u6790\u4e3a\u4e00\u4e2a\u666e\u901a\u7f29\u8fdb","title":"3\u4e2a `"},{"location":"mkdocs/syntax/code_highlight/","text":"\u9ad8\u4eae\u90e8\u5206\u8be6\u89c1 \u4ee3\u7801\u9ad8\u4eae \u7ae0\u8282","title":"6.3. \u9ad8\u4eae"},{"location":"mkdocs/syntax/code_inline/","text":"\u5728\u4e00\u884c\u5185\u8981\u6807\u8bb0\u7684\u6587\u672c\u524d\u540e\u5404\u52a0\u4e00\u4e2a ` AAA`BBB`CCC \u6548\u679c\uff1a AAA BBB CCC \u6ce8: \u652f\u6301\u4ee3\u7801\u9ad8\u4eae \uff0c\u8be6\u89c1\" \u884c\u5185\u4ee3\u7801\u9ad8\u4eae \"","title":"6.1. \u884c\u5185"},{"location":"mkdocs/syntax/cutline/","text":"\u5206\u5272\u7ebf\u4f7f\u7528\u4e09\u4e2a\u6216\u4ee5\u4e0a * \uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 - \u548c _ \uff0c\u4e0b\u9762\u4ec5\u4ee5 - \u4f5c\u4e3a\u793a\u4f8b --- \u6548\u679c","title":"9. \u5206\u5272\u7ebf"},{"location":"mkdocs/syntax/emoji_main/","text":"\u4ec0\u4e48\u662femoji \u00b6 emoji\u662f\u65e5\u672c\u5728\u65e0\u7ebf\u901a\u4fe1\u4e2d\u6240\u4f7f\u7528\u7684\u89c6\u89c9\u60c5\u611f\u7b26\u53f7\uff0c\u5df2\u88abunicode\u91c7\u7eb3\uff0c\u5f53\u524dunicode\u5305\u542b\u4e86\u975e\u5e38\u591a\u7684emoji\u56fe\u6807\uff0c\u6bcf\u4e00\u6b21unicode\u66f4\u65b0\u90fd\u4f1a\u53d1\u5e03\u65b0\u7684emoji\u56fe\u6807\u3002\u53ea\u8981\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301unicode\uff0c\u5c31\u80fd\u5728\u4efb\u610f\u4f7f\u7528unicode\u7f16\u7801\u7684\u5730\u65b9\u770b\u5230\u6f02\u4eae\u7684\u5f69\u8272\u56fe\u6807\uff0c\u6bd4\u5982\u6587\u672c\u3001mysql\u8868\u91cc\u3001\u7f51\u9875\u3002 emoji\u73b0\u72b6 \u00b6 \u867d\u7136unicode\u5b98\u7f51\u53ef\u4ee5\u67e5\u5230\u6240\u6709emoji\u56fe\u6807\uff0c\u4f46\u5e76\u672a\u63d0\u4f9b\u4e00\u4e2a\u4fbf\u5229\u7684\u56fe\u6807\u5206\u7c7b\u67e5\u8be2\u548c\u4f7f\u7528\u65b9\u6cd5\u3002\u56e0\u6b64\u5c31\u6709\u4e00\u4e9b\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5c06\u90e8\u5206emoji\u56fe\u6807\uff0c\u5236\u4f5c\u6210\u4e0d\u540c\u683c\u5f0f\u3001\u4e0d\u540c\u5c3a\u5bf8(\u4f8b\u598264x64 PNG\u3001128x128 PNG\u6216SVG\u7b49\u683c\u5f0f)\u7684\u56fe\u7247\u653e\u5165\u81ea\u5df1\u7684CDN\u5e93\u3002\u7136\u540e\u5c06\u8fd9\u4e9bCDN\u56fe\u7247\u4ee5\u514d\u8d39\u6216\u4ed8\u8d39\u65b9\u5f0f\u5bf9\u5916\u63d0\u4f9b\u3002 \u5982\u4f55\u83b7\u5f97emoji \u00b6 \u6839\u636e\u4f7f\u7528\u9700\u6c42\u5206\u4e3a2\u79cd: \u4e0d\u6ee1\u8db3\u4e8eunicode\u7684emoji\u56fe\u6807\uff0c\u5e0c\u671b\u66f4\u597d\u770b\uff0c\u5e76\u4e14\u5c3a\u5bf8\u53ef\u9009\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5e93\uff0c\u63a8\u8350\u4f7f\u7528EmojiOne\u7684png\u56fe\u5e93\uff0c\u5206\u4e3a\u514d\u8d39\u548c\u4ed8\u8d39\uff0c\u5176\u4e2d\u514d\u8d39\u7684\u56fe\u5e93\u5df2\u8db3\u591f\u6ee1\u8db3\u4e00\u822c\u6027\u4f7f\u7528\u9700\u6c42\uff0c\u5982\u679c\u60f3\u4f7f\u7528svg\uff0c\u514d\u8d39\u7684\u53ea\u6709EmojiOne-2.2.7\u4ee5\u5185\u7248\u672c\uff0c\u6700\u65b0\u7684svg\u90fd\u662f\u8981\u4ed8\u8d39\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\u662f\u5728\u6587\u6863\u91cc\u7528 :\u77ed\u540d \u6765\u8ba9mkdocs\u81ea\u52a8\u5339\u914d\u5e76\u6e32\u67d3\u4e3a \u6807\u7b7e \u4e3e\u4f8b\u8bf4\u660e2.2.7\u4e0e\u9ad8\u7248\u672c\u533a\u522b \u5982\u679c\u7528\u7684 :\u77ed\u540d: \u662f2.2.7\u5305\u542b\u7684\uff0c\u90a3\u4e48\u56fe\u6807\u80fd\u6b63\u5e38\u663e\u793a\uff0c\u5426\u5219\u663e\u793a\u4e0d\u51fa\u6765 \u6bd4\u5982\uff1a https://cdn.jsdelivr.net/emojione/assets/svg/1f600.svg \u8fd9\u4e2a\u662f2.2.7\u5c31\u6709\u7684\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 https://cdn.jsdelivr.net/emojione/assets/svg/1f92e.svg \u8fd9\u4e2a\u662f2.2.7\u4e4b\u540e\u624d\u6709\u7684\uff0c\u9700\u8981\u4ed8\u8d39\u624d\u80fd\u83b7\u5f97\u56fe\u6807\uff0c\u672a\u4ed8\u8d39\u76f4\u63a5\u8bbf\u95ee\u4f1a\u5f97\u5230\u62a5\u9519\uff1a https://cdn.jsdelivr.net/emojione/assets/3.1/png/64/1f92e.png \u8fd9\u4e2a\u662fpng\uff0c\u4e0d\u5c5e\u4e8e\u4ed8\u8d39\u90e8\u5206\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 \u56e0\u6b64\u63a8\u8350\u7684\u6700\u4f73\u5165\u95e8\u5b9e\u8df5\u5e94\u5f53\u662f\u9996\u9009png\u3002 \u80fd\u591f\u63a5\u53d7unicode\u7684emoji\u56fe\u6807\uff0c\u5c31\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u5c06\u56fe\u6807\u590d\u5236\u7c98\u8d34\u5230\u6587\u672c\u91cc\u5373\u53ef \u8fd92\u79cd\u65b9\u6cd5\u5e76\u4e0d\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2amarkdown\u6587\u672c\u91cc\u6df7\u5408\u4f7f\u7528","title":"18.1. \u4ecb\u7ecd"},{"location":"mkdocs/syntax/emoji_main/#emoji","text":"emoji\u662f\u65e5\u672c\u5728\u65e0\u7ebf\u901a\u4fe1\u4e2d\u6240\u4f7f\u7528\u7684\u89c6\u89c9\u60c5\u611f\u7b26\u53f7\uff0c\u5df2\u88abunicode\u91c7\u7eb3\uff0c\u5f53\u524dunicode\u5305\u542b\u4e86\u975e\u5e38\u591a\u7684emoji\u56fe\u6807\uff0c\u6bcf\u4e00\u6b21unicode\u66f4\u65b0\u90fd\u4f1a\u53d1\u5e03\u65b0\u7684emoji\u56fe\u6807\u3002\u53ea\u8981\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301unicode\uff0c\u5c31\u80fd\u5728\u4efb\u610f\u4f7f\u7528unicode\u7f16\u7801\u7684\u5730\u65b9\u770b\u5230\u6f02\u4eae\u7684\u5f69\u8272\u56fe\u6807\uff0c\u6bd4\u5982\u6587\u672c\u3001mysql\u8868\u91cc\u3001\u7f51\u9875\u3002","title":"\u4ec0\u4e48\u662femoji"},{"location":"mkdocs/syntax/emoji_main/#emoji_1","text":"\u867d\u7136unicode\u5b98\u7f51\u53ef\u4ee5\u67e5\u5230\u6240\u6709emoji\u56fe\u6807\uff0c\u4f46\u5e76\u672a\u63d0\u4f9b\u4e00\u4e2a\u4fbf\u5229\u7684\u56fe\u6807\u5206\u7c7b\u67e5\u8be2\u548c\u4f7f\u7528\u65b9\u6cd5\u3002\u56e0\u6b64\u5c31\u6709\u4e00\u4e9b\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5c06\u90e8\u5206emoji\u56fe\u6807\uff0c\u5236\u4f5c\u6210\u4e0d\u540c\u683c\u5f0f\u3001\u4e0d\u540c\u5c3a\u5bf8(\u4f8b\u598264x64 PNG\u3001128x128 PNG\u6216SVG\u7b49\u683c\u5f0f)\u7684\u56fe\u7247\u653e\u5165\u81ea\u5df1\u7684CDN\u5e93\u3002\u7136\u540e\u5c06\u8fd9\u4e9bCDN\u56fe\u7247\u4ee5\u514d\u8d39\u6216\u4ed8\u8d39\u65b9\u5f0f\u5bf9\u5916\u63d0\u4f9b\u3002","title":"emoji\u73b0\u72b6"},{"location":"mkdocs/syntax/emoji_main/#emoji_2","text":"\u6839\u636e\u4f7f\u7528\u9700\u6c42\u5206\u4e3a2\u79cd: \u4e0d\u6ee1\u8db3\u4e8eunicode\u7684emoji\u56fe\u6807\uff0c\u5e0c\u671b\u66f4\u597d\u770b\uff0c\u5e76\u4e14\u5c3a\u5bf8\u53ef\u9009\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5e93\uff0c\u63a8\u8350\u4f7f\u7528EmojiOne\u7684png\u56fe\u5e93\uff0c\u5206\u4e3a\u514d\u8d39\u548c\u4ed8\u8d39\uff0c\u5176\u4e2d\u514d\u8d39\u7684\u56fe\u5e93\u5df2\u8db3\u591f\u6ee1\u8db3\u4e00\u822c\u6027\u4f7f\u7528\u9700\u6c42\uff0c\u5982\u679c\u60f3\u4f7f\u7528svg\uff0c\u514d\u8d39\u7684\u53ea\u6709EmojiOne-2.2.7\u4ee5\u5185\u7248\u672c\uff0c\u6700\u65b0\u7684svg\u90fd\u662f\u8981\u4ed8\u8d39\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\u662f\u5728\u6587\u6863\u91cc\u7528 :\u77ed\u540d \u6765\u8ba9mkdocs\u81ea\u52a8\u5339\u914d\u5e76\u6e32\u67d3\u4e3a \u6807\u7b7e \u4e3e\u4f8b\u8bf4\u660e2.2.7\u4e0e\u9ad8\u7248\u672c\u533a\u522b \u5982\u679c\u7528\u7684 :\u77ed\u540d: \u662f2.2.7\u5305\u542b\u7684\uff0c\u90a3\u4e48\u56fe\u6807\u80fd\u6b63\u5e38\u663e\u793a\uff0c\u5426\u5219\u663e\u793a\u4e0d\u51fa\u6765 \u6bd4\u5982\uff1a https://cdn.jsdelivr.net/emojione/assets/svg/1f600.svg \u8fd9\u4e2a\u662f2.2.7\u5c31\u6709\u7684\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 https://cdn.jsdelivr.net/emojione/assets/svg/1f92e.svg \u8fd9\u4e2a\u662f2.2.7\u4e4b\u540e\u624d\u6709\u7684\uff0c\u9700\u8981\u4ed8\u8d39\u624d\u80fd\u83b7\u5f97\u56fe\u6807\uff0c\u672a\u4ed8\u8d39\u76f4\u63a5\u8bbf\u95ee\u4f1a\u5f97\u5230\u62a5\u9519\uff1a https://cdn.jsdelivr.net/emojione/assets/3.1/png/64/1f92e.png \u8fd9\u4e2a\u662fpng\uff0c\u4e0d\u5c5e\u4e8e\u4ed8\u8d39\u90e8\u5206\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 \u56e0\u6b64\u63a8\u8350\u7684\u6700\u4f73\u5165\u95e8\u5b9e\u8df5\u5e94\u5f53\u662f\u9996\u9009png\u3002 \u80fd\u591f\u63a5\u53d7unicode\u7684emoji\u56fe\u6807\uff0c\u5c31\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u5c06\u56fe\u6807\u590d\u5236\u7c98\u8d34\u5230\u6587\u672c\u91cc\u5373\u53ef \u8fd92\u79cd\u65b9\u6cd5\u5e76\u4e0d\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2amarkdown\u6587\u672c\u91cc\u6df7\u5408\u4f7f\u7528","title":"\u5982\u4f55\u83b7\u5f97emoji"},{"location":"mkdocs/syntax/emoji_principle/","text":"\u672c\u6587\u4e2d\u4e3b\u8981\u4ecb\u7ecdmkdocs\u4f9d\u8d56pymdownx.emoji\u8fdb\u884c\u5339\u914d\u3001\u6e32\u67d3\uff0c\u56e0\u6b64\u4e0b\u9762\u7684\u8bf4\u660e\u5747\u662f\u5173\u4e8epymdownx.emoji\u3002 pymdownx\u652f\u63013\u4e2a\u4e3b\u6d41\u7684emoji\u5382\u5546\uff1aGemoji\uff08github.com\u505a\u7684\uff09\u3001EmojiOne\uff08\u7b2c\u4e09\u65b9\u7684\uff0c\u5206\u4e3a\u514d\u8d39\u7248\u3001\u4ed8\u8d39\u7248\u3001\u6218\u7565\u5408\u4f5c\u7248\uff09\u3001Twemoji\uff08twitter\u505a\u7684\uff09\uff0cpymdownx\u5b98\u65b9\u63a8\u8350\u7528EmojiOne\uff0c\u9ed8\u8ba4\u4e5f\u662fEmojiOne \u67092\u4e2a\u5173\u952e\u53c2\u6570 \u00b6 emoji_index\uff0c\u9009\u62e9emoji\u5382\u5546\uff0c\u9ed8\u8ba4\u4e3aEmojiOne emoji_generator\uff0c\u9009\u62e9\u5382\u5546\u5bf9\u5e94\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u9ed8\u8ba4\u4e3ato_png generator\u67093\u7c7b \u00b6 to_png/to_svg : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 unicode\u7801\u88ab\u8f6c\u4e3aemoji_index\u5bf9\u5e94\u7684\u56fe\u7247CDN\u5730\u5740(Gemoji/EmojiOne/Twemoji\u90fd\u6709\u5404\u81ea\u7684CDN) \u6e32\u67d3\u6210html\u65f6\u5019\u56fe\u7247\u5730\u5740\u88ab\u5199\u5165 \u6807\u7b7e to_png_sprite/to_svg_sprite : \u6682\u4e0d\u4e86\u89e3 to_alt : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 \u6e32\u67d3\u6210html\u65f6\u5019unicode\u7801\u88ab\u76f4\u63a5\u5199\u5165 \u6807\u7b7e to_alt\u6548\u679c\u7b49\u540c\u4e8e\u76f4\u63a5\u5c06emoji\u56fe\u6807\u590d\u5236\u5230markdown\u6587\u6863\u4e2d","title":"18.2. \u5de5\u4f5c\u539f\u7406"},{"location":"mkdocs/syntax/emoji_principle/#2","text":"emoji_index\uff0c\u9009\u62e9emoji\u5382\u5546\uff0c\u9ed8\u8ba4\u4e3aEmojiOne emoji_generator\uff0c\u9009\u62e9\u5382\u5546\u5bf9\u5e94\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u9ed8\u8ba4\u4e3ato_png","title":"\u67092\u4e2a\u5173\u952e\u53c2\u6570"},{"location":"mkdocs/syntax/emoji_principle/#generator3","text":"to_png/to_svg : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 unicode\u7801\u88ab\u8f6c\u4e3aemoji_index\u5bf9\u5e94\u7684\u56fe\u7247CDN\u5730\u5740(Gemoji/EmojiOne/Twemoji\u90fd\u6709\u5404\u81ea\u7684CDN) \u6e32\u67d3\u6210html\u65f6\u5019\u56fe\u7247\u5730\u5740\u88ab\u5199\u5165 \u6807\u7b7e to_png_sprite/to_svg_sprite : \u6682\u4e0d\u4e86\u89e3 to_alt : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 \u6e32\u67d3\u6210html\u65f6\u5019unicode\u7801\u88ab\u76f4\u63a5\u5199\u5165 \u6807\u7b7e to_alt\u6548\u679c\u7b49\u540c\u4e8e\u76f4\u63a5\u5c06emoji\u56fe\u6807\u590d\u5236\u5230markdown\u6587\u6863\u4e2d","title":"generator\u67093\u7c7b"},{"location":"mkdocs/syntax/emoji_usage/","text":"\u901a\u8fc7\u5728markdown\u91cc\u4f7f\u7528 :\u77ed\u540d: \uff0c\u53ef\u4ee5\u5728\u6e32\u67d3\u51fa\u7684html\u91cc\u5c55\u73b0emoji\u56fe\u7247 \u4f9d\u8d56\u6a21\u5757: pymdownx.emoji \u4f7f\u7528\u6b65\u9aa4: mkdocs.yml\u91cc\u914d\u7f6e: - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_png \u5efa\u8bae\u4f7f\u7528to_png\uff0c\u5982\u679c\u4f7f\u7528to_svg\u4f1a\u6709\u90e8\u5206\u56fe\u7247\u56e0\u4e3a\u672a\u4ed8\u8d39\u5bfc\u81f4\u65e0\u6cd5\u663e\u793a \u6d4f\u89c8\u5668\u6253\u5f00 https://www.emojicopy.com/ (emojione\u5b98\u65b9\u63a8\u51fa\u7684emoji\u67e5\u8be2\u7f51\u7ad9\uff0c\u867d\u7136\u5e76\u975e\u5168\u90e8emoji\uff0c\u4f46\u4e5f\u662f\u76ee\u524d\u627e\u5230\u7684\u76f8\u5bf9\u6700\u5168\uff0c\u5e76\u4e14\u5206\u7c7b\u6e05\u695a\uff0c\u4f7f\u7528\u65b9\u4fbf\u7684emoji\u67e5\u8be2\u7f51\u7ad9)\uff0c\u5c06\u9f20\u6807\u60ac\u505c\u5728\u56fe\u6807\u4e0a\u65b9\u4e00\u4f1a\uff0c\u4f1a\u51fa\u73b0\u5bf9\u5e94\u7684\u5168\u540d\uff0c\u6bd4\u5982 \u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u5168\u540d\uff0c\u6bd4\u5982\u8fd9\u91cc\u53eb\u505agrinning face \u70b9\u51fb\u8fdb\u5165\u9644\u5f55\u91cc\u7684 emojione\u5168\u540d\u77ed\u540d\u6620\u5c04\u8868 \uff0c\u5728\u91cc\u9762\u67e5\u627e\u5bf9\u5e94\u7684\u77ed\u540d \u5728markdown\u91cc\u4f7f\u7528\u8be5\u77ed\u540d \u6700\u7701\u4e8b\u505a\u6cd5: \u76f4\u63a5\u590d\u5236emoji\u56fe\u6807 \u65e0\u9700mkdocs.yml\u505a\u4efb\u4f55\u914d\u7f6e\uff0c\u53ea\u8981\u662femoji\u56fe\u6807(\u662f\u56fe\u6807\u4e0d\u662f\u56fe\u7247)\uff0c\u65e0\u8bba\u662f\u8f93\u5165\u6cd5\u81ea\u5e26\u7684emoji\u56fe\u6807\uff0c\u8fd8\u662f https://www.emojicopy.com/ \u4e0a\u7684emoji\u56fe\u6807\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u5230markdown\u6587\u6863\u91cc\u5373\u53ef\u3002\u6bd4\u5982\u8fd9\u4e2a\u7b11\u8138\ud83d\ude04\u5c31\u6765\u81ea\u6211\u7684\u8f93\u5165\u6cd5\uff0c\u53ef\u4ee5\u81ea\u884c\u590d\u5236\u5230markdown\u6587\u6863\u91cc\u6d4b\u8bd5\u3002 \u800c\u4e14\u8fd9\u79cd\u65b9\u5f0f\u9002\u7528\u4e8e\u6240\u6709markdown\u7f16\u8f91\u5668\u3002","title":"18.3. \u6700\u4f73\u5b9e\u8df5"},{"location":"mkdocs/syntax/escape/","text":"\u63a8\u8350\u4f9d\u7167\u5982\u4e0b\u987a\u5e8f\u8fdb\u884c\u8f6c\u4e49\u5c1d\u8bd5 1\u20e3\ufe0f \u4f7f\u7528\u8f6c\u4e49\u7b26\u53f7 \\ 2\u20e3\ufe0f \u4f7f\u7528 \u884c\u5185\u4ee3\u7801 \u6216 \u533a\u5757\u4ee3\u7801 \u65b9\u5f0f 3\u20e3\ufe0f \u5728\u884c\u5185\u4ee3\u7801\u6216\u533a\u5757\u4ee3\u7801\u91cc\u518d\u4f7f\u7528\u8f6c\u4e49\u7b26\u53f7 \\ 4\u20e3\ufe0f html\u6807\u7b7e: <code>\u9700\u8981\u8f6c\u4e49\u7684\u5185\u5bb9</code> \u5982\u679c\u4e0a\u9762\u90fd\u884c\u4e0d\u901a\uff0c\u53ea\u6709\u6700\u540e\u4e00\u62db\uff0c\u622a\u56fe\u5e76 \u63d2\u5165\u56fe\u7247 \u63a8\u8350\u7684\u622a\u56fe\u65b9\u5f0f \u628a\u8981\u8f6c\u4e49\u7684\u6587\u672c\u590d\u5236\u5230\u5fae\u4fe1\u804a\u5929\u5bf9\u8bdd\u8f93\u5165\u6846\u91cc\uff0c\u7136\u540e\u7528\u4efb\u610f\u622a\u56fe\u5de5\u5177\u5bf9\u7740\u8f93\u5165\u6846\u622a\u56fe\uff0c\u8fd9\u6837\u622a\u56fe\u51fa\u6765\u7684\u5e26\u6709\u7070\u8272\u80cc\u666f\uff0c\u5373\u4ee3\u7801\u5757\u90a3\u79cd\u7070\u8272\u80cc\u666f\uff08\u4f1a\u8ba9\u4eba\u89c9\u5f97\u662f\u4f7f\u7528\u4ee3\u7801\u5757\u65b9\u5f0f\u5728\u8868\u8ff0\uff09\u3002 \u6ce8\u610f\u4e0a\u4e0b\u6587 \u76f8\u540c\u7684\u7b26\u53f7\uff0c\u4f1a\u56e0\u4e3a\u4e0a\u4e0b\u6587\u73af\u5883\u88abmkdocs\u8ba4\u4e3a\u662f\u4e0d\u540c\u7684\u610f\u601d\uff0c\u56e0\u6b64\u6709\u65f6\u4f1a\u9047\u5230\u4e00\u4e9b\u7b26\u53f7\u5728\u6709\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u91cc\u53ef\u4ee5\u4f7f\u7528\u6216\u8f6c\u4e49\uff0c\u6709\u7684\u5c31\u4e0d\u884c\uff0c\u6bd4\u5982\u8ddf\u5728\u5217\u8868\u4e4b\u540e\u548c\u8ddf\u7740\u6807\u9898\u4e4b\u540e\u662f\u4e0d\u540c\u4e0a\u4e0b\u6587\u73af\u5883\u3002 \u6211\u7684\u6848\u4f8b \u53ef\u4ee5\u4e0agithub\u67e5\u770b\u672c\u6587\u6863\u4e2d\u8f6c\u4e49\u7ae0\u8282\u7684markdown\u6e90\u6587\u4ef6\uff0c\u5176\u4e2d\u5927\u91cf\u4f7f\u7528\u4e86\u8f6c\u4e49","title":"12. \u8f6c\u4e49"},{"location":"mkdocs/syntax/font_line/","text":"\u4e0d\u5e26\u9ad8\u4eae \u00b6 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic This is ~~is~~ a test. \u6548\u679c This is is a test. \u80cc\u666f\u9ad8\u4eae \u00b6 \u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u6a2a\u7ebf\u90e8\u5206","title":"7.4. \u6a2a\u7ebf"},{"location":"mkdocs/syntax/font_line/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.critic This is ~~is~~ a test. \u6548\u679c This is is a test.","title":"\u4e0d\u5e26\u9ad8\u4eae"},{"location":"mkdocs/syntax/font_line/#_2","text":"\u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u6a2a\u7ebf\u90e8\u5206","title":"\u80cc\u666f\u9ad8\u4eae"},{"location":"mkdocs/syntax/font_stress/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.betterem(smart_enable=all) *text* \u6216 _text_ \u659c\u4f53 **text** \u6216 __text__ \u7c97\u4f53 ***text*** \u6216 ___text___ \u7c97\u659c\u4f53 \u6548\u679c text \u659c\u4f53 text \u7c97\u4f53 text \u7c97\u659c\u4f53 \u907f\u514d\u51b2\u7a81 \u8fd9\u4e2a\u6269\u5c55\u548cmarkdown.extensions.smartstrong\u6269\u5c55\u51b2\u7a81\uff0c\u4e0d\u80fd\u540c\u65f6\u8f7d\u5165\uff0c\u524d\u8005\u66ff\u4ee3\u4e86\u540e\u8005\uff0c\u5b9e\u73b0\u66f4\u597d\u7684\u6548\u679c\u3002","title":"7.1. \u659c\u4f53,\u7c97\u4f53,\u7c97\u659c\u4f53"},{"location":"mkdocs/syntax/font_underline/","text":"\u4e0d\u5e26\u9ad8\u4eae \u00b6 \u4f9d\u8d56\u6a21\u5757: pymdownx.caret ^^underline me^^ \u6548\u679c underline me \u80cc\u666f\u9ad8\u4eae \u00b6 \u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u4e0b\u5212\u7ebf\u90e8\u5206","title":"7.3. \u4e0b\u5212\u7ebf"},{"location":"mkdocs/syntax/font_underline/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.caret ^^underline me^^ \u6548\u679c underline me","title":"\u4e0d\u5e26\u9ad8\u4eae"},{"location":"mkdocs/syntax/font_underline/#_2","text":"\u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u4e0b\u5212\u7ebf\u90e8\u5206","title":"\u80cc\u666f\u9ad8\u4eae"},{"location":"mkdocs/syntax/font_underline_line/","text":"\u53ea\u6709\u9ad8\u4eae\u5f62\u5f0f,\u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u4e0b\u5212\u7ebf+\u6a2a\u7ebf\u90e8\u5206","title":"7.5. \u4e0b\u5212\u7ebf+\u6a2a\u7ebf"},{"location":"mkdocs/syntax/font_updown/","text":"\u4e0a\u6807 \u00b6 \u4f9d\u8d56\u6a21\u5757: pymdownx.caret 10^2^ \u6548\u679c 10 2 \u9488\u5bf9\u82f1\u6587\u63cf\u8ff0\u7b2c\u51e0\u7684\u4e0a\u6807\uff0c\u53ef\u4ee5 1st \u8fd9\u79cd\u65b9\u5f0f(\u4f9d\u8d56\u6a21\u5757: pymdownx.smartsymbols) \u7528\u6cd5 \u6548\u679c 1st 2nd 3rd 1 st 2 nd 3 rd 1^st^ 2^nd^ 3^rd^ 1 st 2 nd 3 rd \u4e0b\u6807 \u00b6 \u4f9d\u8d56\u6a21\u5757: pymdownx.tilde H~2~O \u6548\u679c H 2 O","title":"7.2. \u4e0a\u6807,\u4e0b\u6807"},{"location":"mkdocs/syntax/font_updown/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.caret 10^2^ \u6548\u679c 10 2 \u9488\u5bf9\u82f1\u6587\u63cf\u8ff0\u7b2c\u51e0\u7684\u4e0a\u6807\uff0c\u53ef\u4ee5 1st \u8fd9\u79cd\u65b9\u5f0f(\u4f9d\u8d56\u6a21\u5757: pymdownx.smartsymbols) \u7528\u6cd5 \u6548\u679c 1st 2nd 3rd 1 st 2 nd 3 rd 1^st^ 2^nd^ 3^rd^ 1 st 2 nd 3 rd","title":"\u4e0a\u6807"},{"location":"mkdocs/syntax/font_updown/#_2","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.tilde H~2~O \u6548\u679c H 2 O","title":"\u4e0b\u6807"},{"location":"mkdocs/syntax/footnote/","text":"\u4f9d\u8d56\u6a21\u5757: footnotes \u7b2c\u4e00\u6b65. \u63d2\u5165\u5f15\u7528 Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] \u7b2c\u4e8c\u6b65. \u63d2\u5165\u5185\u5bb9 [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u9762\u811a\u6ce81\u5185\u5bb9\u662f\u5355\u884c\u65b9\u5f0f\uff0c\u811a\u6ce82\u5185\u5bb9\u662f\u591a\u884c\u65b9\u5f0f \u6548\u679c Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 \u6ce8\u610f \u4e0d\u4e00\u5b9a\u8981\u7528[^1]\uff0c\u4e5f\u53ef\u4ee5\u7528\u81ea\u5b9a\u4e49\u5173\u952e\u5b57\uff0c\u6bd4\u5982[^mykey]\uff0c\u4f46\u8fd9\u6837\u4e0b\u9762\u4e5f\u8981\u6539\u4e3a[^mykey]\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u7a7a\u683c\uff0c\u6bd4\u5982[^my key]\uff08\u5f53\u7136\u540e\u9762\u4e5f\u8981[^my key]: \u65e0\u8bba\u811a\u6ce8\u6807\u7b7e\u5199\u7684\u662f\u4ec0\u4e48\uff08\u5373[^1]\u6216\u8005[^mykey]\uff0c\u5728\u5c55\u793a\u811a\u6ce8\u6807\u7b7e\u548c\u5c55\u793a\u811a\u6ce8\u5185\u5bb9\u65f6\u5019\u90fd\u662f\u81ea\u52a8\u7528\u6570\u5b57\u4ece1\u5f00\u59cb\u7d2f\u52a0\u6807\u8bb0\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u5199\u7684\u5185\u5bb9\uff09 [^1]: \u811a\u6ce8\u5185\u5bb9\u65e0\u8bba\u5199\u5728.md\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u5728\u5c55\u793a\u65f6\u5019\u90fd\u662f\u81ea\u52a8\u4f4d\u4e8e\u6587\u6863\u7684\u6700\u4e0b\u65b9\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u6dfb\u52a0---\u8fd9\u6837\u4e00\u4e2a\u6a2a\u7ebf Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"15. \u811a\u6ce8"},{"location":"mkdocs/syntax/headline/","text":"\u4f7f\u7528 # \uff0c\u8868\u793a1-6\u7ea7\u6807\u9898\u3002 # \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 \u6ce8\u610f: \u4e00\u4e2a.md\u91cc\u53ea\u80fd\u6709\u4e00\u4e2a # \uff0c\u8ddf\u7740\u591a\u4e2a ## \u3002\u5982\u679c\u6709\u591a\u4e2a # \uff0c\u5219\u4e0d\u4f1a\u81ea\u52a8\u751f\u4ea7\u672c\u9875\u76ee\u5f55\u3002 \u5982\u679c\u6709 # \uff0c\u5219\u4f7f\u7528\u8be5\u6807\u9898\u4f5c\u4e3a\u672c\u9875\u6b63\u6587\u90e8\u5206\u7b2c\u4e00\u884c\uff0c\u5982\u679c\u6ca1\u6709#\uff0c\u5219\u4e3amkdocs.yml\u91cc\u6307\u5b9a\u7684pages\u540d\u3002 \u4e2a\u4eba\u5efa\u8bae.md\u4ece ## \u5f00\u59cb\uff0c\u4e0d\u8981\u7528 # \u3002","title":"2. \u6807\u9898"},{"location":"mkdocs/syntax/highlight_background/","text":"\u9ec4\u8272 \u00b6 2\u4e2a\u6a21\u5757\u5747\u63d0\u4f9b\u4e86\u76f8\u4f3c\u7684\u6548\u679c \u6a21\u57571: pymdownx.mark ==hello world== \u6548\u679c hello world \u6a21\u57572: pymdownx.critic \u6548\u679c hello world \u4f46\u8fd92\u4e2a\u6a21\u5757\u4e5f\u6709\u533a\u522b : \u533a\u522b1: pymdownx.mark\u6e32\u67d3\u51fa\u7684html\u662f <p><mark>hello world</mark></p> pymdownx.critic\u6e32\u67d3\u51fa\u7684html\u662f <p><mark class=\"critic\">hello world</mark></p> \u533a\u522b2: pymdownx.mark\u4e0d\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae pymdownx.critic\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae \u7528\u6cd5: \u6548\u679c: AAA BBB CCC \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u9ec4\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7eff\u8272(\u4e0b\u5212\u7ebf) \u00b6 \u8868\u793a\u63d2\u5165\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c Hello, my world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7ea2\u8272(\u6a2a\u7ebf) \u00b6 \u8868\u793a\u5220\u9664\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.tidle \u6548\u679c delete me \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7eff\u8272+\u7ea2\u8272(\u4e0b\u5212\u7ebf+\u6a2a\u7ebf) \u00b6 \u8868\u793a\u66ff\u6362\u6587\u5b57 2\u79cd\u5b9e\u73b0\u65b9\u5f0f: \u5148\u4f7f\u7528\u7ea2\u8272(\u6a2a\u7ebf)\uff0c\u518d\u4f7f\u7528\u7eff\u8272(\u4e0b\u5212\u7ebf) \u4f7f\u7528\u4e13\u95e8\u7684\u8bed\u6cd5\uff0c\u4f9d\u8d56\u6a21\u5757pymdownx.tidle \u8fd92\u79cd\u65b9\u5f0f\u6548\u679c\u5b8c\u5168\u4e00\u81f4\uff0c\u5305\u62ec\u5b9e\u9645\u770b\u5230\u7684\u6837\u5f0f\u548chtml\u90fd\u662f\u76f8\u540c\u7684 Hello, my our world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272+\u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7070\u8272 \u00b6 \u8868\u793a\u6ce8\u89e3 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c This is a test What is it a test of? . \u6ce8\u610f: \u53ea\u652f\u6301\u5355\u884c\u7528\u6cd5\uff0c\u4e0d\u652f\u6301\u533a\u5757\u7528\u6cd5 \u65e0\u6cd5\u4e0e\u4ee3\u7801\u9ad8\u4eae\u7ed3\u5408\uff0c\u5305\u62ec\u884c\u5185\u4ee3\u7801\u9ad8\u4eae\u548c\u533a\u5757\u4ee3\u7801\u9ad8\u4eae","title":"13.2. \u80cc\u666f\u9ad8\u4eae"},{"location":"mkdocs/syntax/highlight_background/#_1","text":"2\u4e2a\u6a21\u5757\u5747\u63d0\u4f9b\u4e86\u76f8\u4f3c\u7684\u6548\u679c \u6a21\u57571: pymdownx.mark ==hello world== \u6548\u679c hello world \u6a21\u57572: pymdownx.critic \u6548\u679c hello world \u4f46\u8fd92\u4e2a\u6a21\u5757\u4e5f\u6709\u533a\u522b : \u533a\u522b1: pymdownx.mark\u6e32\u67d3\u51fa\u7684html\u662f <p><mark>hello world</mark></p> pymdownx.critic\u6e32\u67d3\u51fa\u7684html\u662f <p><mark class=\"critic\">hello world</mark></p> \u533a\u522b2: pymdownx.mark\u4e0d\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae pymdownx.critic\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae \u7528\u6cd5: \u6548\u679c: AAA BBB CCC \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u9ec4\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u9ec4\u8272"},{"location":"mkdocs/syntax/highlight_background/#_2","text":"\u8868\u793a\u63d2\u5165\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c Hello, my world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u7eff\u8272(\u4e0b\u5212\u7ebf)"},{"location":"mkdocs/syntax/highlight_background/#_3","text":"\u8868\u793a\u5220\u9664\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.tidle \u6548\u679c delete me \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u7ea2\u8272(\u6a2a\u7ebf)"},{"location":"mkdocs/syntax/highlight_background/#_4","text":"\u8868\u793a\u66ff\u6362\u6587\u5b57 2\u79cd\u5b9e\u73b0\u65b9\u5f0f: \u5148\u4f7f\u7528\u7ea2\u8272(\u6a2a\u7ebf)\uff0c\u518d\u4f7f\u7528\u7eff\u8272(\u4e0b\u5212\u7ebf) \u4f7f\u7528\u4e13\u95e8\u7684\u8bed\u6cd5\uff0c\u4f9d\u8d56\u6a21\u5757pymdownx.tidle \u8fd92\u79cd\u65b9\u5f0f\u6548\u679c\u5b8c\u5168\u4e00\u81f4\uff0c\u5305\u62ec\u5b9e\u9645\u770b\u5230\u7684\u6837\u5f0f\u548chtml\u90fd\u662f\u76f8\u540c\u7684 Hello, my our world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272+\u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u7eff\u8272+\u7ea2\u8272(\u4e0b\u5212\u7ebf+\u6a2a\u7ebf)"},{"location":"mkdocs/syntax/highlight_background/#_5","text":"\u8868\u793a\u6ce8\u89e3 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c This is a test What is it a test of? . \u6ce8\u610f: \u53ea\u652f\u6301\u5355\u884c\u7528\u6cd5\uff0c\u4e0d\u652f\u6301\u533a\u5757\u7528\u6cd5 \u65e0\u6cd5\u4e0e\u4ee3\u7801\u9ad8\u4eae\u7ed3\u5408\uff0c\u5305\u62ec\u884c\u5185\u4ee3\u7801\u9ad8\u4eae\u548c\u533a\u5757\u4ee3\u7801\u9ad8\u4eae","title":"\u7070\u8272"},{"location":"mkdocs/syntax/highlight_code/","text":"\u884c\u5185\u4ee3\u7801\u9ad8\u4eae \u00b6 \u4f9d\u8d56\u6a21\u5757: pymdownx.inlinehilite \u4f7f\u7528shebang\u53ef\u4ee5\u5728\u4e00\u884c\u6587\u672c\u91cc\u5b9e\u73b0\u4ee3\u7801\u9ad8\u4eae `#!python print \"Hello, world!\"`\u6216`:::python print \"Hello, world!\"` \u6548\u679c print \"Hello, world!\" \u6216 print \"Hello, world!\" \u5f00\u5934\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u5982\u679c\u6709\u7a7a\u683c\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6b63\u6587 ` #!python print \"Hello, world!\"` \u6548\u679c #!python print \"Hello, world!\" ` :::python print \"Hello, world!\"` \u6548\u679c :::python print \"Hello, world!\" \u533a\u5757\u4ee3\u7801\u9ad8\u4eae \u00b6 \u7528\u6cd5 \u00b6 \u4f9d\u8d56\u6a21\u5757: codehilite \u5199\u6cd51: 3\u4e2a` ```python text = \"Hello, world!\" print text ``` \u6548\u679c text = \"Hello, world!\" print text \u5199\u6cd52: 4\u4e2a\u7a7a\u683c+shebang #!/usr/bin/python text = \"Hello, world!\" print text \u6548\u679c #!/usr/bin/python text = \"Hello, world!\" print text \u652f\u6301434\u79cd\u683c\u5f0f codehilite\u662f\u57fa\u4e8epygments\u5b9e\u73b0\u9ad8\u4eae\u7684\uff0c\u652f\u6301434\u79cd\u683c\u5f0f\uff0c\u8be6\u89c1 \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u7684\u8bed\u8a00 \u82e5\u6307\u5b9a\u4e86\u4e0d\u5b58\u5728\u7684\u683c\u5f0f\uff0c\u5219\u7b49\u540c\u4e8etext\uff0c\u4e0d\u505a\u4efb\u4f55\u9ad8\u4eae\u6e32\u67d3 \u82e5\u4e0d\u60f3\u4f7f\u7528\u9ad8\u4eae\uff0c\u7528text\uff0c\u5982\uff1a ```text text = \"Hello, world!\" print text ``` \u6548\u679c text = \"Hello, world!\" print text \u53c2\u65701. \u81ea\u52a8\u731c\u6d4b\u8bed\u8a00 \u00b6 \u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e\u5982\u4e0b - codehilite(guess_lang=false) \u5173\u95ed\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u5173\u95ed\u9ad8\u4eae - codehilite(guess_lang=true) \u5f00\u542f\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u81ea\u52a8\u731c\u6d4b \u53c2\u65702. \u663e\u793a\u884c\u53f7 \u00b6 \u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e - codehilite(linenums=true) \u663e\u793a\u884c\u53f7 - codehilite(linenums=false) \u4e0d\u663e\u793a\u884c\u53f7 \u82e5codehilite(linenums=true)\uff0c4\u4e2a\u7a7a\u683c\u7684\u4ee3\u7801\u5757\u65b9\u5f0f\u4e5f\u4f1a\u88ab\u81ea\u52a8\u52a0\u4e0a\u884c\u53f7 \u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\" \u53c2\u65703. \u6307\u5b9a\u7b2c\u51e0\u884c\u80cc\u666f\u9ad8\u4eae \u00b6 \u5728mkdocs.yml\u91cc\u4e0d\u7528\u989d\u5916\u8bbe\u7f6e ```python hl_lines=\"2 4\" text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 \u53c2\u65704. \u6307\u5b9a\u884c\u53f7\u4ece\u591a\u5c11\u5f00\u59cb\u7f16\u53f7 \u00b6 ```python linenums=\"2\" text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 \u5f3a\u5236\u663e\u5f0f\u884c\u53f7 \u5f53\u4ee3\u7801\u5757\u6307\u5b9a\u4e86linenums\u540e\uff0c\u5373\u4f7fmkdocs.yml\u91cclinenums=false\uff0c\u4e5f\u4f1a\u81ea\u52a8\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\" \u6ce8\u610f\uff1a\u4ee3\u7801\u5757linenums\u53c2\u6570\u4e0d\u4f1a\u5f71\u54cdhl_lines\uff0c\u5373\u65e0\u8bbalinenums\u6307\u5b9a\u4ece\u591a\u5c11\u884c\u5f00\u59cb\u7f16\u53f7\uff0chl_lines\u5b9e\u9645\u90fd\u4ee5\u884c\u53f7\u4ece1\u5f00\u59cb\u7f16\u53f7\u6765\u627e\u5230\u5bf9\u5e94\u884c\u8fdb\u884c\u80cc\u666f\u9ad8\u4eae\u6e32\u67d3\uff0c\u5982\uff1a ```python linenums=\"2\" hl_lines=\"3\" text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = \"Hello, \" text2 = \"world!\" print text1 + text2","title":"13.1. \u4ee3\u7801\u9ad8\u4eae"},{"location":"mkdocs/syntax/highlight_code/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.inlinehilite \u4f7f\u7528shebang\u53ef\u4ee5\u5728\u4e00\u884c\u6587\u672c\u91cc\u5b9e\u73b0\u4ee3\u7801\u9ad8\u4eae `#!python print \"Hello, world!\"`\u6216`:::python print \"Hello, world!\"` \u6548\u679c print \"Hello, world!\" \u6216 print \"Hello, world!\" \u5f00\u5934\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u5982\u679c\u6709\u7a7a\u683c\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6b63\u6587 ` #!python print \"Hello, world!\"` \u6548\u679c #!python print \"Hello, world!\" ` :::python print \"Hello, world!\"` \u6548\u679c :::python print \"Hello, world!\"","title":"\u884c\u5185\u4ee3\u7801\u9ad8\u4eae"},{"location":"mkdocs/syntax/highlight_code/#_2","text":"","title":"\u533a\u5757\u4ee3\u7801\u9ad8\u4eae"},{"location":"mkdocs/syntax/highlight_code/#_3","text":"\u4f9d\u8d56\u6a21\u5757: codehilite \u5199\u6cd51: 3\u4e2a` ```python text = \"Hello, world!\" print text ``` \u6548\u679c text = \"Hello, world!\" print text \u5199\u6cd52: 4\u4e2a\u7a7a\u683c+shebang #!/usr/bin/python text = \"Hello, world!\" print text \u6548\u679c #!/usr/bin/python text = \"Hello, world!\" print text \u652f\u6301434\u79cd\u683c\u5f0f codehilite\u662f\u57fa\u4e8epygments\u5b9e\u73b0\u9ad8\u4eae\u7684\uff0c\u652f\u6301434\u79cd\u683c\u5f0f\uff0c\u8be6\u89c1 \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u7684\u8bed\u8a00 \u82e5\u6307\u5b9a\u4e86\u4e0d\u5b58\u5728\u7684\u683c\u5f0f\uff0c\u5219\u7b49\u540c\u4e8etext\uff0c\u4e0d\u505a\u4efb\u4f55\u9ad8\u4eae\u6e32\u67d3 \u82e5\u4e0d\u60f3\u4f7f\u7528\u9ad8\u4eae\uff0c\u7528text\uff0c\u5982\uff1a ```text text = \"Hello, world!\" print text ``` \u6548\u679c text = \"Hello, world!\" print text","title":"\u7528\u6cd5"},{"location":"mkdocs/syntax/highlight_code/#1","text":"\u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e\u5982\u4e0b - codehilite(guess_lang=false) \u5173\u95ed\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u5173\u95ed\u9ad8\u4eae - codehilite(guess_lang=true) \u5f00\u542f\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u81ea\u52a8\u731c\u6d4b","title":"\u53c2\u65701. \u81ea\u52a8\u731c\u6d4b\u8bed\u8a00"},{"location":"mkdocs/syntax/highlight_code/#2","text":"\u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e - codehilite(linenums=true) \u663e\u793a\u884c\u53f7 - codehilite(linenums=false) \u4e0d\u663e\u793a\u884c\u53f7 \u82e5codehilite(linenums=true)\uff0c4\u4e2a\u7a7a\u683c\u7684\u4ee3\u7801\u5757\u65b9\u5f0f\u4e5f\u4f1a\u88ab\u81ea\u52a8\u52a0\u4e0a\u884c\u53f7 \u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\"","title":"\u53c2\u65702. \u663e\u793a\u884c\u53f7"},{"location":"mkdocs/syntax/highlight_code/#3","text":"\u5728mkdocs.yml\u91cc\u4e0d\u7528\u989d\u5916\u8bbe\u7f6e ```python hl_lines=\"2 4\" text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c text1 = \"Hello, \" text2 = \"world!\" print text1 + text2","title":"\u53c2\u65703. \u6307\u5b9a\u7b2c\u51e0\u884c\u80cc\u666f\u9ad8\u4eae"},{"location":"mkdocs/syntax/highlight_code/#4","text":"```python linenums=\"2\" text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 \u5f3a\u5236\u663e\u5f0f\u884c\u53f7 \u5f53\u4ee3\u7801\u5757\u6307\u5b9a\u4e86linenums\u540e\uff0c\u5373\u4f7fmkdocs.yml\u91cclinenums=false\uff0c\u4e5f\u4f1a\u81ea\u52a8\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\" \u6ce8\u610f\uff1a\u4ee3\u7801\u5757linenums\u53c2\u6570\u4e0d\u4f1a\u5f71\u54cdhl_lines\uff0c\u5373\u65e0\u8bbalinenums\u6307\u5b9a\u4ece\u591a\u5c11\u884c\u5f00\u59cb\u7f16\u53f7\uff0chl_lines\u5b9e\u9645\u90fd\u4ee5\u884c\u53f7\u4ece1\u5f00\u59cb\u7f16\u53f7\u6765\u627e\u5230\u5bf9\u5e94\u884c\u8fdb\u884c\u80cc\u666f\u9ad8\u4eae\u6e32\u67d3\uff0c\u5982\uff1a ```python linenums=\"2\" hl_lines=\"3\" text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = \"Hello, \" text2 = \"world!\" print text1 + text2","title":"\u53c2\u65704. \u6307\u5b9a\u884c\u53f7\u4ece\u591a\u5c11\u5f00\u59cb\u7f16\u53f7"},{"location":"mkdocs/syntax/image_index/","text":"\u5f53\u4e00\u4e2a\u9875\u9762\u91cc\u591a\u6b21\u8c03\u7528\u76f8\u540c\u56fe\u7247\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u9002\u7528: ![alt][\u7d22\u5f15] [\u7d22\u5f15]: \u56fe\u7247\u5730\u5740 \"title\" \u6ce8\u610f: [\u7d22\u5f15]: \u56fe\u7247\u5730\u5740 \"title\" \u53ef\u4ee5\u5199\u5728\u4efb\u610f\u5730\u65b9\uff0c\u901a\u5e38\u4e60\u60ef\u4e8e\u653e\u5728markdown\u672c\u9875\u6587\u6863\u6700\u4e0b\u65b9 \u5982 ![alt][test icon] ... [test icon]: /img/test_icon.png \"title\" \u6548\u679c \u9f20\u6807\u60ac\u505c\u5728\u56fe\u6807\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"11.2. \u53c2\u8003\u5f0f"},{"location":"mkdocs/syntax/image_inline/","text":"\u6dfb\u52a0\u56fe\u7247\u7684\u5f62\u5f0f\u548c\u94fe\u63a5\u76f8\u4f3c\uff0c\u53ea\u9700\u5728\u94fe\u63a5\u7684\u57fa\u7840\u4e0a\u524d\u65b9\u52a0\u4e00\u4e2a ! ![alt](\u56fe\u7247\u5730\u5740 \"title\") \u5982 ![hello](./../../img/test_icon.png \"title\") \u6548\u679c \u9f20\u6807\u60ac\u505c\u5728\u56fe\u6807\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"11.1. \u884c\u5185\u5f0f"},{"location":"mkdocs/syntax/link_anchor/","text":"\u82f1\u6587\u53ebPermalinks\uff0c\u662ftoc\u6269\u5c55\u6a21\u5757\u7684\u4e00\u4e2a\u529f\u80fd \u4f9d\u8d56\u6a21\u5757: toc \u9ed8\u8ba4\u503c: toc(permalink=false) \u7b14\u8005\u63a8\u8350\u503c: toc(permalink=true) \u53c2\u6570\u8bbe\u7f6e: toc(permalink=true) \u70b9\u51fb\u951a\u70b9\u6216\u8005\u8df3\u8f6c\u81f3\u951a\u70b9\u540e\u4f1a\u81ea\u52a8\u5728\u951a\u70b9\u5904\u663e\u793a\u56fe\u6807\u6216\u6587\u672c\uff0c\u5e76\u81ea\u52a8\u56fa\u5b9a\u5728\u8be5\u4f4d\u7f6e\uff0c\u5237\u65b0\u9875\u9762\u540e\u4e5f\u4f1a\u81ea\u52a8\u56de\u5230\u8be5\u4f4d\u7f6e\uff0c\u6548\u679c\u5982\u4e0b\uff1a toc(permalink=false) \u770b\u4e0d\u5230\u951a\u70b9\u5904\u7684\u56fe\u6807\u6216\u6587\u672c\uff0c\u4f46\u8df3\u8f6c\u81f3\u951a\u70b9\u5904\u540e\u81ea\u52a8\u56fa\u5b9a\u5728\u8be5\u4f4d\u7f6e\uff0c\u5237\u65b0\u9875\u9762\u540e\u4e5f\u4f1a\u81ea\u52a8\u56de\u5230\u8be5\u4f4d\u7f6e toc(permalink=false)\u7b49\u540c\u4e8e\u6ce8\u91ca\u6389\u8fd9\u4e2a\u6269\u5c55\uff0c\u6548\u679c\u5747\u5982\u4e0b\uff1a toc(permalink=\u81ea\u5b9a\u4e49\u540d) \u53ef\u4ee5\u652f\u6301\u81ea\u5b9a\u4e49\u540d\uff0c\u6bd4\u5982toc(permalinks=hello)\uff0c\u6548\u679c\u5982\u4e0b\uff1a","title":"10.3. \u951a\u70b9\u63d0\u793a"},{"location":"mkdocs/syntax/link_auto/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.magiclink \u5f53\u8bc6\u522b\u5230HTML\u3001FTP\u3001Email\u5730\u5740\u65f6\u5019\u4f1a\u81ea\u52a8\u8f6c\u4e3a\u8d85\u94fe\u63a5\uff0c\u5982 http://www.example.cpm/ \u6548\u679c http://www.example.com/ \u7ecf\u6d4b\u8bd5\uff0c\u81f3\u5c11\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u81ea\u52a8\u94fe\u63a5 http://www.example.com/ https://www.example.com/ ftp://www.example.com/ www.example.com user@example.com","title":"10.2. \u81ea\u52a8\u94fe\u63a5"},{"location":"mkdocs/syntax/link_normal/","text":"\u884c\u5185\u5f0f \u00b6 [example](http://www.example.com/ \"title\") \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837 \u53c2\u8003\u5f0f \u00b6 \u5f53\u4e00\u4e2a\u9875\u9762\u91cc\u591a\u6b21\u8c03\u7528\u76f8\u540c\u94fe\u63a5\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u9002\u7528: [example][\u7d22\u5f15] ... [\u7d22\u5f15]: http://www.example.com/ \"title\" \u6ce8\u610f: [\u7d22\u5f15]: http://www.example.com/ \"title\" \u53ef\u4ee5\u5199\u5728\u4efb\u610f\u5730\u65b9\uff0c\u901a\u5e38\u4e60\u60ef\u4e8e\u653e\u5728markdown\u672c\u9875\u6587\u6863\u6700\u4e0b\u65b9 \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"10.1. \u666e\u901a\u94fe\u63a5"},{"location":"mkdocs/syntax/link_normal/#_1","text":"[example](http://www.example.com/ \"title\") \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"\u884c\u5185\u5f0f"},{"location":"mkdocs/syntax/link_normal/#_2","text":"\u5f53\u4e00\u4e2a\u9875\u9762\u91cc\u591a\u6b21\u8c03\u7528\u76f8\u540c\u94fe\u63a5\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u9002\u7528: [example][\u7d22\u5f15] ... [\u7d22\u5f15]: http://www.example.com/ \"title\" \u6ce8\u610f: [\u7d22\u5f15]: http://www.example.com/ \"title\" \u53ef\u4ee5\u5199\u5728\u4efb\u610f\u5730\u65b9\uff0c\u901a\u5e38\u4e60\u60ef\u4e8e\u653e\u5728markdown\u672c\u9875\u6587\u6863\u6700\u4e0b\u65b9 \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"\u53c2\u8003\u5f0f"},{"location":"mkdocs/syntax/list_noseq/","text":"\u4f7f\u7528 * \u3001 + \u3001\u6216 - \u6807\u8bb0\u65e0\u5e8f\u5217\u8868\uff0c\u4e0b\u9762\u4ec5\u4ee5 - \u4f5c\u4e3a\u793a\u4f8b\uff0c - \u7b2c\u4e00\u9879 - \u7b2c\u4e8c\u9879 - \u7b2c\u4e09\u9879 \u6ce8: \u6807\u8bb0\u540e\u9762\u6700\u5c11\u6709\u4e00\u4e2a \u7a7a\u683c \u6216 \u5236\u8868\u7b26 \u3002\u82e5\u4e0d\u5728\u5f15\u7528\u533a\u5757\u4e2d\uff0c\u5fc5\u987b\u548c\u524d\u65b9\u6bb5\u843d\u4e4b\u95f4\u5b58\u5728\u7a7a\u884c\u3002 \u6548\u679c \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879","title":"8.1. \u65e0\u5e8f\u5217\u8868"},{"location":"mkdocs/syntax/list_seq/","text":"\u6709\u5e8f\u5217\u8868\u7684\u6807\u8bb0\u65b9\u5f0f\u662f\u5c06\u4e0a\u8ff0\u7684\u7b26\u53f7\u6362\u6210\u6570\u5b57,\u5e76\u8f85\u4ee5 . 1. \u7b2c\u4e00\u9879 2. \u7b2c\u4e8c\u9879 3. \u7b2c\u4e09\u9879 \u6548\u679c \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879","title":"8.2. \u6709\u5e8f\u5217\u8868"},{"location":"mkdocs/syntax/list_task/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.tasklist \u7528\u6cd5: - [ ] \u6216 - [x] \uff0c\u5176\u4e2d [ ] \u8868\u793a\u4e0d\u6253\u52fe\uff0c [x] \u8868\u793a\u6253\u52fe\uff0c - \u53ef\u4ee5\u7528 + \u6216 * \u66ff\u4ee3 - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [x] Nulla lobortis egestas semper - [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est - [ ] Vestibulum convallis sit amet nisi a tincidunt - [x] In hac habitasse platea dictumst - [x] In scelerisque nibh non dolor mollis congue sed et metus - [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis - [ ] Praesent sed risus massa - [x] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque - [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi \u6548\u679c Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi","title":"8.3. \u4efb\u52a1\u5217\u8868"},{"location":"mkdocs/syntax/main/","text":"\u7531\u4e8e\u8bed\u6cd5\u4f17\u591a\uff0c\u56e0\u6b64\u5c06 \u5927\u90e8\u5206\u8bed\u6cd5 \u6c47\u603b\u5728\u4e0b\u9762\u8868\u683c\u91cc\uff0c\u4fbf\u4e8e\u4e00\u89c8\u3002 \u4f46\u8be5\u8868\u5e76\u672a\u6db5\u76d6\u5168\u90e8\u8bed\u6cd5(\u5982\u67d0\u4e9b\u7279\u6b8a\u7b26\u53f7) \uff0c\u56e0\u6b64\u8be6\u60c5\u8bf7\u7ffb\u770b\u8bed\u6cd5\u7684\u5177\u4f53\u7ae0\u8282\u3002 \u7b26\u53f7 \u7528\u9014 # \u6807\u9898 \u7a7a\u884c \u6bb5\u843d > \u5f15\u7528 [^sth] \u811a\u6ce8 !!! \u6ce8\u89e3 ??? \u6298\u53e0\u6ce8\u89e3 \\ \u8f6c\u4e49 * \u5217\u8868 + \u5217\u8868 - \u5217\u8868 *[x] \u4efb\u52a1\u5217\u8868 +[x] \u4efb\u52a1\u5217\u8868 -[x] \u4efb\u52a1\u5217\u8868 --- \u5206\u5272\u7ebf :shortname: emoji ` \u884c\u5185\u4ee3\u7801 ```\u8bed\u8a00 \u4ee3\u7801\u5757,\u5e26\u9ad8\u4eae TAB \u4ee3\u7801\u5757 #! \u4ee3\u7801\u9ad8\u4eae ::: \u4ee3\u7801\u9ad8\u4eae *sth* \u659c\u4f53 _sth_ \u659c\u4f53 **sth** \u7c97\u4f53 __sth__ \u7c97\u4f53 ***sth*** \u7c97\u659c\u4f53 ___sth___ \u7c97\u659c\u4f53 ^sth^ \u4e0a\u6807 ~sth~ \u4e0b\u6807 ^^sth^^ \u6587\u5b57\u4e0b\u5212\u7ebf ~~sth~~ \u6587\u5b57\u4e2d\u6a2a\u7ebf {++sth++} \u6587\u5b57\u4e0b\u5212\u7ebf,\u7eff\u8272\u80cc\u666f\u9ad8\u4eae {--sth--} \u6587\u5b57\u4e2d\u6a2a\u7ebf,\u7ea2\u8272\u80cc\u666f\u9ad8\u4eae {~~false~>true~~} \u6587\u5b57\u4e0b\u5212\u7ebf\u63a5\u6587\u5b57\u6a2a\u7ebf,\u7eff\u63a5\u7ea2\u80cc\u666f\u9ad8\u4eae {>>sth<<} \u8868\u793a\u6ce8\u89e3,\u7070\u8272\u80cc\u666f\u9ad8\u4eae ==sth== \u9ec4\u8272\u80cc\u666f\u9ad8\u4eae {==sth==} \u9ec4\u8272\u80cc\u666f\u9ad8\u4eae $sth$ \u884c\u5185\u5f0f\u6570\u5b66\u516c\u5f0f \\(sth)\\ \u884c\u5185\u5f0f\u6570\u5b66\u516c\u5f0f $$...$$ \u533a\u5757\u5f0f\u6570\u5b66\u516c\u5f0f \\begin{}...\\end{} \u533a\u5757\u5f0f\u6570\u5b66\u516c\u5f0f [text](url \"title\") \u884c\u5185\u5f0f\u94fe\u63a5 [text][index],\u6587\u6863\u6700\u540e[index]: url \"title\" \u53c2\u8003\u5f0f\u94fe\u63a5 \u7b26\u5408\u8981\u6c42\u7684URL \u81ea\u52a8\u94fe\u63a5 ![alt](url \"title\") \u884c\u5185\u5f0f\u56fe\u7247 ![alt][index],\u6587\u6863\u6700\u540e[index]: url \"title\" \u53c2\u8003\u5f0f\u56fe\u7247","title":"1. \u8bed\u6cd5\u603b\u89c8"},{"location":"mkdocs/syntax/math_js/","text":"\u5148\u5728docs\u91cc\u521b\u5efajs\u76ee\u5f55\uff0c\u5e76\u5728js\u76ee\u5f55\u4e2d\u653e\u7f6eextra.js\uff1a window . MathJax = { tex2jax : { inlineMath : [ [ \"\\\\(\" , \"\\\\)\" ] ], displayMath : [ [ \"\\\\[\" , \"\\\\]\" ] ] }, TeX : { TagSide : \"right\" , TagIndent : \".8em\" , MultLineWidth : \"85%\" , equationNumbers : { autoNumber : \"AMS\" , }, unicode : { fonts : \"STIXGeneral,'Arial Unicode MS'\" } }, displayAlign : \"left\" , showProcessingMessages : false , messageStyle : \"none\" }; \u7136\u540e\u5728mkdocs.yml\u91cc\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff0c\u7528\u4e8e\u5bfc\u5165js extra_javascript : - 'js/extra.js' - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'","title":"17.2. \u5bfc\u5165js"},{"location":"mkdocs/syntax/math_main/","text":"\u7528\u4e8eTeX\u6570\u5b66\u516c\u5f0f\u7684\u5c55\u793a\uff0c\u4f7f\u7528\u4e4b\u524d\u8981\u5148\u5728docs/\u91cc\u521b\u5efajavascripts\u76ee\u5f55\uff0c\u5e76\u5728\u76ee\u5f55\u4e2d\u653e\u7f6eextra.js \u4f9d\u8d56\u6a21\u5757: pymdownx.arithmatex","title":"17.1. \u4ecb\u7ecd"},{"location":"mkdocs/syntax/math_usage/","text":"\u884c\u5185\u5199\u6cd5\u67092\u79cd: $...$ \u548c \\(...\\) \u533a\u5757\u5199\u6cd5\u67093\u79cd: $$...$$ , \\[...\\] , \u548c \\begin{}...\\end{} \u5177\u4f53\u7528\u6cd5\u8be6\u89c1: https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference http://www.andy-roberts.net/writing/latex/mathematics_1 http://www.andy-roberts.net/writing/latex/mathematics_2 \u6b64\u5904\u4ec5\u4e3e\u4e2a\u4f8b\u5b50(\u56e0\u4e3abegin end\u65b9\u5f0f\u6211\u8fd8\u4e0d\u591f\u4e86\u89e3)\uff1a $$ p(x|y) = \\frac{p(y|x)p(x)}{p(y)} $$ \u6548\u679c p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)} $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$ \u6548\u679c p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)}","title":"17.3. \u7528\u6cd5"},{"location":"mkdocs/syntax/meta/","text":"\u4f9d\u8d56\u6a21\u5757\uff1ameta mkdocs\u652f\u6301(\u5b9e\u9645\u662fpython markdown\u652f\u6301)\u7684\u5143\u4fe1\u606f\u5185\u5bb9\uff0c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e3a\u5bf9\u5e94\u7684html\uff0c\u76ee\u524d\u652f\u6301\u4ee5\u4e0b4\u79cdmeta title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js \u6ce8\u610f: \u8981\u5199\u5728markdown\u6587\u6863\u7684\u6700\u4e0a\u65b9 \u5199\u5b8c\u540e\u8981\u52a0\u4e00\u4e2a\u7a7a\u884c \u4f1a\u88ab\u81ea\u52a8\u7ffb\u8bd1\u6210 <head> <meta name=\"description\" content=\"Nullam urna elit, malesuada eget finibus ut, ac tortor.\"> <title>Lorem ipsum dolor sit amet</title> </head> \u4ee5\u53ca<body>\u4e2d\u67d0\u4e2a\u4f4d\u7f6e\u4f1a\u770b\u5230<a href=\"/path/to/file/file.js\" title=\"file.js\" class=\"md-source-file\"> \u5176\u4e2dpath\u548csource\u7684\u6548\u679c:","title":"16. \u5143\u4fe1\u606f"},{"location":"mkdocs/syntax/nest_green_code/","text":"\u6548\u679c print \"Hello, world!\" print \"Hello, world!\" print \"Hello, world!\"","title":"20.9. \u7eff\u8272\u533a\u5757-\u4ee3\u7801"},{"location":"mkdocs/syntax/nest_greenred_code/","text":"\u6548\u679c print \"Hello, world!\" print \"Hello, our world!\" print \"Hello, my world!\" print \"Hello, our world!\"","title":"20.11. \u7eff\u63a5\u7ea2\u533a\u5757-\u4ee3\u7801"},{"location":"mkdocs/syntax/nest_list_code/","text":"\u4ee5\u4e0b3\u79cd\u6548\u679c\u76f8\u540c: \u4e00. \u4e0d\u7f29\u8fdb\uff0c\u65e0\u7a7a\u884c - list1 ```python text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u4e8c. \u7f29\u8fdb\uff0c\u65e0\u7a7a\u884c - list1 ```python text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u4e09. \u7f29\u8fdb\uff0c\u6709\u7a7a\u884c - list1 ```python text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c\u5747\u5982\u4e0b list1 text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 \u6ce8\u610f: \u4e0d\u80fd\u65e0\u7f29\u8fdb\u5374\u6709\u7a7a\u884c\uff0c\u5982\u4e0b\u9762\u8fd9\u6837\u662f\u6709\u95ee\u9898\u7684\uff0c\u53ef\u4ee5\u81ea\u884c\u6d4b\u8bd5: - list1 ```python text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ```","title":"20.6. \u5217\u8868-\u4ee3\u7801\u5757"},{"location":"mkdocs/syntax/nest_list_list/","text":"- aaa - bbb \u6548\u679c aaa bbb","title":"20.3. \u5217\u8868-\u5217\u8868"},{"location":"mkdocs/syntax/nest_list_list_quote/","text":"- aaa - bbb > ccc \u6548\u679c aaa bbb ccc","title":"20.13. \u5217\u8868-\u5217\u8868-\u5f15\u7528"},{"location":"mkdocs/syntax/nest_main/","text":"\u51e0\u4e4e\u6bcf\u79cd\u5177\u6709\u884c\u5185\u3001\u533a\u5757\u7684\u529f\u80fd\u6a21\u5757\u90fd\u80fd\u81ea\u8eab\u53ca\u76f8\u4e92\u4e4b\u95f4\u591a\u5c42\u5d4c\u5957\uff0c\u672c\u6587\u65e0\u6cd5\u4e00\u4e00\u9610\u8ff0\uff0c\u56e0\u6b64\u4ec5\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u8bf4\u660e","title":"20.1. \u4ecb\u7ecd"},{"location":"mkdocs/syntax/nest_note_code/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.superfences !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ```python text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. text1 = \"Hello, \" text2 = \"world!\" print text1 + text2","title":"20.5. \u6ce8\u89e3-\u4ee3\u7801\u5757"},{"location":"mkdocs/syntax/nest_note_list_quote/","text":"!!! note \"test\" - aaa > bbb \u6548\u679c test aaa bbb","title":"20.12. \u6ce8\u89e3-\u5217\u8868-\u5f15\u7528"},{"location":"mkdocs/syntax/nest_note_note/","text":"!!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u6548\u679c Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"20.2. \u6ce8\u89e3-\u6ce8\u89e3"},{"location":"mkdocs/syntax/nest_quote_code/","text":"> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod > nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor > massa, nec semper lorem quam in massa. > ```go import \"fmt\" func main() { fmt.Println(\"Hello, world\") } ``` \u6548\u679c Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. import \"fmt\" func main () { fmt . Println ( \"Hello, world\" ) } \u53ef\u4ee5\u770b\u51fa\uff0c\u7528>\u65f6\u5019\uff0c\u8981\u6bcf\u884c\u7684>\u5185\u5bb9\u7f29\u8fdb\u5bf9\u9f50\uff0c\u4e0d\u8fc7\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u7b2c\u4e00\u4e2a>\u5373\u53ef \u4f46\u8981\u6ce8\u610f, \u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u80fd\u6709\u7a7a\u884c\uff0c\u5982\u679c\u6709\u7a7a\u884c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u7ec8\u6b62\uff0c\u6bd4\u5982\uff1a > ```go import \"fmt\" func main() { fmt.Println(\"Hello, world\") fmt.Println(\"last\") } ``` \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u8981\u5728\u7a7a\u884c\u4e4b\u540e\u7684\u65b0\u884c\u518d\u7528>\u8868\u793a\u672a\u4e2d\u65ad\uff0c\u6bd4\u5982\uff1a > ```go import \"fmt\" func main() { fmt.Println(\"Hello, world\") > fmt.Println(\"last\") } ``` import \"fmt\" func main () { fmt . Println ( \"Hello, world\" ) fmt . Println ( \"last\" ) }","title":"20.7. \u5f15\u7528-\u4ee3\u7801\u5757"},{"location":"mkdocs/syntax/nest_quote_quote/","text":"> \u533a\u5757\u5f15\u7528 >> \u5d4c\u5957\u5f15\u7528 \u6548\u679c \u533a\u5757\u5f15\u7528 \u5d4c\u5957\u5f15\u7528","title":"20.4. \u5f15\u7528-\u5f15\u7528"},{"location":"mkdocs/syntax/nest_quote_quote_code/","text":"> aaa >> bbb >>> ```python text1 = \"Hello, \" text2 = \"world!\" print text1 + text2 ``` \u6548\u679c aaa bbb text1 = \"Hello, \" text2 = \"world!\" print text1 + text2","title":"20.14. \u5f15\u7528-\u5f15\u7528-\u4ee3\u7801"},{"location":"mkdocs/syntax/nest_red_code/","text":"\u6548\u679c print \"Hello, world!\" print \"Hello, world!\" print \"Hello, world!\"","title":"20.10. \u7ea2\u8272\u533a\u5757-\u4ee3\u7801"},{"location":"mkdocs/syntax/nest_yellow_code/","text":"\u6548\u679c print \"Hello, world!\" print \"Hello, world!\" print \"Hello, world!\"","title":"20.8. \u9ec4\u8272\u533a\u5757-\u4ee3\u7801"},{"location":"mkdocs/syntax/note_details/","text":"\u628a!!!\u6539\u6210???\uff0c\u6ce8\u610f\u6b64\u65f6\u6807\u9898\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u5426\u5219\u6837\u5f0f\u6709\u95ee\u9898 \u9002\u7528\u573a\u666f: \u6298\u53e0\u7279\u522b\u9002\u7528\u4e8eFAQ\uff0c\u5373\u6807\u9898\u91cc\u5199\u95ee\u9898\uff0c\u5185\u5bb9\u91cc\u5199\u7b54\u6848 \u4f9d\u8d56\u6a21\u5757: pymdownx.details ??? note \"\u6807\u9898\" \u5185\u5bb9 \u6548\u679c \u6807\u9898 \u5185\u5bb9 \u6ce8\u610f: \u6298\u53e0\u4e2d\u7684\u5185\u5bb9\u5728\u6298\u53e0\u672a\u6253\u5f00\u65f6\u5019\u901a\u8fc7ctrl-f\u662f\u641c\u7d22\u4e0d\u51fa\u6765\u7684\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u9875\u9762\u4e0a\u65b9\u7684Search\u680f\u91cc\u641c\u5230","title":"14.6. \u6298\u53e0"},{"location":"mkdocs/syntax/note_empty-title/","text":"!!! note \"\" \u5185\u5bb9 \u6548\u679c \u5185\u5bb9","title":"14.3. \u7a7a\u6807\u9898"},{"location":"mkdocs/syntax/note_full/","text":"!!! note \"\u6807\u9898\" \u5185\u5bb9 \u6548\u679c \u6807\u9898 \u5185\u5bb9","title":"14.2. \u5b8c\u6574\u683c\u5f0f"},{"location":"mkdocs/syntax/note_main/","text":"\u5199\u6ce8\u89e3\u4f7f\u7528\uff0c\u4f9d\u8d56\u6a21\u5757: admonition \u652f\u6301\u591a\u79cd\u6837\u5f0f\uff0c\u5982\u5e26\u6709\u6807\u9898\u3001\u65e0\u6807\u9898\u3001\u7a7a\u6807\u9898\uff0c\u8fd8\u652f\u6301\u6298\u53e0\u5f0f(\u5e38\u7528\u4e8eFAQ) \u652f\u6301\u591a\u79cd\u989c\u8272\u98ce\u683c\uff0c\u5305\u62ec\u8b66\u544a\u63d0\u793a\u3001\u9519\u8bef\u63d0\u793a\u3001\u6210\u529f\u63d0\u793a\u7b4911\u79cd\u98ce\u683c","title":"14.1. \u4ecb\u7ecd"},{"location":"mkdocs/syntax/note_nest/","text":"\u6ce8\u89e3\u6807\u9898\u548c\u5185\u5bb9\u652f\u6301\u591a\u79cd\u6837\u5f0f \u00b6 \u4f8b1. \u6807\u9898\u91cc\u4f7f\u7528\u659c\u4f53 !!! note \"*\u6807\u9898e*\" \u5185\u5bb9 \u6807\u9898 \u5185\u5bb9 \u4f8b2. \u5185\u5bb9\u91cc\u4f7f\u7528h1-h6 !!! note \"\u6807\u9898\" # h1 ## h2 ### h3 \u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757 \u00b6 \u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757 \u7ae0\u8282 \u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3 \u00b6 \u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3 \u7ae0\u8282","title":"14.8. \u5d4c\u5957"},{"location":"mkdocs/syntax/note_nest/#_1","text":"\u4f8b1. \u6807\u9898\u91cc\u4f7f\u7528\u659c\u4f53 !!! note \"*\u6807\u9898e*\" \u5185\u5bb9 \u6807\u9898 \u5185\u5bb9 \u4f8b2. \u5185\u5bb9\u91cc\u4f7f\u7528h1-h6 !!! note \"\u6807\u9898\" # h1 ## h2 ### h3","title":"\u6ce8\u89e3\u6807\u9898\u548c\u5185\u5bb9\u652f\u6301\u591a\u79cd\u6837\u5f0f"},{"location":"mkdocs/syntax/note_nest/#_2","text":"\u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757 \u7ae0\u8282","title":"\u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757"},{"location":"mkdocs/syntax/note_nest/#_3","text":"\u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3 \u7ae0\u8282","title":"\u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3"},{"location":"mkdocs/syntax/note_none-title/","text":"!!! note \u5185\u5bb9 \u6548\u679c Note \u5185\u5bb9 \u6ce8\u610f: \u65e0\u6807\u9898\u65f6\u7c7b\u578b\u9996\u5b57\u6bcd\u4f1a\u88ab\u5927\u5199\uff0c\u5982\u4e0a\u9762note\u88ab\u5927\u5199\u6210Note","title":"14.4. \u65e0\u6807\u9898"},{"location":"mkdocs/syntax/note_none-type/","text":"\u65e0\u7c7b\u578b\uff0c\u5219\u9ed8\u8ba4\u4e3anote \u6ce8\u610f\u8fd9\u4e2a\u65f6\u5019\u6807\u9898\u5fc5\u987b\u5199\u82f1\u6587\uff0c\u5e76\u4e14\u9996\u5b57\u6bcd\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6210\u5927\u5199: !!! title \u5185\u5bb9 \u76f8\u5f53\u4e8e !!! note \"Title\" \u5185\u5bb9 \u6548\u679c Title \u5185\u5bb9","title":"14.5. \u65e0\u7c7b\u578b"},{"location":"mkdocs/syntax/note_style/","text":"\u670911\u79cd\u6837\u5f0f\uff0c\u6bcf\u4e00\u79cd\u6837\u5f0f\u90fd\u652f\u6301\u591a\u79cd\u5173\u952e\u5b57\uff0c\u6bd4\u5982note\u53ef\u4ee5\u7528seealso\u66ff\u4ee3\uff0csummary\u53ef\u4ee5\u7528tldr\u66ff\u4ee3 !!! note \"note, seealso\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! summary \"summary, tldr\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! info \"info, todo\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! tip \"tip, hint, important\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! success \"success, check, done\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! question \"question, help, faq\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! warning \"warning, caution, attention\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! failure \"failure, fail, missing\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! danger \"danger, error\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! bug \"bug\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! quote \"quote, cite\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u6548\u679c note, seealso Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. summary, tldr Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. info, todo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. tip, hint, important Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. success, check, done Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor question, help, faq Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. warning, caution, attention Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. failure, fail, missing Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. danger, error Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. quote, cite Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"14.7. 11\u79cd\u989c\u8272\u6837\u5f0f"},{"location":"mkdocs/syntax/paragraph/","text":"\u4e00\u4e2a\u6bb5\u843d\u8868\u793a\u4e00\u4e2a\u8bed\u6cd5\u5757\uff0c\u6bcf\u4e2a\u8bed\u6cd5\u5757\u4e4b\u95f4\u8981\u6709\u7a7a\u884c\uff0c\u82e5\u60f3\u5728\u6bb5\u5185\u5f3a\u5236\u6362\u884c\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 \u4e24\u4e2a\u4ee5\u4e0a \u7a7a\u683c\u52a0\u4e0a\u56de\u8f66\u3002 \u5efa\u8bae: \u5982\u679c\u5199\u4e00\u4e2a\u8bed\u6cd5\uff0c\u6548\u679c\u548c\u60f3\u8c61\u7684\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u6324\u5728\u4e00\u884c\u5185\uff0c\u6216\u8005\u6ca1\u6709\u7f29\u8fdb\uff0c\u5219\u591a1\u30012\u4e2a\u6362\u884c\u8bd5\u8bd5","title":"3. \u6bb5\u843d"},{"location":"mkdocs/syntax/quote/","text":"\u5728\u6bb5\u843d\u7684\u6bcf\u884c\u6216\u8005\u53ea\u5728\u7b2c\u4e00\u884c\u4f7f\u7528\u7b26\u53f7 > \u8fd8\u53ef\u4f7f\u7528\u591a\u4e2a \u5d4c\u5957\u5f15\u7528 \uff0c\u5982\uff1a > \u533a\u5757\u5f15\u7528 \u6548\u679c\uff1a \u533a\u5757\u5f15\u7528","title":"4. \u5f15\u7528"},{"location":"mkdocs/syntax/symbol/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.smartsymbols \u7528\u6cd5 \u6548\u679c (tm) \u2122 (c) \u00a9 (r) \u00ae c/o \u2105 +/- \u00b1 --> \u2192 <-- \u2190 <--> \u2194 =/= \u2260 1/4 3/5 \u00bc \u2157 1st 2nd 3rd 1 st 2 nd 3 rd","title":"19. \u7279\u6b8a\u7b26\u53f7"},{"location":"mkdocs/syntax/table/","text":"\u793a\u4f8b \u00b6 | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | | :-- | :--: | --: | | A1 | B1 | C1 | | A2 | B2 | C2 | \u6548\u679c \u5b57\u6bb51 \u5b57\u6bb52 \u5b57\u6bb53 A1 B1 C1 A2 B2 C2 \u8be6\u89e3 \u00b6 \u81f3\u5c11\u75313\u884c\u7ec4\u6210 \u7b2c1\u884c\uff1a\u5b57\u6bb5\u540d | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u7b2c2\u884c\uff1a\b\u8bbe\u7f6e\u5bf9\u9f50 | :-- | :--: | --: | \u5206\u522b\u8868\u793a\u4e3a\u5de6\u5bf9\u9f50\uff0c\u5c45\u4e2d\u5bf9\u9f50\uff0c\u53c8\u5bf9\u9f50\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\u5bf9\u9f50\uff0c\u5373\u4e0d\u5199\u5192\u53f7\uff0c\u4f46\u8fd9\u6837\u4e0d\u597d\u7ef4\u62a4\uff0c\u56e0\u6b64\u5efa\u8bae\u90fd\u8bbe\u7f6e\u5bf9\u9f50 \u7b2c3\u884c\u5f00\u59cb\uff1a\u6b63\u6587 | \u5185\u5bb91 | \u5185\u5bb92 | \u5185\u5bb93 | \u7a7a\u683c\u4e0d\u53ef\u5ffd\u7565 |\u5b57\u6bb51|\u5b57\u6bb52|\u5b57\u6bb53| \u8fd9\u6837\u662f\u6709\u95ee\u9898\u7684\uff0c\u7a7a\u683c1\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u591a\u4e2a\uff0c\u4f46\u4e0d\u80fd\u4e0d\u5199 \u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684|\u53ef\u7701\u7565 | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837 \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 \u4e0d\u4ec5\u662f\u7b2c1\u884c\uff0c\u6bcf\u4e00\u884c\u90fd\u53ef\u4ee5\u8fd9\u4e48\u7701\u7565","title":"5. \u8868\u683c"},{"location":"mkdocs/syntax/table/#_1","text":"| \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | | :-- | :--: | --: | | A1 | B1 | C1 | | A2 | B2 | C2 | \u6548\u679c \u5b57\u6bb51 \u5b57\u6bb52 \u5b57\u6bb53 A1 B1 C1 A2 B2 C2","title":"\u793a\u4f8b"},{"location":"mkdocs/syntax/table/#_2","text":"\u81f3\u5c11\u75313\u884c\u7ec4\u6210 \u7b2c1\u884c\uff1a\u5b57\u6bb5\u540d | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u7b2c2\u884c\uff1a\b\u8bbe\u7f6e\u5bf9\u9f50 | :-- | :--: | --: | \u5206\u522b\u8868\u793a\u4e3a\u5de6\u5bf9\u9f50\uff0c\u5c45\u4e2d\u5bf9\u9f50\uff0c\u53c8\u5bf9\u9f50\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\u5bf9\u9f50\uff0c\u5373\u4e0d\u5199\u5192\u53f7\uff0c\u4f46\u8fd9\u6837\u4e0d\u597d\u7ef4\u62a4\uff0c\u56e0\u6b64\u5efa\u8bae\u90fd\u8bbe\u7f6e\u5bf9\u9f50 \u7b2c3\u884c\u5f00\u59cb\uff1a\u6b63\u6587 | \u5185\u5bb91 | \u5185\u5bb92 | \u5185\u5bb93 | \u7a7a\u683c\u4e0d\u53ef\u5ffd\u7565 |\u5b57\u6bb51|\u5b57\u6bb52|\u5b57\u6bb53| \u8fd9\u6837\u662f\u6709\u95ee\u9898\u7684\uff0c\u7a7a\u683c1\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u591a\u4e2a\uff0c\u4f46\u4e0d\u80fd\u4e0d\u5199 \u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684|\u53ef\u7701\u7565 | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837 \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 \u4e0d\u4ec5\u662f\u7b2c1\u884c\uff0c\u6bcf\u4e00\u884c\u90fd\u53ef\u4ee5\u8fd9\u4e48\u7701\u7565","title":"\u8be6\u89e3"},{"location":"mkdocs/view/bestpractice/","text":"\u5982\u679c\u5e0c\u671b\u81ea\u5df1\u6240\u5199\u7684markdown\u53ef\u4ee5\u517c\u5bb9\u5404\u4e2amarkdown\u7f16\u8f91\u5668\uff0c\u90a3\u4e48\u53ea\u9700\u4e86\u89e3markdown\u7684\u4f20\u7edf\u8bed\u6cd5\u5373\u53ef\uff0c\u8fd9\u91cc\u63a8\u8350\u4e00\u7bc7\u6587\u7ae0 Markdown\u57fa\u672c\u8bed\u6cd5 \u3002 \u5982\u679c\u60f3\u8ba9\u81ea\u5df1\u6240\u5199\u7684markdown\u53d1\u5e03\u5230web\u670d\u52a1\u5668\uff0c\u4f8b\u5982GitHub Pages\u3001\u81ea\u5df1\u642d\u5efa\u7684HTTP Server\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u672c\u6587\u6240\u4ecb\u7ecd\u7684\u8bed\u6cd5\uff0c\u4ee5\u5b9e\u73b0\u4e30\u5bcc\u591a\u6837\u7684\u6e32\u67d3\u6548\u679c\u3002 \u7b14\u8005\u5efa\u8bae\uff1a\u5c3d\u91cf\u4f7f\u7528\u4f20\u7edf\u8bed\u6cd5\uff0c\u53ea\u5728\u5fc5\u8981\u65f6\u5019\u624d\u4f7f\u7528\u672c\u6587\u4ecb\u7ecd\u7684\u8bed\u6cd5\u3002\u56e0\u4e3a\u6392\u7248\u7b80\u6d01\u3001\u6761\u7406\u6e05\u6670\u624d\u80fd\u5e26\u6765\u6700\u8212\u670d\u7684\u9605\u8bfb\u611f\u53d7\u3002","title":"4. \u6700\u4f73\u5b9e\u8df5"},{"location":"mkdocs/view/contact/","text":"E-mail\u5730\u5740: cyent@163.com","title":"5. \u8054\u7cfb\u65b9\u5f0f"},{"location":"mkdocs/view/statement/","text":"\u672c\u6587\u5927\u90e8\u5206\u5185\u5bb9\u5747\u662f\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1100%\u51c6\u786e\u3002 \u672c\u6587\u4e3b\u8981\u662f\u9610\u8ff0markdown\u8bed\u6cd5\uff0c\u56e0\u6b64\u5173\u4e8emkdocs-material\u7684\u9ad8\u7ea7\u914d\u7f6e\u3001python markdown\u548cpymdowx\u6a21\u5757\u6240\u652f\u6301\u7684markdown\u8bed\u6cd5\u4e0d\u5728\u672c\u6587\u9610\u8ff0\u8303\u56f4\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u5df1\u5230\u76f8\u5e94\u5b98\u7f51\u4e86\u89e3\uff0c\u5177\u4f53\u5982\u4e0b: mkdocs mkdocs-material python markdown pymdownx","title":"3. \u63d0\u524d\u8bf4\u660e"},{"location":"mkdocs/view/what/","text":"\u7b26\u5408google material ui\u89c4\u8303\u7684\u9759\u6001\u6587\u6863\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u4f7f\u7528markdown\u8fdb\u884c\u6587\u6863\u4e66\u5199 mkdocs python\u7f16\u5199\u7684markdown\u89e3\u91ca\u5668\u3001\u7f16\u8bd1\u5668\uff0c\u5e26\u6709\u672c\u5730cli\u5de5\u5177 \u81ea\u5e26\u57fa\u4e8eTornado\u7684\u5c0f\u578bhttp\u670d\u52a1\uff0c\u7528\u4e8e\u672c\u5730\u8c03\u8bd5 \u5185\u7f6e\u4e00\u952e\u5f0f\u53d1\u5e03\u81f3GitHub Pages \u5185\u7f6emkdocs\u98ce\u683c\u3001readthedocs\u98ce\u683c\u7684\u4e3b\u9898\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301\u8c03\u7528python\u6a21\u5757\u5b9e\u73b0\u8bed\u6cd5\u53ca\u6e32\u67d3\u7684\u6269\u5c55 mkdocs-material python\u6a21\u5757\uff0c\u7b26\u5408google material ui\u89c4\u8303\u7684mkdocs\u81ea\u5b9a\u4e49\u4e3b\u9898 \u9488\u5bf9\u7279\u5b9a\u8bed\u6cd5\u3001\u529f\u80fd\u505a\u4e86\u6e32\u67d3\u4f18\u5316 \u6839\u636e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u9875\u9762\u5c3a\u5bf8\u81ea\u52a8\u7f29\u653e\uff0c\u5bf9PC\u3001\u79fb\u52a8\u8bbe\u5907\u90fd\u53cb\u597d \u4e30\u5bcc\u7684\u9875\u9762\u914d\u8272\uff0c\u591a\u8fbe19\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u60ac\u505c\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u6700\u4f73\u5b9e\u8df5: \u5efa\u8bae\u4ec5\u4f7f\u7528 mkdocs-material \u5b98\u7f51\u652f\u6301\u7684\u8bed\u6cd5\u3001\u529f\u80fd\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6709\u6e32\u67d3\u65b9\u9762\u7684\u5f02\u5e38\uff0c\u9664\u975e\u81ea\u5df1\u5bf9mkdocs\u3001mkdocs-material\u3001html\u3001js\u3001css\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u672c\u6587\u6240\u6709\u9610\u8ff0\u7684\u8bed\u6cd5\u5747\u662fmkdocs-material\u5b98\u7f51\u63a8\u8350\u7684\u3002","title":"2. mkdocs-material\u4ecb\u7ecd"},{"location":"prometheus/dashboard/","text":"\u6536\u85cf\u4e00\u4e9bPrometheus\u7684dashboard\u9762\u677f \u00b6 \u7c7b \u578b dashboard\u7f16\u53f7 kubernetes-node 8919 cadvisor 315 kube-state-mertics 8588 nginx-ingress-controller 9614 blackbox-exporter 9965 redis 763","title":"dashboard\u6a21\u677f"},{"location":"prometheus/dashboard/#prometheusdashboard","text":"\u7c7b \u578b dashboard\u7f16\u53f7 kubernetes-node 8919 cadvisor 315 kube-state-mertics 8588 nginx-ingress-controller 9614 blackbox-exporter 9965 redis 763","title":"\u6536\u85cf\u4e00\u4e9bPrometheus\u7684dashboard\u9762\u677f"},{"location":"prometheus/prometheus-operator/","text":"\u4ecb\u7ecd \u00b6 \u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b Prometheus-Operator \u7684\u67b6\u6784\u56fe\uff1a \u4e0a\u56fe\u662f Prometheus-Operator \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u5404\u7ec4\u4ef6\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u5176\u4e2d Operator \u662f\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u63a7\u5236\u5668\uff0c\u4ed6\u4f1a\u53bb\u521b\u5efaPrometheus\u3001ServiceMonitor\u3001AlertManager \u4ee5\u53ca PrometheusRule 4\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\uff0c\u7136\u540e\u4f1a\u4e00\u76f4\u76d1\u63a7\u5e76\u7ef4\u6301\u8fd94\u4e2a\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002 Operator\uff1a\u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90\u6765\u90e8\u7f72\u548c\u7ba1\u7406 Prometheus Server\uff0c\u540c\u65f6\u76d1\u63a7\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u8d44\u6e90\u4e8b\u4ef6\u7684\u53d8\u5316\u6765\u505a\u76f8\u5e94\u7684\u5904\u7406\uff0c\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u63a7\u5236\u4e2d\u5fc3\u3002 Prometheus\uff1a\u58f0\u660e Prometheus \u8d44\u6e90\u5bf9\u8c61\u671f\u671b\u7684\u72b6\u6001\uff0cOperator \u786e\u4fdd\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u8fd0\u884c\u65f6\u4e00\u76f4\u4e0e\u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4\u3002 Prometheus Server\uff1aOperator \u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90 Prometheus \u7c7b\u578b\u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9\u800c\u90e8\u7f72\u7684 Prometheus Server \u96c6\u7fa4\uff0c\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u8d44\u6e90\u53ef\u4ee5\u770b\u4f5c\u662f\u7528\u6765\u7ba1\u7406 Prometheus Server \u96c6\u7fa4\u7684 StatefulSets \u8d44\u6e90\u3002 ServiceMonitor\uff1a\u58f0\u660e\u6307\u5b9a\u76d1\u63a7\u7684\u670d\u52a1\uff0c\u63cf\u8ff0\u4e86\u4e00\u7ec4\u88ab Prometheus \u76d1\u63a7\u7684\u76ee\u6807\u5217\u8868\uff0c\u5c31\u662f exporter \u7684\u62bd\u8c61\uff0c\u7528\u6765\u63d0\u4f9b metrics \u6570\u636e\u63a5\u53e3\u7684\u5de5\u5177\u3002\u8be5\u8d44\u6e90\u901a\u8fc7 Labels \u6765\u9009\u53d6\u5bf9\u5e94\u7684 Service Endpoint\uff0c\u8ba9 Prometheus Server \u901a\u8fc7\u9009\u53d6\u7684 Service \u6765\u83b7\u53d6 Metrics \u4fe1\u606f\u3002 Service\uff1a\u7b80\u5355\u7684\u8bf4\u5c31\u662f Prometheus \u76d1\u63a7\u7684\u5bf9\u8c61\u3002 Alertmanager\uff1a\u5b9a\u4e49 AlertManager \u8d44\u6e90\u5bf9\u8c61\u671f\u671b\u7684\u72b6\u6001\uff0cOperator \u786e\u4fdd\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u8fd0\u884c\u65f6\u4e00\u76f4\u4e0e\u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4\u3002 \u8fd9\u6837\u6211\u4eec\u8981\u5728\u96c6\u7fa4\u4e2d\u76d1\u63a7\u4ec0\u4e48\u6570\u636e\uff0c\u5c31\u53d8\u6210\u4e86\u76f4\u63a5\u53bb\u64cd\u4f5c Kubernetes \u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u662f\u4e0d\u662f\u65b9\u4fbf\u5f88\u591a\u4e86\u3002 \u5b89\u88c5 \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u5feb\u901f\u5b89\u88c5 Prometheus Operator\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 https://github.com/coreos/kube-prometheus \u9879\u76ee\u6765\u624b\u52a8\u5b89\u88c5\uff0c\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u624b\u52a8\u5b89\u88c5\u7684\u65b9\u5f0f\u53ef\u4ee5\u53bb\u4e86\u89e3\u66f4\u591a\u7684\u5b9e\u73b0\u7ec6\u8282\u3002 \u9996\u5148 clone \u9879\u76ee\u4ee3\u7801\uff1a $ git clone https://github.com/coreos/kube-prometheus.git $ cd manifests \u8fdb\u5165\u5230 manifests \u76ee\u5f55\u4e0b\u9762\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5b89\u88c5 setup \u76ee\u5f55\u4e0b\u9762\u7684 CRD \u548c Operator \u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl apply -f setup/ $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE prometheus-operator-6694b5cb64-z64ns 2/2 Running 0 114s $ kubectl get crd |grep coreos alertmanagers.monitoring.coreos.com 2020-04-10T07:00:12Z podmonitors.monitoring.coreos.com 2020-04-10T07:00:13Z prometheuses.monitoring.coreos.com 2020-04-10T07:00:14Z prometheusrules.monitoring.coreos.com 2020-04-10T07:00:15Z servicemonitors.monitoring.coreos.com 2020-04-10T07:00:16Z thanosrulers.monitoring.coreos.com 2020-04-10T07:00:17Z \u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a monitoring \u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u53ca\u76f8\u5173\u7684 CRD \u8d44\u6e90\u5bf9\u8c61\u58f0\u660e\u548c Prometheus Operator \u63a7\u5236\u5668\u3002\u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u8bb2\u89e3\u8fc7 CRD \u548c Operator \u7684\u4f7f\u7528\uff0c\u5f53\u6211\u4eec\u58f0\u660e\u5b8c CRD \u8fc7\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u81ea\u5b9a\u4e49\u8d44\u6e90\u6e05\u5355\u4e86\uff0c\u4f46\u662f\u8981\u8ba9\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u751f\u6548\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 Operator \u63a7\u5236\u5668\uff0c\u8fd9\u91cc\u6211\u4eec\u90fd\u5df2\u7ecf\u5b89\u88c5\u4e86\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6765\u7528 CRD \u521b\u5efa\u771f\u6b63\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002\u5176\u5b9e\u5728 manifests \u76ee\u5f55\u4e0b\u9762\u7684\u5c31\u662f\u6211\u4eec\u8981\u53bb\u521b\u5efa\u7684 Prometheus\u3001Alertmanager \u4ee5\u53ca\u5404\u79cd\u76d1\u63a7\u5bf9\u8c61\u7684\u8d44\u6e90\u6e05\u5355\u3002 \u6ca1\u6709\u7279\u6b8a\u7684\u5b9a\u5236\u9700\u6c42\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e00\u952e\u5b89\u88c5\uff1a $ kubectl apply -f . \u8fd9\u4f1a\u81ea\u52a8\u5b89\u88c5 node-exporter\u3001kube-state-metrics\u3001grafana\u3001prometheus-adapter \u4ee5\u53ca prometheus \u548c alertmanager \u7ec4\u4ef6\uff0c\u800c\u4e14 prometheus \u548c alertmanager \u8fd8\u662f\u591a\u526f\u672c\u7684\u3002 $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE alertmanager-main-0 2/2 Running 0 10m alertmanager-main-1 2/2 Running 0 10m alertmanager-main-2 2/2 Running 0 10m grafana-86b55cb79f-jpnmr 1/1 Running 0 9m53s kube-state-metrics-dbb85dfd5-hl2sn 3/3 Running 0 9m49s node-exporter-482tf 2/2 Running 0 95s node-exporter-9g2cv 2/2 Running 0 9m47s node-exporter-dxr2d 2/2 Running 0 9m47s node-exporter-h4f6c 2/2 Running 0 9m47s node-exporter-hxwqb 2/2 Running 0 9m47s node-exporter-lzdw2 2/2 Running 0 9m47s node-exporter-n2qj6 2/2 Running 0 9m47s prometheus-adapter-5cd5798d96-4r6lx 1/1 Running 0 9m40s prometheus-k8s-0 3/3 Running 0 9m27s prometheus-k8s-1 3/3 Running 1 9m25s prometheus-operator-6694b5cb64-z64ns 2/2 Running 0 18m $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main ClusterIP 10.111.28.173 <none> 9093/TCP 12m alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 12m grafana ClusterIP 10.99.62.32 <none> 3000/TCP 11m kube-state-metrics ClusterIP None <none> 8443/TCP,9443/TCP 11m node-exporter ClusterIP None <none> 9100/TCP 11m prometheus-adapter ClusterIP 10.100.102.211 <none> 443/TCP 11m prometheus-k8s ClusterIP 10.111.105.155 <none> 9090/TCP 11m prometheus-operated ClusterIP None <none> 9090/TCP 11m prometheus-operator ClusterIP None <none> 8443/TCP 20m \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u9488\u5bf9 grafana\u3001alertmanager \u548c prometheus \u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a ClusterIP \u7684 Service\uff0c\u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5916\u7f51\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u5e94\u7684 Ingress \u5bf9\u8c61\u6216\u8005\u4f7f\u7528 NodePort \u7c7b\u578b\u7684 Service\uff0c\u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 NodePort \u7c7b\u578b\u7684\u670d\u52a1\u5373\u53ef\uff0c\u7f16\u8f91 grafana\u3001alertmanager-main \u548c prometheus-k8s \u8fd93\u4e2a Service\uff0c\u5c06\u670d\u52a1\u7c7b\u578b\u66f4\u6539\u4e3a NodePort: # \u5c06 type: ClusterIP \u66f4\u6539\u4e3a type: NodePort $ kubectl edit svc grafana -n monitoring $ kubectl edit svc alertmanager-main -n monitoring $ kubectl edit svc prometheus-k8s -n monitoring $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main NodePort 10.111.28.173 <none> 9093:30733/TCP 18m grafana NodePort 10.99.62.32 <none> 3000:32150/TCP 17m prometheus-k8s NodePort 10.111.105.155 <none> 9090:30206/TCP 17m \u66f4\u6539\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 NodePort \u53bb\u8bbf\u95ee\u5bf9\u5e94\u7684\u670d\u52a1\u4e86\uff0c\u6bd4\u5982\u67e5\u770b prometheus \u7684\u670d\u52a1\u53d1\u73b0\u9875\u9762\uff1a \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u76d1\u63a7\u4e0a\u4e86\u5f88\u591a\u6307\u6807\u6570\u636e\u4e86\uff0c\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Prometheus \u662f\u4e24\u4e2a\u526f\u672c\uff0c\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7 Service \u53bb\u8bbf\u95ee\uff0c\u6309\u6b63\u5e38\u6765\u8bf4\u8bf7\u6c42\u662f\u4f1a\u53bb\u8f6e\u8be2\u8bbf\u95ee\u540e\u7aef\u7684\u4e24\u4e2a Prometheus \u5b9e\u4f8b\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd9\u91cc\u8bbf\u95ee\u7684\u65f6\u5019\u59cb\u7ec8\u662f\u8def\u7531\u5230\u540e\u7aef\u7684\u4e00\u4e2a\u5b9e\u4f8b\u4e0a\u53bb\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684 Service \u5728\u521b\u5efa\u7684\u65f6\u5019\u6dfb\u52a0\u4e86 sessionAffinity: ClientIP \u8fd9\u6837\u7684\u5c5e\u6027\uff0c\u4f1a\u6839\u636e ClientIP \u6765\u505a session \u4eb2\u548c\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u62c5\u5fc3\u8bf7\u6c42\u4f1a\u5230\u4e0d\u540c\u7684\u526f\u672c\u4e0a\u53bb\uff1a apiVersion: v1 kind: Service metadata: labels: prometheus: k8s name: prometheus-k8s namespace: monitoring spec: ports: - name: web port: 9090 targetPort: web selector: app: prometheus prometheus: k8s sessionAffinity: ClientIP \u914d\u7f6e \u00b6 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u76d1\u63a7\u6307\u6807\u5927\u90e8\u5206\u7684\u914d\u7f6e\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u53ea\u6709\u4e24\u4e09\u4e2a\u6ca1\u6709\u7ba1\u7406\u5230\u5bf9\u5e94\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u6bd4\u5982 kube-controller-manager \u548c kube-scheduler \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\u3002 \u8fd9\u5176\u5b9e\u5c31\u548c ServiceMonitor \u7684\u5b9a\u4e49\u6709\u5173\u7cfb\u4e86\uff0c\u6211\u4eec\u5148\u6765\u67e5\u770b\u4e0b kube-scheduler \u7ec4\u4ef6\u5bf9\u5e94\u7684 ServiceMonitor \u8d44\u6e90\u7684\u5b9a\u4e49\uff0c manifests/prometheus-serviceMonitorKubeScheduler.yaml \uff1a apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: k8s-app: kube-scheduler name: kube-scheduler namespace: monitoring spec: endpoints: - interval: 30s # \u6bcf30s\u83b7\u53d6\u4e00\u6b21\u4fe1\u606f port: http-metrics # \u5bf9\u5e94 service \u7684\u7aef\u53e3\u540d jobLabel: k8s-app namespaceSelector: # \u8868\u793a\u53bb\u5339\u914d\u67d0\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u7684service\uff0c\u5982\u679c\u60f3\u4ece\u6240\u6709\u7684namespace\u4e2d\u5339\u914d\u7528any: true matchNames: - kube-system selector: # \u5339\u914d\u7684 Service \u7684 labels\uff0c\u5982\u679c\u4f7f\u7528 mathLabels\uff0c\u5219\u4e0b\u9762\u7684\u6240\u6709\u6807\u7b7e\u90fd\u5339\u914d\u65f6\u624d\u4f1a\u5339\u914d\u8be5 service\uff0c\u5982\u679c\u4f7f\u7528 matchExpressions\uff0c\u5219\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u6807\u7b7e\u7684 service \u90fd\u4f1a\u88ab\u9009\u62e9 matchLabels: app.kubernetes.io/name: kube-scheduler \u4e0a\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684 ServiceMonitor \u8d44\u6e90\u5bf9\u8c61\u7684\u58f0\u660e\u65b9\u5f0f\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 selector.matchLabels \u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5339\u914d\u5177\u6709 app.kubernetes.io/name: kube-scheduler \u8fd9\u6837\u7684 Service\uff0c\u4f46\u662f\u6211\u4eec\u7cfb\u7edf\u4e2d\u6839\u672c\u5c31\u6ca1\u6709\u5bf9\u5e94\u7684 Service\uff1a $ kubectl get svc -n kube-system -l app.kubernetes.io/name=kube-scheduler No resources found in kube-system namespace. \u6240\u4ee5\u6211\u4eec\u9700\u8981\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u624d\u80fd\u6838 ServiceMonitor \u8fdb\u884c\u5173\u8054\uff1a(prometheus-kubeSchedulerService.yaml) apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-scheduler labels: app.kubernetes.io/name: kube-scheduler spec: selector: component: kube-scheduler ports: - name: http-metrics port: 10251 targetPort: 10251","title":"Prometheus operator"},{"location":"prometheus/prometheus-operator/#_1","text":"\u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e0b Prometheus-Operator \u7684\u67b6\u6784\u56fe\uff1a \u4e0a\u56fe\u662f Prometheus-Operator \u5b98\u65b9\u63d0\u4f9b\u7684\u67b6\u6784\u56fe\uff0c\u5404\u7ec4\u4ef6\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fd0\u884c\u5728 Kubernetes \u96c6\u7fa4\u4e2d\uff0c\u5176\u4e2d Operator \u662f\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u63a7\u5236\u5668\uff0c\u4ed6\u4f1a\u53bb\u521b\u5efaPrometheus\u3001ServiceMonitor\u3001AlertManager \u4ee5\u53ca PrometheusRule 4\u4e2a CRD \u8d44\u6e90\u5bf9\u8c61\uff0c\u7136\u540e\u4f1a\u4e00\u76f4\u76d1\u63a7\u5e76\u7ef4\u6301\u8fd94\u4e2a\u8d44\u6e90\u5bf9\u8c61\u7684\u72b6\u6001\u3002 Operator\uff1a\u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90\u6765\u90e8\u7f72\u548c\u7ba1\u7406 Prometheus Server\uff0c\u540c\u65f6\u76d1\u63a7\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u8d44\u6e90\u4e8b\u4ef6\u7684\u53d8\u5316\u6765\u505a\u76f8\u5e94\u7684\u5904\u7406\uff0c\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u63a7\u5236\u4e2d\u5fc3\u3002 Prometheus\uff1a\u58f0\u660e Prometheus \u8d44\u6e90\u5bf9\u8c61\u671f\u671b\u7684\u72b6\u6001\uff0cOperator \u786e\u4fdd\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u8fd0\u884c\u65f6\u4e00\u76f4\u4e0e\u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4\u3002 Prometheus Server\uff1aOperator \u6839\u636e\u81ea\u5b9a\u4e49\u8d44\u6e90 Prometheus \u7c7b\u578b\u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9\u800c\u90e8\u7f72\u7684 Prometheus Server \u96c6\u7fa4\uff0c\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u8d44\u6e90\u53ef\u4ee5\u770b\u4f5c\u662f\u7528\u6765\u7ba1\u7406 Prometheus Server \u96c6\u7fa4\u7684 StatefulSets \u8d44\u6e90\u3002 ServiceMonitor\uff1a\u58f0\u660e\u6307\u5b9a\u76d1\u63a7\u7684\u670d\u52a1\uff0c\u63cf\u8ff0\u4e86\u4e00\u7ec4\u88ab Prometheus \u76d1\u63a7\u7684\u76ee\u6807\u5217\u8868\uff0c\u5c31\u662f exporter \u7684\u62bd\u8c61\uff0c\u7528\u6765\u63d0\u4f9b metrics \u6570\u636e\u63a5\u53e3\u7684\u5de5\u5177\u3002\u8be5\u8d44\u6e90\u901a\u8fc7 Labels \u6765\u9009\u53d6\u5bf9\u5e94\u7684 Service Endpoint\uff0c\u8ba9 Prometheus Server \u901a\u8fc7\u9009\u53d6\u7684 Service \u6765\u83b7\u53d6 Metrics \u4fe1\u606f\u3002 Service\uff1a\u7b80\u5355\u7684\u8bf4\u5c31\u662f Prometheus \u76d1\u63a7\u7684\u5bf9\u8c61\u3002 Alertmanager\uff1a\u5b9a\u4e49 AlertManager \u8d44\u6e90\u5bf9\u8c61\u671f\u671b\u7684\u72b6\u6001\uff0cOperator \u786e\u4fdd\u8fd9\u4e2a\u8d44\u6e90\u5bf9\u8c61\u8fd0\u884c\u65f6\u4e00\u76f4\u4e0e\u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4\u3002 \u8fd9\u6837\u6211\u4eec\u8981\u5728\u96c6\u7fa4\u4e2d\u76d1\u63a7\u4ec0\u4e48\u6570\u636e\uff0c\u5c31\u53d8\u6210\u4e86\u76f4\u63a5\u53bb\u64cd\u4f5c Kubernetes \u96c6\u7fa4\u7684\u8d44\u6e90\u5bf9\u8c61\u4e86\uff0c\u662f\u4e0d\u662f\u65b9\u4fbf\u5f88\u591a\u4e86\u3002","title":"\u4ecb\u7ecd"},{"location":"prometheus/prometheus-operator/#_2","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u5feb\u901f\u5b89\u88c5 Prometheus Operator\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 https://github.com/coreos/kube-prometheus \u9879\u76ee\u6765\u624b\u52a8\u5b89\u88c5\uff0c\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u624b\u52a8\u5b89\u88c5\u7684\u65b9\u5f0f\u53ef\u4ee5\u53bb\u4e86\u89e3\u66f4\u591a\u7684\u5b9e\u73b0\u7ec6\u8282\u3002 \u9996\u5148 clone \u9879\u76ee\u4ee3\u7801\uff1a $ git clone https://github.com/coreos/kube-prometheus.git $ cd manifests \u8fdb\u5165\u5230 manifests \u76ee\u5f55\u4e0b\u9762\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5b89\u88c5 setup \u76ee\u5f55\u4e0b\u9762\u7684 CRD \u548c Operator \u8d44\u6e90\u5bf9\u8c61\uff1a $ kubectl apply -f setup/ $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE prometheus-operator-6694b5cb64-z64ns 2/2 Running 0 114s $ kubectl get crd |grep coreos alertmanagers.monitoring.coreos.com 2020-04-10T07:00:12Z podmonitors.monitoring.coreos.com 2020-04-10T07:00:13Z prometheuses.monitoring.coreos.com 2020-04-10T07:00:14Z prometheusrules.monitoring.coreos.com 2020-04-10T07:00:15Z servicemonitors.monitoring.coreos.com 2020-04-10T07:00:16Z thanosrulers.monitoring.coreos.com 2020-04-10T07:00:17Z \u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a monitoring \u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u53ca\u76f8\u5173\u7684 CRD \u8d44\u6e90\u5bf9\u8c61\u58f0\u660e\u548c Prometheus Operator \u63a7\u5236\u5668\u3002\u524d\u9762\u7ae0\u8282\u4e2d\u6211\u4eec\u8bb2\u89e3\u8fc7 CRD \u548c Operator \u7684\u4f7f\u7528\uff0c\u5f53\u6211\u4eec\u58f0\u660e\u5b8c CRD \u8fc7\u540e\uff0c\u5c31\u53ef\u4ee5\u6765\u81ea\u5b9a\u4e49\u8d44\u6e90\u6e05\u5355\u4e86\uff0c\u4f46\u662f\u8981\u8ba9\u6211\u4eec\u58f0\u660e\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u751f\u6548\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 Operator \u63a7\u5236\u5668\uff0c\u8fd9\u91cc\u6211\u4eec\u90fd\u5df2\u7ecf\u5b89\u88c5\u4e86\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6765\u7528 CRD \u521b\u5efa\u771f\u6b63\u7684\u81ea\u5b9a\u4e49\u8d44\u6e90\u5bf9\u8c61\u4e86\u3002\u5176\u5b9e\u5728 manifests \u76ee\u5f55\u4e0b\u9762\u7684\u5c31\u662f\u6211\u4eec\u8981\u53bb\u521b\u5efa\u7684 Prometheus\u3001Alertmanager \u4ee5\u53ca\u5404\u79cd\u76d1\u63a7\u5bf9\u8c61\u7684\u8d44\u6e90\u6e05\u5355\u3002 \u6ca1\u6709\u7279\u6b8a\u7684\u5b9a\u5236\u9700\u6c42\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e00\u952e\u5b89\u88c5\uff1a $ kubectl apply -f . \u8fd9\u4f1a\u81ea\u52a8\u5b89\u88c5 node-exporter\u3001kube-state-metrics\u3001grafana\u3001prometheus-adapter \u4ee5\u53ca prometheus \u548c alertmanager \u7ec4\u4ef6\uff0c\u800c\u4e14 prometheus \u548c alertmanager \u8fd8\u662f\u591a\u526f\u672c\u7684\u3002 $ kubectl get pods -n monitoring NAME READY STATUS RESTARTS AGE alertmanager-main-0 2/2 Running 0 10m alertmanager-main-1 2/2 Running 0 10m alertmanager-main-2 2/2 Running 0 10m grafana-86b55cb79f-jpnmr 1/1 Running 0 9m53s kube-state-metrics-dbb85dfd5-hl2sn 3/3 Running 0 9m49s node-exporter-482tf 2/2 Running 0 95s node-exporter-9g2cv 2/2 Running 0 9m47s node-exporter-dxr2d 2/2 Running 0 9m47s node-exporter-h4f6c 2/2 Running 0 9m47s node-exporter-hxwqb 2/2 Running 0 9m47s node-exporter-lzdw2 2/2 Running 0 9m47s node-exporter-n2qj6 2/2 Running 0 9m47s prometheus-adapter-5cd5798d96-4r6lx 1/1 Running 0 9m40s prometheus-k8s-0 3/3 Running 0 9m27s prometheus-k8s-1 3/3 Running 1 9m25s prometheus-operator-6694b5cb64-z64ns 2/2 Running 0 18m $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main ClusterIP 10.111.28.173 <none> 9093/TCP 12m alertmanager-operated ClusterIP None <none> 9093/TCP,9094/TCP,9094/UDP 12m grafana ClusterIP 10.99.62.32 <none> 3000/TCP 11m kube-state-metrics ClusterIP None <none> 8443/TCP,9443/TCP 11m node-exporter ClusterIP None <none> 9100/TCP 11m prometheus-adapter ClusterIP 10.100.102.211 <none> 443/TCP 11m prometheus-k8s ClusterIP 10.111.105.155 <none> 9090/TCP 11m prometheus-operated ClusterIP None <none> 9090/TCP 11m prometheus-operator ClusterIP None <none> 8443/TCP 20m \u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u9488\u5bf9 grafana\u3001alertmanager \u548c prometheus \u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a ClusterIP \u7684 Service\uff0c\u5f53\u7136\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u5916\u7f51\u8bbf\u95ee\u8fd9\u4e24\u4e2a\u670d\u52a1\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u5e94\u7684 Ingress \u5bf9\u8c61\u6216\u8005\u4f7f\u7528 NodePort \u7c7b\u578b\u7684 Service\uff0c\u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 NodePort \u7c7b\u578b\u7684\u670d\u52a1\u5373\u53ef\uff0c\u7f16\u8f91 grafana\u3001alertmanager-main \u548c prometheus-k8s \u8fd93\u4e2a Service\uff0c\u5c06\u670d\u52a1\u7c7b\u578b\u66f4\u6539\u4e3a NodePort: # \u5c06 type: ClusterIP \u66f4\u6539\u4e3a type: NodePort $ kubectl edit svc grafana -n monitoring $ kubectl edit svc alertmanager-main -n monitoring $ kubectl edit svc prometheus-k8s -n monitoring $ kubectl get svc -n monitoring NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE alertmanager-main NodePort 10.111.28.173 <none> 9093:30733/TCP 18m grafana NodePort 10.99.62.32 <none> 3000:32150/TCP 17m prometheus-k8s NodePort 10.111.105.155 <none> 9090:30206/TCP 17m \u66f4\u6539\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 NodePort \u53bb\u8bbf\u95ee\u5bf9\u5e94\u7684\u670d\u52a1\u4e86\uff0c\u6bd4\u5982\u67e5\u770b prometheus \u7684\u670d\u52a1\u53d1\u73b0\u9875\u9762\uff1a \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u76d1\u63a7\u4e0a\u4e86\u5f88\u591a\u6307\u6807\u6570\u636e\u4e86\uff0c\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u5230 Prometheus \u662f\u4e24\u4e2a\u526f\u672c\uff0c\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7 Service \u53bb\u8bbf\u95ee\uff0c\u6309\u6b63\u5e38\u6765\u8bf4\u8bf7\u6c42\u662f\u4f1a\u53bb\u8f6e\u8be2\u8bbf\u95ee\u540e\u7aef\u7684\u4e24\u4e2a Prometheus \u5b9e\u4f8b\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd9\u91cc\u8bbf\u95ee\u7684\u65f6\u5019\u59cb\u7ec8\u662f\u8def\u7531\u5230\u540e\u7aef\u7684\u4e00\u4e2a\u5b9e\u4f8b\u4e0a\u53bb\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684 Service \u5728\u521b\u5efa\u7684\u65f6\u5019\u6dfb\u52a0\u4e86 sessionAffinity: ClientIP \u8fd9\u6837\u7684\u5c5e\u6027\uff0c\u4f1a\u6839\u636e ClientIP \u6765\u505a session \u4eb2\u548c\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u62c5\u5fc3\u8bf7\u6c42\u4f1a\u5230\u4e0d\u540c\u7684\u526f\u672c\u4e0a\u53bb\uff1a apiVersion: v1 kind: Service metadata: labels: prometheus: k8s name: prometheus-k8s namespace: monitoring spec: ports: - name: web port: 9090 targetPort: web selector: app: prometheus prometheus: k8s sessionAffinity: ClientIP","title":"\u5b89\u88c5"},{"location":"prometheus/prometheus-operator/#_3","text":"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684\u76d1\u63a7\u6307\u6807\u5927\u90e8\u5206\u7684\u914d\u7f6e\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u53ea\u6709\u4e24\u4e09\u4e2a\u6ca1\u6709\u7ba1\u7406\u5230\u5bf9\u5e94\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u6bd4\u5982 kube-controller-manager \u548c kube-scheduler \u8fd9\u4e24\u4e2a\u7cfb\u7edf\u7ec4\u4ef6\u3002 \u8fd9\u5176\u5b9e\u5c31\u548c ServiceMonitor \u7684\u5b9a\u4e49\u6709\u5173\u7cfb\u4e86\uff0c\u6211\u4eec\u5148\u6765\u67e5\u770b\u4e0b kube-scheduler \u7ec4\u4ef6\u5bf9\u5e94\u7684 ServiceMonitor \u8d44\u6e90\u7684\u5b9a\u4e49\uff0c manifests/prometheus-serviceMonitorKubeScheduler.yaml \uff1a apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: k8s-app: kube-scheduler name: kube-scheduler namespace: monitoring spec: endpoints: - interval: 30s # \u6bcf30s\u83b7\u53d6\u4e00\u6b21\u4fe1\u606f port: http-metrics # \u5bf9\u5e94 service \u7684\u7aef\u53e3\u540d jobLabel: k8s-app namespaceSelector: # \u8868\u793a\u53bb\u5339\u914d\u67d0\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u7684service\uff0c\u5982\u679c\u60f3\u4ece\u6240\u6709\u7684namespace\u4e2d\u5339\u914d\u7528any: true matchNames: - kube-system selector: # \u5339\u914d\u7684 Service \u7684 labels\uff0c\u5982\u679c\u4f7f\u7528 mathLabels\uff0c\u5219\u4e0b\u9762\u7684\u6240\u6709\u6807\u7b7e\u90fd\u5339\u914d\u65f6\u624d\u4f1a\u5339\u914d\u8be5 service\uff0c\u5982\u679c\u4f7f\u7528 matchExpressions\uff0c\u5219\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u6807\u7b7e\u7684 service \u90fd\u4f1a\u88ab\u9009\u62e9 matchLabels: app.kubernetes.io/name: kube-scheduler \u4e0a\u9762\u662f\u4e00\u4e2a\u5178\u578b\u7684 ServiceMonitor \u8d44\u6e90\u5bf9\u8c61\u7684\u58f0\u660e\u65b9\u5f0f\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 selector.matchLabels \u5728 kube-system \u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u5339\u914d\u5177\u6709 app.kubernetes.io/name: kube-scheduler \u8fd9\u6837\u7684 Service\uff0c\u4f46\u662f\u6211\u4eec\u7cfb\u7edf\u4e2d\u6839\u672c\u5c31\u6ca1\u6709\u5bf9\u5e94\u7684 Service\uff1a $ kubectl get svc -n kube-system -l app.kubernetes.io/name=kube-scheduler No resources found in kube-system namespace. \u6240\u4ee5\u6211\u4eec\u9700\u8981\u53bb\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684 Service \u5bf9\u8c61\uff0c\u624d\u80fd\u6838 ServiceMonitor \u8fdb\u884c\u5173\u8054\uff1a(prometheus-kubeSchedulerService.yaml) apiVersion: v1 kind: Service metadata: namespace: kube-system name: kube-scheduler labels: app.kubernetes.io/name: kube-scheduler spec: selector: component: kube-scheduler ports: - name: http-metrics port: 10251 targetPort: 10251","title":"\u914d\u7f6e"},{"location":"prometheus/prometheus/","text":"What is Prometheus Monitoring? \u00b6 Prometheus\u662f\u4e00\u6b3e\u65f6\u5e8f\uff08time series\uff09\u6570\u636e\u5e93\uff1b\u4f46\u5b83\u7684\u529f\u80fd\u5374\u5e76\u975e\u6b62\u6b65\u4e8eTSDB\uff0c\u800c\u662f\u4e00\u6b3e\u8bbe\u8ba1\u7528\u4e8e\u8fdb\u884c\u76ee\u6807\uff08Target\uff09\u76d1\u63a7\u7684\u5173\u952e\u7ec4\u4ef6\uff1b \u7ed3\u5408\u751f\u6001\u7cfb\u7edf\u5185\u7684\u5176\u5b83\u7ec4\u4ef6\uff0c\u4f8b\u5982pushgateway\u3001altermanager\u548cgrafana\u7b49\uff0c\u53ef\u6784\u6210\u4e00\u4e2a\u5b8c\u6574\u7684IT\u76d1\u63a7\u7cfb\u7edf\uff1b \u65f6\u5e8f\u6570\u636e\u7b80\u4ecb \u00b6 \u65f6\u5e8f\u6570\u636e\uff0c\u662f\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u901a\u8fc7\u91cd\u590d\u6d4b\u91cf\uff08measurement\uff09\u800c\u83b7\u5f97\u7684\u89c2\u6d4b\u503c\u7684\u96c6\u5408\uff1b\u5c06\u8fd9\u4e9b\u89c2\u6d4b\u503c\u7ed8\u5236\u4e8e\u56fe\u5f62\u4e4b\u4e0a\uff0c\u5b83\u4f1a\u6709\u4e00\u4e2a\u6570\u636e\u8f74\u548c\u65f6\u95f4\u8f74\uff1b \u670d\u52a1\u5668\u6307\u6807\u6570\u636e\u3001\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u76d1\u63a7\u6570\u636e\u3001\u7f51\u7edc\u6570\u636e\u7b49\uff0c\u4e5f\u90fd\u662f\u65f6\u5e8f\u6570\u636e\uff1b What does Prometheus do? \u00b6 Prometheus\u57fa\u4e8eHTTP call\uff0c\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u7f51\u7edc\u7aef\u70b9\uff08endpoint\uff09\u4e0a\u5468\u671f\u6027\u83b7\u53d6\u6307\u6807\u6570\u636e Exporters Instrumentation Pushgateway Pull and Push \u00b6 Prometheus\u540c\u5176\u5b83TSDB\u76f8\u6bd4\u53c8\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u7279\u6548\uff1a\u5b83\u4e3b\u52a8\u4ece\u5404Target\u4e0a\" \u62c9\u53d6\uff08pull\uff09 \"\u6570\u636e,\u800c\u975e\u7b49\u5f85\u88ab\u76d1\u63a7\u7aef\u7684\" \u63a8\u9001\uff08push\uff09 \"\uff1b \u4e24\u4e2a\u65b9\u5f0f\u5404\u6709\u4f18\u52a3\uff0c\u5176\u4e2dpull\u6a21\u578b\u7684\u4f18\u52bf\u5728\u4e8e: - \u96c6\u4e2d\u63a7\u5236\uff1a\u6709\u5229\u4e8e\u5c06\u914d\u7f6e\u96c6\u5728Prometheus Server\u4e0a\u5b8c\u6210\uff0c\u5305\u62ec\u6307\u6807\u53ca\u624d\u53bb\u901f\u7387\u7b49\uff1b - Prometheus\u7684\u6839\u672c\u76ee\u6807\u5728\u4e8e\u6536\u96c6Target\u4e0a\u9884\u5148\u5b8c\u6210\u805a\u5408\u7684\u805a\u5408\u578b\u6570\u636e\uff0c\u800c\u975e\u4e00\u6b3e\u7531\u4e8b\u4ef6\u9a71\u52a8\u7684\u5b58\u50a8\u7cfb\u7edf\uff1b Prometheus\u7684\u751f\u6001\u7ec4\u4ef6 \u00b6 Prometheus\u751f\u6001\u5708\u4e2d\u5305\u542b\u4e86\u591a\u4e2a\u7ec4\u4ef6\uff0c\u5176\u4e2d\u90e8\u5206\u7ec4\u4ef6\u53ef\u9009 Prometheus Server\uff1a\u6536\u96c6\u548c\u5b58\u50a8\u4e8b\u4ef6\u5e8f\u5217\u548c\u6570\u636e\uff1b Client Library\uff1a \u5ba2\u6237\u7aef\u5e93\uff0c\u76ee\u7684\u5728\u4e8e\u4e3a\u90a3\u4e9b\u671f\u671b\u539f\u751f\u63d0\u4f9bInstrumentation\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4fbf\u6377\u7684\u5f00\u53d1\u9014\u5f84\uff1b Push Gateway\uff1a \u63a5\u6536\u90a3\u4e9b\u901a\u5e38\u7531\u77ed\u671f\u4f5c\u4e1a\u751f\u6210\u7684\u6307\u6807\u6570\u636e\u7684\u7f51\u5173\uff0c\u5e76\u652f\u6301\u6709Prometheus Server\u8fdb\u884c\u6307\u6807\u62c9\u53d6\u64cd\u4f5c\uff1b Exporters\uff1a\u7528\u4e8e\u66b4\u9732\u73b0\u6709\u5e94\u7528\u7a0b\u5e8f\u6216\u670d\u52a1(\u4e0d\u652f\u6301Instrumentation)\u7684\u6307\u6807\u7ed9Prometheus Server\uff1b Alertmanager\uff1a\u4ecePrometheus Server\u63a5\u6536\u5230\"\u544a\u8b66\u901a\u77e5\"\u540e\uff0c\u901a\u8fc7\u53bb\u91cd\u3001\u5206\u7ec4\u3001\u8def\u7531\u7b49\u9884\u5904\u7406\u529f\u80fd\u540e\u4ee5\u9ad8\u6548\u5411\u7528\u6237\u5b8c\u6210\u544a\u8b66\u4fe1\u606f\u53d1\u9001\uff1b Data Visualization\uff1aPrometheus Web UI(Prometheus Server\u5185\u5efa)\uff0c\u53caGrafana\u7b49\uff1b Service Discovery\uff1a\u52a8\u6001\u53d1\u73b0\u5f85\u76d1\u63a7\u7684Target\uff0c\u4ece\u800c\u5b8c\u6210\u76d1\u63a7\u914d\u7f6e\u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u5728\u5bb9\u5668\u5316\u73af\u5883\u4e2d\u5c24\u4e3a\u6709\u7528\uff1b\u8be5\u7ec4\u4ef6\u76ee\u524d\u7531Prometheus Server\u5185\u5efa\u652f\u6301\uff1b Prometheus\u6570\u636e\u6a21\u578b \u00b6 Prometheus\u4ec5\u7528\u4e8e\u4ee5\"\u952e\u503c\"\u5f62\u5f0f\u5b58\u50a8\u65f6\u5e8f\u5f0f\u7684\u805a\u5408\u6570\u636e\uff0c\u5b83\u5e76\u4e0d\u652f\u6301\u5b58\u50a8\u6587\u672c\u4fe1\u606f\uff1b \u5176\u4e2d\u7684\"\u952e\"\u79f0\u4e3a\u6307\u6807\uff08Metric\uff09\uff0c\u5b83\u901a\u5e38\u610f\u5473\u7740CPU\u901f\u7387\u3001\u5185\u5b58\u4f7f\u7528\u7387\u6216\u5206\u533a\u7a7a\u95f2\u6bd4\u4f8b\u7b49\uff1b \u540c\u4e00\u6307\u6807\u53ef\u80fd\u4f1a\u9002\u914d\u5230\u591a\u4e2a\u76ee\u6807\u6216\u8bbe\u5907\uff0c\u56e0\u800c\u5b83\u4f7f\u7528\"\u6807\u7b7e\"\u4f5c\u4e3a\u5143\u6570\u636e\uff0c\u4ece\u800c\u4e3aMetric\u6dfb\u52a0\u66f4\u591a\u7684\u4fe1\u606f\u63cf\u8ff0\u7ef4\u5ea6\uff1b \u8fd9\u4e9b\u6807\u7b7e\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u8fc7\u6ee4\u5668\u8fdb\u884c\u6307\u6807\u8fc7\u6ee4\u53ca\u805a\u5408\u8fd0\u7b97\uff1b \u6307\u6807\u7c7b\u578b\uff08Metric Types\uff09 \u00b6 Prometheus\u4f7f\u75284\u79cd\u65b9\u6cd5\u6765\u63cf\u8ff0\u76d1\u89c6\u7684\u6307\u6807\uff1a Counter\uff1a\u8ba1\u6570\u5668\uff0c\u7528\u4e8e\u4fdd\u5b58\u5355\u8c03\u9012\u589e\u578b\u7684\u6570\u636e\uff0c\u4f8b\u5982\u7ad9\u70b9\u8bbf\u95ee\u6b21\u6570\u7b49\uff1b\u4e0d\u80fd\u4e3a\u8d1f\u503c\uff0c\u4e5f\u4e0d\u652f\u6301\u51cf\u5c11\uff0c\u4f46\u53ef\u4ee5\u91cd\u7f6e\u56de0\uff1b Gauge\uff1a\u4eea\u8868\u76d8\uff0c\u7528\u4e8e\u5b58\u50a8\u6709\u7740\u8d77\u4f0f\u7279\u5f81\u7684\u6307\u6807\u6570\u636e\uff0c\u4f8b\u5982\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u7b49\uff1b Gauge Gauge\u662fCounter\u7684\u8d85\u96c6\uff1b\u4f46\u5b58\u5728\u6307\u6807\u6570\u636e\u4e22\u5931\u7684\u53ef\u80fd\u6027\u65f6\uff0cCounter\u80fd\u8ba9\u7528\u6237\u786e\u5207\u4e86\u89e3\u6307\u6807\u968f\u65f6\u95f4\u7684\u53d8\u5316\u72b6\u6001\uff0c\u800cGauge\u5219\u53ef\u80fd\u968f\u65f6\u95f4\u6d41\u901d\u800c\u7cbe\u51c6\u5ea6\u8d8a\u6765\u8d8a\u4f4e\uff1b Histogram\uff1a\u76f4\u65b9\u56fe\uff0c\u5b83\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u5bf9\u6570\u636e\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u5c06\u5176\u8fdb\u5165\u53ef\u914d\u7f6e\u7684bucket\u4e4b\u4e2d\uff1bHistogram\u80fd\u591f\u5b58\u50a8\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u6837\u672c\u503c\u5206\u5e03\u5728\u6bcf\u4e2abucket\uff08bucket\u81ea\u8eab\u7684\u53ef\u914d\u7f6e\uff09\u4e2d\u7684\u6570\u91cf\u3001\u6240\u6709\u6837\u672c\u503c\u4e4b\u548c\u4ee5\u53ca\u603b\u7684\u6837\u672c\u6570\u91cf\uff0c\u4ece\u800cPrometheus\u80fd\u591f\u4f7f\u7528\u5185\u7f6e\u7684 \u51fd\u6570\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u8ba1\u7b97\u6837\u672c\u5e73\u5747\u503c\uff1a\u4ee5\u503c\u7684\u603b\u548c\u9664\u4ee5\u503c\u7684\u6570\u91cf \u8ba1\u7b97\u6837\u672c\u5206\u4f4d\u503c\uff1a\u5206\u4f4d\u6570\u6709\u52a9\u4e8e\u4e86\u89e3\u7b26\u5408\u7279\u5b9a\u6807\u51c6\u7684\u6570\u636e\u4e2a\u6570\uff1b\u4f8b\u5982\u8bc4\u4f30\u54cd\u5e94\u65f6\u957f\u8d85\u8fc71\u79d2\u949f\u7684\u8bf7\u6c42\u6bd4\u4f8b\uff0c\u82e5\u8d85\u8fc720%\u5373\u53d1\u9001\u544a\u8b66\u7b49\uff1b Summary\uff1a\u6458\u8981\uff0cHistogram\u7684\u6269\u5c55\u7c7b\u578b\uff0c\u4f46\u5b83\u662f\u76f4\u63a5\u7531\u88ab\u76d1\u6d4b\u7aef\u81ea\u884c\u805a\u5408\u8ba1\u7b97\u51fa\u5206\u4f4d\u6570\uff0c\u5e76\u5c06\u8ba1\u7b97\u7ed3\u679c\u54cd\u5e94\u7ed9Prometheus Server\u7684\u6837\u672c\u91c7\u96c6\u8bf7\u6c42\uff1b\u56e0\u800c\uff0c\u5176\u5206\u4f4d\u6570\u8ba1\u7b97\u662f\u7531\u76d1\u63a7\u7aef\u5b8c\u6210\uff1b \u4f5c\u4e1a\uff08job\uff09\u548c\u5b9e\u4f8b\uff08Instance\uff09 \u00b6 Instance\uff1a\u80fd\u591f\u63a5\u6536Prometheus Server\u6570\u636eScrape\u64cd\u4f5c\u7684\u6bcf\u4e2a\u7f51\u7edc\u7aef\u70b9\uff08endpoint\uff09\uff0c\u5373\u4e3a\u4e00\u4e2aInstance\uff08\u5b9e\u4f8b\uff09\uff1b \u901a\u5e38\uff0c\u5177\u6709\u7c7b\u4f3c\u529f\u80fd\u7684Instance\u7684\u96c6\u5408\u6210\u4e3a\u4e00\u4e2aJob\uff0c\u4f8b\u5982\u4e00\u4e2aMySQL\u4e3b\u4ece\u590d\u5236\u96c6\u7fa4\u4e2d\u7684\u6240\u6709MySQL\u8fdb\u7a0b\uff1b PromQL \u00b6 Prometheus\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u6570\u636e\u67e5\u8be2\u8bed\u8a00PromQL(\u5168\u79f0Prometheus Query Language),\u652f\u6301\u7528\u6237\u8fdb\u884c\u5b9e\u65f6\u7684\u6570\u636e\u67e5\u8be2\u53ca\u805a\u5408\u64cd\u4f5c\uff1b PromQL\u652f\u6301\u5904\u7406\u4e24\u79cd\u5411\u91cf\uff0c\u5e76\u5185\u7f6e\u63d0\u4f9b\u4e86\u4e00\u7ec4\u7528\u4e8e\u6570\u636e\u5904\u7406\u7684\u51fd\u6570 \u5373\u65f6\u5411\u91cf\uff1a \u6700\u8fd1\u4e00\u6b21\u7684\u65f6\u95f4\u6233\u4e0a\u8ddf\u8e2a\u7684\u6570\u636e\u6307\u6807\uff1b \u65f6\u95f4\u8303\u56f4\u5411\u91cf\uff1a \u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u6240\u6709\u65f6\u95f4\u6233\u4e0a\u7684\u6570\u636e\u6307\u6807\uff1b Alerts \u00b6 \u6293\u53d6\u5230\u5f02\u5e38\u503c\u540e\uff0cPrometheus\u652f\u6301\u901a\u8fc7\"\u544a\u8b66\uff08Alert\uff09\"\u673a\u5236\u5411\u7528\u6237\u53d1\u9001\u53cd\u9988\u6216\u8b66\u793a\uff0c\u4ee5\u89e6\u53d1\u7528\u6237\u80fd\u591f\u53ca\u65f6\u91c7\u53d6\u5e94\u5bf9\u63aa\u65bd\uff1b Prometheus Server\u4ec5\u8d1f\u8d23\u751f\u6210\u544a\u8b66\u6307\u793a\uff0c\u5177\u4f53\u7684\u544a\u8b66\u884c\u4e3a\u7531\u53e6\u4e00\u4e2a\u72ec\u7acb\u7684\u5e94\u7528\u7a0b\u5e8fAlertManager\u8d1f\u8d23\uff1b \u544a\u8b66\u6307\u793a\u7531Prometheus Server\u57fa\u4e8e\u7528\u6237\u63d0\u4f9b\u7684\"\u544a\u8b66\u89c4\u5219\"\u5468\u671f\u6027\u8ba1\u7b97\u751f\u6210\uff1b Alertmanager\u63a5\u6536\u5230Prometheus Server\u53d1\u6765\u7684\u544a\u8b66\u6307\u793a\u540e\uff0c\u57fa\u4e8e\u7528\u6237\u5b9a\u4e49\u7684\u544a\u8b66\u8def\u7531\uff08route\uff09\u5411\u544a\u8b66\u63a5\u6536\u4eba\uff08receivers\uff09\u53d1\u9001\u544a\u8b66\u4fe1\u606f\uff1b","title":"Prometheus\u7b80\u4ecb"},{"location":"prometheus/prometheus/#what-is-prometheus-monitoring","text":"Prometheus\u662f\u4e00\u6b3e\u65f6\u5e8f\uff08time series\uff09\u6570\u636e\u5e93\uff1b\u4f46\u5b83\u7684\u529f\u80fd\u5374\u5e76\u975e\u6b62\u6b65\u4e8eTSDB\uff0c\u800c\u662f\u4e00\u6b3e\u8bbe\u8ba1\u7528\u4e8e\u8fdb\u884c\u76ee\u6807\uff08Target\uff09\u76d1\u63a7\u7684\u5173\u952e\u7ec4\u4ef6\uff1b \u7ed3\u5408\u751f\u6001\u7cfb\u7edf\u5185\u7684\u5176\u5b83\u7ec4\u4ef6\uff0c\u4f8b\u5982pushgateway\u3001altermanager\u548cgrafana\u7b49\uff0c\u53ef\u6784\u6210\u4e00\u4e2a\u5b8c\u6574\u7684IT\u76d1\u63a7\u7cfb\u7edf\uff1b","title":"What is Prometheus Monitoring?"},{"location":"prometheus/prometheus/#_1","text":"\u65f6\u5e8f\u6570\u636e\uff0c\u662f\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u901a\u8fc7\u91cd\u590d\u6d4b\u91cf\uff08measurement\uff09\u800c\u83b7\u5f97\u7684\u89c2\u6d4b\u503c\u7684\u96c6\u5408\uff1b\u5c06\u8fd9\u4e9b\u89c2\u6d4b\u503c\u7ed8\u5236\u4e8e\u56fe\u5f62\u4e4b\u4e0a\uff0c\u5b83\u4f1a\u6709\u4e00\u4e2a\u6570\u636e\u8f74\u548c\u65f6\u95f4\u8f74\uff1b \u670d\u52a1\u5668\u6307\u6807\u6570\u636e\u3001\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u76d1\u63a7\u6570\u636e\u3001\u7f51\u7edc\u6570\u636e\u7b49\uff0c\u4e5f\u90fd\u662f\u65f6\u5e8f\u6570\u636e\uff1b","title":"\u65f6\u5e8f\u6570\u636e\u7b80\u4ecb"},{"location":"prometheus/prometheus/#what-does-prometheus-do","text":"Prometheus\u57fa\u4e8eHTTP call\uff0c\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u7f51\u7edc\u7aef\u70b9\uff08endpoint\uff09\u4e0a\u5468\u671f\u6027\u83b7\u53d6\u6307\u6807\u6570\u636e Exporters Instrumentation Pushgateway","title":"What does Prometheus do?"},{"location":"prometheus/prometheus/#pull-and-push","text":"Prometheus\u540c\u5176\u5b83TSDB\u76f8\u6bd4\u53c8\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u7279\u6548\uff1a\u5b83\u4e3b\u52a8\u4ece\u5404Target\u4e0a\" \u62c9\u53d6\uff08pull\uff09 \"\u6570\u636e,\u800c\u975e\u7b49\u5f85\u88ab\u76d1\u63a7\u7aef\u7684\" \u63a8\u9001\uff08push\uff09 \"\uff1b \u4e24\u4e2a\u65b9\u5f0f\u5404\u6709\u4f18\u52a3\uff0c\u5176\u4e2dpull\u6a21\u578b\u7684\u4f18\u52bf\u5728\u4e8e: - \u96c6\u4e2d\u63a7\u5236\uff1a\u6709\u5229\u4e8e\u5c06\u914d\u7f6e\u96c6\u5728Prometheus Server\u4e0a\u5b8c\u6210\uff0c\u5305\u62ec\u6307\u6807\u53ca\u624d\u53bb\u901f\u7387\u7b49\uff1b - Prometheus\u7684\u6839\u672c\u76ee\u6807\u5728\u4e8e\u6536\u96c6Target\u4e0a\u9884\u5148\u5b8c\u6210\u805a\u5408\u7684\u805a\u5408\u578b\u6570\u636e\uff0c\u800c\u975e\u4e00\u6b3e\u7531\u4e8b\u4ef6\u9a71\u52a8\u7684\u5b58\u50a8\u7cfb\u7edf\uff1b","title":"Pull and Push"},{"location":"prometheus/prometheus/#prometheus","text":"Prometheus\u751f\u6001\u5708\u4e2d\u5305\u542b\u4e86\u591a\u4e2a\u7ec4\u4ef6\uff0c\u5176\u4e2d\u90e8\u5206\u7ec4\u4ef6\u53ef\u9009 Prometheus Server\uff1a\u6536\u96c6\u548c\u5b58\u50a8\u4e8b\u4ef6\u5e8f\u5217\u548c\u6570\u636e\uff1b Client Library\uff1a \u5ba2\u6237\u7aef\u5e93\uff0c\u76ee\u7684\u5728\u4e8e\u4e3a\u90a3\u4e9b\u671f\u671b\u539f\u751f\u63d0\u4f9bInstrumentation\u529f\u80fd\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4fbf\u6377\u7684\u5f00\u53d1\u9014\u5f84\uff1b Push Gateway\uff1a \u63a5\u6536\u90a3\u4e9b\u901a\u5e38\u7531\u77ed\u671f\u4f5c\u4e1a\u751f\u6210\u7684\u6307\u6807\u6570\u636e\u7684\u7f51\u5173\uff0c\u5e76\u652f\u6301\u6709Prometheus Server\u8fdb\u884c\u6307\u6807\u62c9\u53d6\u64cd\u4f5c\uff1b Exporters\uff1a\u7528\u4e8e\u66b4\u9732\u73b0\u6709\u5e94\u7528\u7a0b\u5e8f\u6216\u670d\u52a1(\u4e0d\u652f\u6301Instrumentation)\u7684\u6307\u6807\u7ed9Prometheus Server\uff1b Alertmanager\uff1a\u4ecePrometheus Server\u63a5\u6536\u5230\"\u544a\u8b66\u901a\u77e5\"\u540e\uff0c\u901a\u8fc7\u53bb\u91cd\u3001\u5206\u7ec4\u3001\u8def\u7531\u7b49\u9884\u5904\u7406\u529f\u80fd\u540e\u4ee5\u9ad8\u6548\u5411\u7528\u6237\u5b8c\u6210\u544a\u8b66\u4fe1\u606f\u53d1\u9001\uff1b Data Visualization\uff1aPrometheus Web UI(Prometheus Server\u5185\u5efa)\uff0c\u53caGrafana\u7b49\uff1b Service Discovery\uff1a\u52a8\u6001\u53d1\u73b0\u5f85\u76d1\u63a7\u7684Target\uff0c\u4ece\u800c\u5b8c\u6210\u76d1\u63a7\u914d\u7f6e\u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u5728\u5bb9\u5668\u5316\u73af\u5883\u4e2d\u5c24\u4e3a\u6709\u7528\uff1b\u8be5\u7ec4\u4ef6\u76ee\u524d\u7531Prometheus Server\u5185\u5efa\u652f\u6301\uff1b","title":"Prometheus\u7684\u751f\u6001\u7ec4\u4ef6"},{"location":"prometheus/prometheus/#prometheus_1","text":"Prometheus\u4ec5\u7528\u4e8e\u4ee5\"\u952e\u503c\"\u5f62\u5f0f\u5b58\u50a8\u65f6\u5e8f\u5f0f\u7684\u805a\u5408\u6570\u636e\uff0c\u5b83\u5e76\u4e0d\u652f\u6301\u5b58\u50a8\u6587\u672c\u4fe1\u606f\uff1b \u5176\u4e2d\u7684\"\u952e\"\u79f0\u4e3a\u6307\u6807\uff08Metric\uff09\uff0c\u5b83\u901a\u5e38\u610f\u5473\u7740CPU\u901f\u7387\u3001\u5185\u5b58\u4f7f\u7528\u7387\u6216\u5206\u533a\u7a7a\u95f2\u6bd4\u4f8b\u7b49\uff1b \u540c\u4e00\u6307\u6807\u53ef\u80fd\u4f1a\u9002\u914d\u5230\u591a\u4e2a\u76ee\u6807\u6216\u8bbe\u5907\uff0c\u56e0\u800c\u5b83\u4f7f\u7528\"\u6807\u7b7e\"\u4f5c\u4e3a\u5143\u6570\u636e\uff0c\u4ece\u800c\u4e3aMetric\u6dfb\u52a0\u66f4\u591a\u7684\u4fe1\u606f\u63cf\u8ff0\u7ef4\u5ea6\uff1b \u8fd9\u4e9b\u6807\u7b7e\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u8fc7\u6ee4\u5668\u8fdb\u884c\u6307\u6807\u8fc7\u6ee4\u53ca\u805a\u5408\u8fd0\u7b97\uff1b","title":"Prometheus\u6570\u636e\u6a21\u578b"},{"location":"prometheus/prometheus/#metric-types","text":"Prometheus\u4f7f\u75284\u79cd\u65b9\u6cd5\u6765\u63cf\u8ff0\u76d1\u89c6\u7684\u6307\u6807\uff1a Counter\uff1a\u8ba1\u6570\u5668\uff0c\u7528\u4e8e\u4fdd\u5b58\u5355\u8c03\u9012\u589e\u578b\u7684\u6570\u636e\uff0c\u4f8b\u5982\u7ad9\u70b9\u8bbf\u95ee\u6b21\u6570\u7b49\uff1b\u4e0d\u80fd\u4e3a\u8d1f\u503c\uff0c\u4e5f\u4e0d\u652f\u6301\u51cf\u5c11\uff0c\u4f46\u53ef\u4ee5\u91cd\u7f6e\u56de0\uff1b Gauge\uff1a\u4eea\u8868\u76d8\uff0c\u7528\u4e8e\u5b58\u50a8\u6709\u7740\u8d77\u4f0f\u7279\u5f81\u7684\u6307\u6807\u6570\u636e\uff0c\u4f8b\u5982\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u7b49\uff1b Gauge Gauge\u662fCounter\u7684\u8d85\u96c6\uff1b\u4f46\u5b58\u5728\u6307\u6807\u6570\u636e\u4e22\u5931\u7684\u53ef\u80fd\u6027\u65f6\uff0cCounter\u80fd\u8ba9\u7528\u6237\u786e\u5207\u4e86\u89e3\u6307\u6807\u968f\u65f6\u95f4\u7684\u53d8\u5316\u72b6\u6001\uff0c\u800cGauge\u5219\u53ef\u80fd\u968f\u65f6\u95f4\u6d41\u901d\u800c\u7cbe\u51c6\u5ea6\u8d8a\u6765\u8d8a\u4f4e\uff1b Histogram\uff1a\u76f4\u65b9\u56fe\uff0c\u5b83\u4f1a\u5728\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u5bf9\u6570\u636e\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u5c06\u5176\u8fdb\u5165\u53ef\u914d\u7f6e\u7684bucket\u4e4b\u4e2d\uff1bHistogram\u80fd\u591f\u5b58\u50a8\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u6837\u672c\u503c\u5206\u5e03\u5728\u6bcf\u4e2abucket\uff08bucket\u81ea\u8eab\u7684\u53ef\u914d\u7f6e\uff09\u4e2d\u7684\u6570\u91cf\u3001\u6240\u6709\u6837\u672c\u503c\u4e4b\u548c\u4ee5\u53ca\u603b\u7684\u6837\u672c\u6570\u91cf\uff0c\u4ece\u800cPrometheus\u80fd\u591f\u4f7f\u7528\u5185\u7f6e\u7684 \u51fd\u6570\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u8ba1\u7b97\u6837\u672c\u5e73\u5747\u503c\uff1a\u4ee5\u503c\u7684\u603b\u548c\u9664\u4ee5\u503c\u7684\u6570\u91cf \u8ba1\u7b97\u6837\u672c\u5206\u4f4d\u503c\uff1a\u5206\u4f4d\u6570\u6709\u52a9\u4e8e\u4e86\u89e3\u7b26\u5408\u7279\u5b9a\u6807\u51c6\u7684\u6570\u636e\u4e2a\u6570\uff1b\u4f8b\u5982\u8bc4\u4f30\u54cd\u5e94\u65f6\u957f\u8d85\u8fc71\u79d2\u949f\u7684\u8bf7\u6c42\u6bd4\u4f8b\uff0c\u82e5\u8d85\u8fc720%\u5373\u53d1\u9001\u544a\u8b66\u7b49\uff1b Summary\uff1a\u6458\u8981\uff0cHistogram\u7684\u6269\u5c55\u7c7b\u578b\uff0c\u4f46\u5b83\u662f\u76f4\u63a5\u7531\u88ab\u76d1\u6d4b\u7aef\u81ea\u884c\u805a\u5408\u8ba1\u7b97\u51fa\u5206\u4f4d\u6570\uff0c\u5e76\u5c06\u8ba1\u7b97\u7ed3\u679c\u54cd\u5e94\u7ed9Prometheus Server\u7684\u6837\u672c\u91c7\u96c6\u8bf7\u6c42\uff1b\u56e0\u800c\uff0c\u5176\u5206\u4f4d\u6570\u8ba1\u7b97\u662f\u7531\u76d1\u63a7\u7aef\u5b8c\u6210\uff1b","title":"\u6307\u6807\u7c7b\u578b\uff08Metric Types\uff09"},{"location":"prometheus/prometheus/#jobinstance","text":"Instance\uff1a\u80fd\u591f\u63a5\u6536Prometheus Server\u6570\u636eScrape\u64cd\u4f5c\u7684\u6bcf\u4e2a\u7f51\u7edc\u7aef\u70b9\uff08endpoint\uff09\uff0c\u5373\u4e3a\u4e00\u4e2aInstance\uff08\u5b9e\u4f8b\uff09\uff1b \u901a\u5e38\uff0c\u5177\u6709\u7c7b\u4f3c\u529f\u80fd\u7684Instance\u7684\u96c6\u5408\u6210\u4e3a\u4e00\u4e2aJob\uff0c\u4f8b\u5982\u4e00\u4e2aMySQL\u4e3b\u4ece\u590d\u5236\u96c6\u7fa4\u4e2d\u7684\u6240\u6709MySQL\u8fdb\u7a0b\uff1b","title":"\u4f5c\u4e1a\uff08job\uff09\u548c\u5b9e\u4f8b\uff08Instance\uff09"},{"location":"prometheus/prometheus/#promql","text":"Prometheus\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u6570\u636e\u67e5\u8be2\u8bed\u8a00PromQL(\u5168\u79f0Prometheus Query Language),\u652f\u6301\u7528\u6237\u8fdb\u884c\u5b9e\u65f6\u7684\u6570\u636e\u67e5\u8be2\u53ca\u805a\u5408\u64cd\u4f5c\uff1b PromQL\u652f\u6301\u5904\u7406\u4e24\u79cd\u5411\u91cf\uff0c\u5e76\u5185\u7f6e\u63d0\u4f9b\u4e86\u4e00\u7ec4\u7528\u4e8e\u6570\u636e\u5904\u7406\u7684\u51fd\u6570 \u5373\u65f6\u5411\u91cf\uff1a \u6700\u8fd1\u4e00\u6b21\u7684\u65f6\u95f4\u6233\u4e0a\u8ddf\u8e2a\u7684\u6570\u636e\u6307\u6807\uff1b \u65f6\u95f4\u8303\u56f4\u5411\u91cf\uff1a \u6307\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u6240\u6709\u65f6\u95f4\u6233\u4e0a\u7684\u6570\u636e\u6307\u6807\uff1b","title":"PromQL"},{"location":"prometheus/prometheus/#alerts","text":"\u6293\u53d6\u5230\u5f02\u5e38\u503c\u540e\uff0cPrometheus\u652f\u6301\u901a\u8fc7\"\u544a\u8b66\uff08Alert\uff09\"\u673a\u5236\u5411\u7528\u6237\u53d1\u9001\u53cd\u9988\u6216\u8b66\u793a\uff0c\u4ee5\u89e6\u53d1\u7528\u6237\u80fd\u591f\u53ca\u65f6\u91c7\u53d6\u5e94\u5bf9\u63aa\u65bd\uff1b Prometheus Server\u4ec5\u8d1f\u8d23\u751f\u6210\u544a\u8b66\u6307\u793a\uff0c\u5177\u4f53\u7684\u544a\u8b66\u884c\u4e3a\u7531\u53e6\u4e00\u4e2a\u72ec\u7acb\u7684\u5e94\u7528\u7a0b\u5e8fAlertManager\u8d1f\u8d23\uff1b \u544a\u8b66\u6307\u793a\u7531Prometheus Server\u57fa\u4e8e\u7528\u6237\u63d0\u4f9b\u7684\"\u544a\u8b66\u89c4\u5219\"\u5468\u671f\u6027\u8ba1\u7b97\u751f\u6210\uff1b Alertmanager\u63a5\u6536\u5230Prometheus Server\u53d1\u6765\u7684\u544a\u8b66\u6307\u793a\u540e\uff0c\u57fa\u4e8e\u7528\u6237\u5b9a\u4e49\u7684\u544a\u8b66\u8def\u7531\uff08route\uff09\u5411\u544a\u8b66\u63a5\u6536\u4eba\uff08receivers\uff09\u53d1\u9001\u544a\u8b66\u4fe1\u606f\uff1b","title":"Alerts"},{"location":"prometheus/kube-prometheus/","text":"kube-prometheus \u00b6 Note that everything is experimental and may change significantly at any time. This repository collects Kubernetes manifests, Grafana dashboards, and Prometheus rules combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator. The content of this project is written in jsonnet . This project could both be described as a package as well as a library. Components included in this package: The Prometheus Operator Highly available Prometheus Highly available Alertmanager Prometheus node-exporter Prometheus Adapter for Kubernetes Metrics APIs kube-state-metrics Grafana This stack is meant for cluster monitoring, so it is pre-configured to collect metrics from all Kubernetes components. In addition to that it delivers a default set of dashboards and alerting rules. Many of the useful dashboards and alerts come from the kubernetes-mixin project , similar to this project it provides composable jsonnet as a library for users to customize to their needs. Table of contents \u00b6 kube-prometheus Table of contents Prerequisites minikube Compatibility Kubernetes compatibility matrix Quickstart Access the dashboards Customizing Kube-Prometheus Installing Compiling Apply the kube-prometheus stack Containerized Installing and Compiling Update from upstream project Update jb Update kube-prometheus Compile the manifests and apply Configuration Customization Examples Cluster Creation Tools Internal Registry NodePorts Prometheus Object Name node-exporter DaemonSet namespace Alertmanager configuration Adding additional namespaces to monitor Defining the ServiceMonitor for each additional Namespace Monitoring all namespaces Static etcd configuration Pod Anti-Affinity Stripping container resource limits Customizing Prometheus alerting/recording rules and Grafana dashboards Exposing Prometheus/Alermanager/Grafana via Ingress Minikube Example Troubleshooting Error retrieving kubelet metrics Authentication problem Authorization problem kube-state-metrics resource usage Contributing License Prerequisites \u00b6 You will need a Kubernetes cluster, that's it! By default it is assumed, that the kubelet uses token authentication and authorization, as otherwise Prometheus needs a client certificate, which gives it full access to the kubelet, rather than just the metrics. Token authentication and authorization allows more fine grained and easier access control. This means the kubelet configuration must contain these flags: --authentication-token-webhook=true This flag enables, that a ServiceAccount token can be used to authenticate against the kubelet(s). This can also be enabled by setting the kubelet configuration value authentication.webhook.enabled to true . --authorization-mode=Webhook This flag enables, that the kubelet will perform an RBAC request with the API to determine, whether the requesting entity (Prometheus in this case) is allowed to access a resource, in specific for this project the /metrics endpoint. This can also be enabled by setting the kubelet configuration value authorization.mode to Webhook . This stack provides resource metrics by deploying the Prometheus Adapter . This adapter is an Extension API Server and Kubernetes needs to be have this feature enabled, otherwise the adapter has no effect, but is still deployed. minikube \u00b6 To try out this stack, start minikube with the following command: $ minikube delete && minikube start --kubernetes-version = v1.20.0 --memory = 6g --bootstrapper = kubeadm --extra-config = kubelet.authentication-token-webhook = true --extra-config = kubelet.authorization-mode = Webhook --extra-config = scheduler.address = 0 .0.0.0 --extra-config = controller-manager.address = 0 .0.0.0 The kube-prometheus stack includes a resource metrics API server, so the metrics-server addon is not necessary. Ensure the metrics-server addon is disabled on minikube: $ minikube addons disable metrics-server Compatibility \u00b6 Kubernetes compatibility matrix \u00b6 The following versions are supported and work as we test against these versions in their respective branches. But note that other versions might work! kube-prometheus stack Kubernetes 1.16 Kubernetes 1.17 Kubernetes 1.18 Kubernetes 1.19 Kubernetes 1.20 release-0.4 \u2714 (v1.16.5+) \u2714 \u2717 \u2717 \u2717 release-0.5 \u2717 \u2717 \u2714 \u2717 \u2717 release-0.6 \u2717 \u2717 \u2714 \u2714 \u2717 release-0.7 \u2717 \u2717 \u2717 \u2714 \u2714 HEAD \u2717 \u2717 \u2717 \u2714 \u2714 Note: Due to two bugs in Kubernetes v1.16.1, and prior to Kubernetes v1.16.5 the kube-prometheus release-0.4 branch only supports v1.16.5 and higher. The extension-apiserver-authentication-reader role in the kube-system namespace can be manually edited to include list and watch permissions in order to workaround the second issue with Kubernetes v1.16.2 through v1.16.4. Quickstart \u00b6 Note: For versions before Kubernetes v1.20.z refer to the Kubernetes compatibility matrix in order to choose a compatible branch. This project is intended to be used as a library (i.e. the intent is not for you to create your own modified copy of this repository). Though for a quickstart a compiled version of the Kubernetes manifests generated with this library (specifically with example.jsonnet ) is checked into this repository in order to try the content out quickly. To try out the stack un-customized run: * Create the monitoring stack using the config in the manifests directory: # Create the namespace and CRDs, and then wait for them to be availble before creating the remaining resources kubectl create -f manifests/setup until kubectl get servicemonitors --all-namespaces ; do date ; sleep 1 ; echo \"\" ; done kubectl create -f manifests/ We create the namespace and CustomResourceDefinitions first to avoid race conditions when deploying the monitoring components. Alternatively, the resources in both folders can be applied with a single command kubectl create -f manifests/setup -f manifests , but it may be necessary to run the command multiple times for all components to be created successfullly. And to teardown the stack: kubectl delete --ignore-not-found = true -f manifests/ -f manifests/setup Access the dashboards \u00b6 Prometheus, Grafana, and Alertmanager dashboards can be accessed quickly using kubectl port-forward after running the quickstart via the commands below. Kubernetes 1.10 or later is required. Note: There are instructions on how to route to these pods behind an ingress controller in the Exposing Prometheus/Alermanager/Grafana via Ingress section. Prometheus $ kubectl --namespace monitoring port-forward svc/prometheus-k8s 9090 Then access via http://localhost:9090 Grafana $ kubectl --namespace monitoring port-forward svc/grafana 3000 Then access via http://localhost:3000 and use the default grafana user:password of admin:admin . Alert Manager $ kubectl --namespace monitoring port-forward svc/alertmanager-main 9093 Then access via http://localhost:9093 Customizing Kube-Prometheus \u00b6 This section: * describes how to customize the kube-prometheus library via compiling the kube-prometheus manifests yourself (as an alternative to the Quickstart section ). * still doesn't require you to make a copy of this entire repository, but rather only a copy of a few select files. Installing \u00b6 The content of this project consists of a set of jsonnet files making up a library to be consumed. Install this library in your own project with jsonnet-bundler (the jsonnet package manager): $ mkdir my-kube-prometheus ; cd my-kube-prometheus $ jb init # Creates the initial/empty `jsonnetfile.json` # Install the kube-prometheus dependency $ jb install github.com/prometheus-operator/kube-prometheus/jsonnet/kube-prometheus@release-0.4 # Creates `vendor/` & `jsonnetfile.lock.json`, and fills in `jsonnetfile.json` jb can be installed with go get github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb An e.g. of how to install a given version of this library: jb install github.com/prometheus-operator/kube-prometheus/jsonnet/kube-prometheus@release-0.4 In order to update the kube-prometheus dependency, simply use the jsonnet-bundler update functionality: $ jb update Compiling \u00b6 e.g. of how to compile the manifests: ./build.sh example.jsonnet before compiling, install gojsontoyaml tool with go get github.com/brancz/gojsontoyaml Here's example.jsonnet : Note: some of the following components must be configured beforehand. See configuration and customization-examples . local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + // Uncomment the following imports to enable its patches // (import 'kube-prometheus/kube-prometheus-anti-affinity.libsonnet') + // (import 'kube-prometheus/kube-prometheus-managed-cluster.libsonnet') + // (import 'kube-prometheus/kube-prometheus-node-ports.libsonnet') + // (import 'kube-prometheus/kube-prometheus-static-etcd.libsonnet') + // (import 'kube-prometheus/kube-prometheus-thanos-sidecar.libsonnet') + // (import 'kube-prometheus/kube-prometheus-custom-metrics.libsonnet') + // (import 'kube-prometheus/kube-prometheus-external-metrics.libsonnet') + { _config+:: { namespace: 'monitoring', }, }; { ['setup/0namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['setup/prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.filter((function(name) name != 'serviceMonitor'), std.objectFields(kp.prometheusOperator)) } + // serviceMonitor is separated so that it can be created after the CRDs are ready { 'prometheus-operator-serviceMonitor': kp.prometheusOperator.serviceMonitor } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } And here's the build.sh script (which uses vendor/ to render all manifests in a json structure of {filename: manifest-content} ): #!/usr/bin/env bash # This script uses arg $1 (name of *.jsonnet file to use) to generate the manifests/*.yaml files. set -e set -x # only exit with zero if all commands of the pipeline exit successfully set -o pipefail # Make sure to use project tooling PATH = \" $( pwd ) /tmp/bin: ${ PATH } \" # Make sure to start with a clean 'manifests' dir rm -rf manifests mkdir -p manifests/setup # Calling gojsontoyaml is optional, but we would like to generate yaml, not json jsonnet -J vendor -m manifests \" ${ 1 -example.jsonnet } \" | xargs -I {} sh -c 'cat {} | gojsontoyaml > {}.yaml' -- {} # Make sure to remove json files find manifests -type f ! -name '*.yaml' -delete rm -f kustomization Note you need jsonnet ( go get github.com/google/go-jsonnet/cmd/jsonnet ) and gojsontoyaml ( go get github.com/brancz/gojsontoyaml ) installed to run build.sh . If you just want json output, not yaml, then you can skip the pipe and everything afterwards. This script runs the jsonnet code, then reads each key of the generated json and uses that as the file name, and writes the value of that key to that file, and converts each json manifest to yaml. Apply the kube-prometheus stack \u00b6 The previous steps (compilation) has created a bunch of manifest files in the manifest/ folder. Now simply use kubectl to install Prometheus and Grafana as per your configuration: # Update the namespace and CRDs, and then wait for them to be availble before creating the remaining resources $ kubectl apply -f manifests/setup $ kubectl apply -f manifests/ Alternatively, the resources in both folders can be applied with a single command kubectl apply -Rf manifests , but it may be necessary to run the command multiple times for all components to be created successfullly. Check the monitoring namespace (or the namespace you have specific in namespace: ) and make sure the pods are running. Prometheus and Grafana should be up and running soon. Containerized Installing and Compiling \u00b6 If you don't care to have jb nor jsonnet nor gojsontoyaml installed, then use quay.io/coreos/jsonnet-ci container image. Do the following from this kube-prometheus directory: $ docker run --rm -v $( pwd ) : $( pwd ) --workdir $( pwd ) quay.io/coreos/jsonnet-ci jb update $ docker run --rm -v $( pwd ) : $( pwd ) --workdir $( pwd ) quay.io/coreos/jsonnet-ci ./build.sh example.jsonnet Update from upstream project \u00b6 You may wish to fetch changes made on this project so they are available to you. Update jb \u00b6 jb may have been updated so it's a good idea to get the latest version of this binary: $ go get -u github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb Update kube-prometheus \u00b6 The command below will sync with upstream project: $ jb update Compile the manifests and apply \u00b6 Once updated, just follow the instructions under \"Compiling\" and \"Apply the kube-prometheus stack\" to apply the changes to your cluster. Configuration \u00b6 Jsonnet has the concept of hidden fields. These are fields, that are not going to be rendered in a result. This is used to configure the kube-prometheus components in jsonnet. In the example jsonnet code of the above Customizing Kube-Prometheus section , you can see an example of this, where the namespace is being configured to be monitoring . In order to not override the whole object, use the +:: construct of jsonnet, to merge objects, this way you can override individual settings, but retain all other settings and defaults. These are the available fields with their respective default values: { _config+:: { namespace: \"default\", versions+:: { alertmanager: \"v0.17.0\", nodeExporter: \"v0.18.1\", kubeStateMetrics: \"v1.5.0\", kubeRbacProxy: \"v0.4.1\", prometheusOperator: \"v0.30.0\", prometheus: \"v2.10.0\", }, imageRepos+:: { prometheus: \"quay.io/prometheus/prometheus\", alertmanager: \"quay.io/prometheus/alertmanager\", kubeStateMetrics: \"quay.io/coreos/kube-state-metrics\", kubeRbacProxy: \"quay.io/brancz/kube-rbac-proxy\", nodeExporter: \"quay.io/prometheus/node-exporter\", prometheusOperator: \"quay.io/prometheus-operator/prometheus-operator\", }, prometheus+:: { names: 'k8s', replicas: 2, rules: {}, }, alertmanager+:: { name: 'main', config: ||| global: resolve_timeout: 5m route: group_by: ['job'] group_wait: 30s group_interval: 5m repeat_interval: 12h receiver: 'null' routes: - match: alertname: Watchdog receiver: 'null' receivers: - name: 'null' |||, replicas: 3, }, kubeStateMetrics+:: { collectors: '', // empty string gets a default set scrapeInterval: '30s', scrapeTimeout: '30s', baseCPU: '100m', baseMemory: '150Mi', }, nodeExporter+:: { port: 9100, }, }, } The grafana definition is located in a different project ( https://github.com/brancz/kubernetes-grafana ), but needed configuration can be customized from the same top level _config field. For example to allow anonymous access to grafana, add the following _config section: grafana+:: { config: { // http://docs.grafana.org/installation/configuration/ sections: { \"auth.anonymous\": {enabled: true}, }, }, }, Customization Examples \u00b6 Jsonnet is a turing complete language, any logic can be reflected in it. It also has powerful merge functionalities, allowing sophisticated customizations of any kind simply by merging it into the object the library provides. Cluster Creation Tools \u00b6 A common example is that not all Kubernetes clusters are created exactly the same way, meaning the configuration to monitor them may be slightly different. For kubeadm , bootkube , kops and kubespray clusters there are mixins available to easily configure these: kubeadm: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kubeadm.libsonnet') bootkube: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-bootkube.libsonnet') kops: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kops.libsonnet') kops with CoreDNS: If your kops cluster is using CoreDNS, there is an additional mixin to import. (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kops.libsonnet') + (import 'kube-prometheus/kube-prometheus-kops-coredns.libsonnet') kubespray: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kubespray.libsonnet') kube-aws: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kube-aws.libsonnet') Internal Registry \u00b6 Some Kubernetes installations source all their images from an internal registry. kube-prometheus supports this use case and helps the user synchronize every image it uses to the internal registry and generate manifests pointing at the internal registry. To produce the docker pull/tag/push commands that will synchronize upstream images to internal-registry.com/organization (after having run the jb command to populate the vendor directory): $ jsonnet -J vendor -S --tla-str repository = internal-registry.com/organization sync-to-internal-registry.jsonnet $ docker pull k8s.gcr.io/addon-resizer:1.8.4 $ docker tag k8s.gcr.io/addon-resizer:1.8.4 internal-registry.com/organization/addon-resizer:1.8.4 $ docker push internal-registry.com/organization/addon-resizer:1.8.4 $ docker pull quay.io/prometheus/alertmanager:v0.16.2 $ docker tag quay.io/prometheus/alertmanager:v0.16.2 internal-registry.com/organization/alertmanager:v0.16.2 $ docker push internal-registry.com/organization/alertmanager:v0.16.2 ... The output of this command can be piped to a shell to be executed by appending | sh . Then to generate manifests with internal-registry.com/organization , use the withImageRepository mixin: local mixin = import 'kube-prometheus/kube-prometheus-config-mixins.libsonnet'; local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, } + mixin.withImageRepository('internal-registry.com/organization'); { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } NodePorts \u00b6 Another mixin that may be useful for exploring the stack is to expose the UIs of Prometheus, Alertmanager and Grafana on NodePorts: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-node-ports.libsonnet') Prometheus Object Name \u00b6 To give another customization example, the name of the Prometheus object provided by this library can be overridden: ((import 'kube-prometheus/kube-prometheus.libsonnet') + { prometheus+: { prometheus+: { metadata+: { name: 'my-name', }, }, }, }).prometheus.prometheus node-exporter DaemonSet namespace \u00b6 Standard Kubernetes manifests are all written using ksonnet-lib , so they can be modified with the mixins supplied by ksonnet-lib. For example to override the namespace of the node-exporter DaemonSet: ((import 'kube-prometheus/kube-prometheus.libsonnet') + { nodeExporter+: { daemonset+: { metadata+: { namespace: 'my-custom-namespace', }, }, }, }).nodeExporter.daemonset Alertmanager configuration \u00b6 The Alertmanager configuration is located in the _config.alertmanager.config configuration field. In order to set a custom Alertmanager configuration simply set this field. ((import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { alertmanager+: { config: ||| global: resolve_timeout: 10m route: group_by: ['job'] group_wait: 30s group_interval: 5m repeat_interval: 12h receiver: 'null' routes: - match: alertname: Watchdog receiver: 'null' receivers: - name: 'null' |||, }, }, }).alertmanager.secret In the above example the configuration has been inlined, but can just as well be an external file imported in jsonnet via the importstr function. ((import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { alertmanager+: { config: importstr 'alertmanager-config.yaml', }, }, }).alertmanager.secret Adding additional namespaces to monitor \u00b6 In order to monitor additional namespaces, the Prometheus server requires the appropriate Role and RoleBinding to be able to discover targets from that namespace. By default the Prometheus server is limited to the three namespaces it requires: default, kube-system and the namespace you configure the stack to run in via $._config.namespace . This is specified in $._config.prometheus.namespaces , to add new namespaces to monitor, simply append the additional namespaces: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces+: ['my-namespace', 'my-second-namespace'], }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Defining the ServiceMonitor for each additional Namespace \u00b6 In order to Prometheus be able to discovery and scrape services inside the additional namespaces specified in previous step you need to define a ServiceMonitor resource. Typically it is up to the users of a namespace to provision the ServiceMonitor resource, but in case you want to generate it with the same tooling as the rest of the cluster monitoring infrastructure, this is a guide on how to achieve this. You can define ServiceMonitor resources in your jsonnet spec. See the snippet bellow: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces+: ['my-namespace', 'my-second-namespace'], }, }, prometheus+:: { serviceMonitorMyNamespace: { apiVersion: 'monitoring.coreos.com/v1', kind: 'ServiceMonitor', metadata: { name: 'my-servicemonitor', namespace: 'my-namespace', }, spec: { jobLabel: 'app', endpoints: [ { port: 'http-metrics', }, ], selector: { matchLabels: { app: 'myapp', }, }, }, }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } NOTE: make sure your service resources have the right labels (eg. 'app': 'myapp' ) applied. Prometheus uses kubernetes labels to discover resources inside the namespaces. Monitoring all namespaces \u00b6 In case you want to monitor all namespaces in a cluster, you can add the following mixin. Also, make sure to empty the namespaces defined in prometheus so that roleBindings are not created against them. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-all-namespaces.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces: [], }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } NOTE: This configuration can potentially make your cluster insecure especially in a multi-tenant cluster. This is because this gives Prometheus visibility over the whole cluster which might not be expected in a scenario when certain namespaces are locked down for security reasons. Proceed with creating ServiceMonitors for the services in the namespaces you actually want to monitor Static etcd configuration \u00b6 In order to configure a static etcd cluster to scrape there is a simple kube-prometheus-static-etcd.libsonnet mixin prepared - see etcd.jsonnet for an example of how to use that mixin, and Monitoring external etcd for more information. Note that monitoring etcd in minikube is currently not possible because of how etcd is setup. (minikube's etcd binds to 127.0.0.1:2379 only, and within host networking namespace.) Pod Anti-Affinity \u00b6 To prevent Prometheus and Alertmanager instances from being deployed onto the same node when possible, one can include the kube-prometheus-anti-affinity.libsonnet mixin: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-anti-affinity.libsonnet') Stripping container resource limits \u00b6 Sometimes in small clusters, the CPU/memory limits can get high enough for alerts to be fired continuously. To prevent this, one can strip off the predefined limits. To do that, one can import the following mixin local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-strip-limits.libsonnet') + { _config+:: { namespace: 'monitoring', }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Customizing Prometheus alerting/recording rules and Grafana dashboards \u00b6 See developing Prometheus rules and Grafana dashboards guide. Exposing Prometheus/Alermanager/Grafana via Ingress \u00b6 See exposing Prometheus/Alertmanager/Grafana guide. Minikube Example \u00b6 To use an easy to reproduce example, see minikube.jsonnet , which uses the minikube setup as demonstrated in Prerequisites . Because we would like easy access to our Prometheus, Alertmanager and Grafana UIs, minikube.jsonnet exposes the services as NodePort type services. Continuous Delivery \u00b6 Working examples of use with continuous delivery tools are found in examples/continuous-delivery. Troubleshooting \u00b6 See the general guidelines for getting support from the community. Error retrieving kubelet metrics \u00b6 Should the Prometheus /targets page show kubelet targets, but not able to successfully scrape the metrics, then most likely it is a problem with the authentication and authorization setup of the kubelets. As described in the Prerequisites section, in order to retrieve metrics from the kubelet token authentication and authorization must be enabled. Some Kubernetes setup tools do not enable this by default. If you are using Google's GKE product, see cAdvisor support . If you are using AWS EKS, see AWS EKS CNI support . If you are using Weave Net, see Weave Net support . Authentication problem \u00b6 The Prometheus /targets page will show the kubelet job with the error 403 Unauthorized , when token authentication is not enabled. Ensure, that the --authentication-token-webhook=true flag is enabled on all kubelet configurations. Authorization problem \u00b6 The Prometheus /targets page will show the kubelet job with the error 401 Unauthorized , when token authorization is not enabled. Ensure that the --authorization-mode=Webhook flag is enabled on all kubelet configurations. kube-state-metrics resource usage \u00b6 In some environments, kube-state-metrics may need additional resources. One driver for more resource needs, is a high number of namespaces. There may be others. kube-state-metrics resource allocation is managed by addon-resizer You can control it's parameters by setting variables in the config. They default to: kubeStateMetrics+:: { baseCPU: '100m', cpuPerNode: '2m', baseMemory: '150Mi', memoryPerNode: '30Mi', } Contributing \u00b6 All .yaml files in the /manifests folder are generated via Jsonnet . Contributing changes will most likely include the following process: Make your changes in the respective *.jsonnet file. Commit your changes (This is currently necessary due to our vendoring process. This is likely to change in the future). Update the pinned kube-prometheus dependency in jsonnetfile.lock.json : jb update Generate dependent *.yaml files: make generate Commit the generated changes. License \u00b6 Apache License 2.0, see LICENSE .","title":"kube-prometheus"},{"location":"prometheus/kube-prometheus/#kube-prometheus","text":"Note that everything is experimental and may change significantly at any time. This repository collects Kubernetes manifests, Grafana dashboards, and Prometheus rules combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator. The content of this project is written in jsonnet . This project could both be described as a package as well as a library. Components included in this package: The Prometheus Operator Highly available Prometheus Highly available Alertmanager Prometheus node-exporter Prometheus Adapter for Kubernetes Metrics APIs kube-state-metrics Grafana This stack is meant for cluster monitoring, so it is pre-configured to collect metrics from all Kubernetes components. In addition to that it delivers a default set of dashboards and alerting rules. Many of the useful dashboards and alerts come from the kubernetes-mixin project , similar to this project it provides composable jsonnet as a library for users to customize to their needs.","title":"kube-prometheus"},{"location":"prometheus/kube-prometheus/#table-of-contents","text":"kube-prometheus Table of contents Prerequisites minikube Compatibility Kubernetes compatibility matrix Quickstart Access the dashboards Customizing Kube-Prometheus Installing Compiling Apply the kube-prometheus stack Containerized Installing and Compiling Update from upstream project Update jb Update kube-prometheus Compile the manifests and apply Configuration Customization Examples Cluster Creation Tools Internal Registry NodePorts Prometheus Object Name node-exporter DaemonSet namespace Alertmanager configuration Adding additional namespaces to monitor Defining the ServiceMonitor for each additional Namespace Monitoring all namespaces Static etcd configuration Pod Anti-Affinity Stripping container resource limits Customizing Prometheus alerting/recording rules and Grafana dashboards Exposing Prometheus/Alermanager/Grafana via Ingress Minikube Example Troubleshooting Error retrieving kubelet metrics Authentication problem Authorization problem kube-state-metrics resource usage Contributing License","title":"Table of contents"},{"location":"prometheus/kube-prometheus/#prerequisites","text":"You will need a Kubernetes cluster, that's it! By default it is assumed, that the kubelet uses token authentication and authorization, as otherwise Prometheus needs a client certificate, which gives it full access to the kubelet, rather than just the metrics. Token authentication and authorization allows more fine grained and easier access control. This means the kubelet configuration must contain these flags: --authentication-token-webhook=true This flag enables, that a ServiceAccount token can be used to authenticate against the kubelet(s). This can also be enabled by setting the kubelet configuration value authentication.webhook.enabled to true . --authorization-mode=Webhook This flag enables, that the kubelet will perform an RBAC request with the API to determine, whether the requesting entity (Prometheus in this case) is allowed to access a resource, in specific for this project the /metrics endpoint. This can also be enabled by setting the kubelet configuration value authorization.mode to Webhook . This stack provides resource metrics by deploying the Prometheus Adapter . This adapter is an Extension API Server and Kubernetes needs to be have this feature enabled, otherwise the adapter has no effect, but is still deployed.","title":"Prerequisites"},{"location":"prometheus/kube-prometheus/#minikube","text":"To try out this stack, start minikube with the following command: $ minikube delete && minikube start --kubernetes-version = v1.20.0 --memory = 6g --bootstrapper = kubeadm --extra-config = kubelet.authentication-token-webhook = true --extra-config = kubelet.authorization-mode = Webhook --extra-config = scheduler.address = 0 .0.0.0 --extra-config = controller-manager.address = 0 .0.0.0 The kube-prometheus stack includes a resource metrics API server, so the metrics-server addon is not necessary. Ensure the metrics-server addon is disabled on minikube: $ minikube addons disable metrics-server","title":"minikube"},{"location":"prometheus/kube-prometheus/#compatibility","text":"","title":"Compatibility"},{"location":"prometheus/kube-prometheus/#kubernetes-compatibility-matrix","text":"The following versions are supported and work as we test against these versions in their respective branches. But note that other versions might work! kube-prometheus stack Kubernetes 1.16 Kubernetes 1.17 Kubernetes 1.18 Kubernetes 1.19 Kubernetes 1.20 release-0.4 \u2714 (v1.16.5+) \u2714 \u2717 \u2717 \u2717 release-0.5 \u2717 \u2717 \u2714 \u2717 \u2717 release-0.6 \u2717 \u2717 \u2714 \u2714 \u2717 release-0.7 \u2717 \u2717 \u2717 \u2714 \u2714 HEAD \u2717 \u2717 \u2717 \u2714 \u2714 Note: Due to two bugs in Kubernetes v1.16.1, and prior to Kubernetes v1.16.5 the kube-prometheus release-0.4 branch only supports v1.16.5 and higher. The extension-apiserver-authentication-reader role in the kube-system namespace can be manually edited to include list and watch permissions in order to workaround the second issue with Kubernetes v1.16.2 through v1.16.4.","title":"Kubernetes compatibility matrix"},{"location":"prometheus/kube-prometheus/#quickstart","text":"Note: For versions before Kubernetes v1.20.z refer to the Kubernetes compatibility matrix in order to choose a compatible branch. This project is intended to be used as a library (i.e. the intent is not for you to create your own modified copy of this repository). Though for a quickstart a compiled version of the Kubernetes manifests generated with this library (specifically with example.jsonnet ) is checked into this repository in order to try the content out quickly. To try out the stack un-customized run: * Create the monitoring stack using the config in the manifests directory: # Create the namespace and CRDs, and then wait for them to be availble before creating the remaining resources kubectl create -f manifests/setup until kubectl get servicemonitors --all-namespaces ; do date ; sleep 1 ; echo \"\" ; done kubectl create -f manifests/ We create the namespace and CustomResourceDefinitions first to avoid race conditions when deploying the monitoring components. Alternatively, the resources in both folders can be applied with a single command kubectl create -f manifests/setup -f manifests , but it may be necessary to run the command multiple times for all components to be created successfullly. And to teardown the stack: kubectl delete --ignore-not-found = true -f manifests/ -f manifests/setup","title":"Quickstart"},{"location":"prometheus/kube-prometheus/#access-the-dashboards","text":"Prometheus, Grafana, and Alertmanager dashboards can be accessed quickly using kubectl port-forward after running the quickstart via the commands below. Kubernetes 1.10 or later is required. Note: There are instructions on how to route to these pods behind an ingress controller in the Exposing Prometheus/Alermanager/Grafana via Ingress section. Prometheus $ kubectl --namespace monitoring port-forward svc/prometheus-k8s 9090 Then access via http://localhost:9090 Grafana $ kubectl --namespace monitoring port-forward svc/grafana 3000 Then access via http://localhost:3000 and use the default grafana user:password of admin:admin . Alert Manager $ kubectl --namespace monitoring port-forward svc/alertmanager-main 9093 Then access via http://localhost:9093","title":"Access the dashboards"},{"location":"prometheus/kube-prometheus/#customizing-kube-prometheus","text":"This section: * describes how to customize the kube-prometheus library via compiling the kube-prometheus manifests yourself (as an alternative to the Quickstart section ). * still doesn't require you to make a copy of this entire repository, but rather only a copy of a few select files.","title":"Customizing Kube-Prometheus"},{"location":"prometheus/kube-prometheus/#installing","text":"The content of this project consists of a set of jsonnet files making up a library to be consumed. Install this library in your own project with jsonnet-bundler (the jsonnet package manager): $ mkdir my-kube-prometheus ; cd my-kube-prometheus $ jb init # Creates the initial/empty `jsonnetfile.json` # Install the kube-prometheus dependency $ jb install github.com/prometheus-operator/kube-prometheus/jsonnet/kube-prometheus@release-0.4 # Creates `vendor/` & `jsonnetfile.lock.json`, and fills in `jsonnetfile.json` jb can be installed with go get github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb An e.g. of how to install a given version of this library: jb install github.com/prometheus-operator/kube-prometheus/jsonnet/kube-prometheus@release-0.4 In order to update the kube-prometheus dependency, simply use the jsonnet-bundler update functionality: $ jb update","title":"Installing"},{"location":"prometheus/kube-prometheus/#compiling","text":"e.g. of how to compile the manifests: ./build.sh example.jsonnet before compiling, install gojsontoyaml tool with go get github.com/brancz/gojsontoyaml Here's example.jsonnet : Note: some of the following components must be configured beforehand. See configuration and customization-examples . local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + // Uncomment the following imports to enable its patches // (import 'kube-prometheus/kube-prometheus-anti-affinity.libsonnet') + // (import 'kube-prometheus/kube-prometheus-managed-cluster.libsonnet') + // (import 'kube-prometheus/kube-prometheus-node-ports.libsonnet') + // (import 'kube-prometheus/kube-prometheus-static-etcd.libsonnet') + // (import 'kube-prometheus/kube-prometheus-thanos-sidecar.libsonnet') + // (import 'kube-prometheus/kube-prometheus-custom-metrics.libsonnet') + // (import 'kube-prometheus/kube-prometheus-external-metrics.libsonnet') + { _config+:: { namespace: 'monitoring', }, }; { ['setup/0namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['setup/prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.filter((function(name) name != 'serviceMonitor'), std.objectFields(kp.prometheusOperator)) } + // serviceMonitor is separated so that it can be created after the CRDs are ready { 'prometheus-operator-serviceMonitor': kp.prometheusOperator.serviceMonitor } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } And here's the build.sh script (which uses vendor/ to render all manifests in a json structure of {filename: manifest-content} ): #!/usr/bin/env bash # This script uses arg $1 (name of *.jsonnet file to use) to generate the manifests/*.yaml files. set -e set -x # only exit with zero if all commands of the pipeline exit successfully set -o pipefail # Make sure to use project tooling PATH = \" $( pwd ) /tmp/bin: ${ PATH } \" # Make sure to start with a clean 'manifests' dir rm -rf manifests mkdir -p manifests/setup # Calling gojsontoyaml is optional, but we would like to generate yaml, not json jsonnet -J vendor -m manifests \" ${ 1 -example.jsonnet } \" | xargs -I {} sh -c 'cat {} | gojsontoyaml > {}.yaml' -- {} # Make sure to remove json files find manifests -type f ! -name '*.yaml' -delete rm -f kustomization Note you need jsonnet ( go get github.com/google/go-jsonnet/cmd/jsonnet ) and gojsontoyaml ( go get github.com/brancz/gojsontoyaml ) installed to run build.sh . If you just want json output, not yaml, then you can skip the pipe and everything afterwards. This script runs the jsonnet code, then reads each key of the generated json and uses that as the file name, and writes the value of that key to that file, and converts each json manifest to yaml.","title":"Compiling"},{"location":"prometheus/kube-prometheus/#apply-the-kube-prometheus-stack","text":"The previous steps (compilation) has created a bunch of manifest files in the manifest/ folder. Now simply use kubectl to install Prometheus and Grafana as per your configuration: # Update the namespace and CRDs, and then wait for them to be availble before creating the remaining resources $ kubectl apply -f manifests/setup $ kubectl apply -f manifests/ Alternatively, the resources in both folders can be applied with a single command kubectl apply -Rf manifests , but it may be necessary to run the command multiple times for all components to be created successfullly. Check the monitoring namespace (or the namespace you have specific in namespace: ) and make sure the pods are running. Prometheus and Grafana should be up and running soon.","title":"Apply the kube-prometheus stack"},{"location":"prometheus/kube-prometheus/#containerized-installing-and-compiling","text":"If you don't care to have jb nor jsonnet nor gojsontoyaml installed, then use quay.io/coreos/jsonnet-ci container image. Do the following from this kube-prometheus directory: $ docker run --rm -v $( pwd ) : $( pwd ) --workdir $( pwd ) quay.io/coreos/jsonnet-ci jb update $ docker run --rm -v $( pwd ) : $( pwd ) --workdir $( pwd ) quay.io/coreos/jsonnet-ci ./build.sh example.jsonnet","title":"Containerized Installing and Compiling"},{"location":"prometheus/kube-prometheus/#update-from-upstream-project","text":"You may wish to fetch changes made on this project so they are available to you.","title":"Update from upstream project"},{"location":"prometheus/kube-prometheus/#update-jb","text":"jb may have been updated so it's a good idea to get the latest version of this binary: $ go get -u github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb","title":"Update jb"},{"location":"prometheus/kube-prometheus/#update-kube-prometheus","text":"The command below will sync with upstream project: $ jb update","title":"Update kube-prometheus"},{"location":"prometheus/kube-prometheus/#compile-the-manifests-and-apply","text":"Once updated, just follow the instructions under \"Compiling\" and \"Apply the kube-prometheus stack\" to apply the changes to your cluster.","title":"Compile the manifests and apply"},{"location":"prometheus/kube-prometheus/#configuration","text":"Jsonnet has the concept of hidden fields. These are fields, that are not going to be rendered in a result. This is used to configure the kube-prometheus components in jsonnet. In the example jsonnet code of the above Customizing Kube-Prometheus section , you can see an example of this, where the namespace is being configured to be monitoring . In order to not override the whole object, use the +:: construct of jsonnet, to merge objects, this way you can override individual settings, but retain all other settings and defaults. These are the available fields with their respective default values: { _config+:: { namespace: \"default\", versions+:: { alertmanager: \"v0.17.0\", nodeExporter: \"v0.18.1\", kubeStateMetrics: \"v1.5.0\", kubeRbacProxy: \"v0.4.1\", prometheusOperator: \"v0.30.0\", prometheus: \"v2.10.0\", }, imageRepos+:: { prometheus: \"quay.io/prometheus/prometheus\", alertmanager: \"quay.io/prometheus/alertmanager\", kubeStateMetrics: \"quay.io/coreos/kube-state-metrics\", kubeRbacProxy: \"quay.io/brancz/kube-rbac-proxy\", nodeExporter: \"quay.io/prometheus/node-exporter\", prometheusOperator: \"quay.io/prometheus-operator/prometheus-operator\", }, prometheus+:: { names: 'k8s', replicas: 2, rules: {}, }, alertmanager+:: { name: 'main', config: ||| global: resolve_timeout: 5m route: group_by: ['job'] group_wait: 30s group_interval: 5m repeat_interval: 12h receiver: 'null' routes: - match: alertname: Watchdog receiver: 'null' receivers: - name: 'null' |||, replicas: 3, }, kubeStateMetrics+:: { collectors: '', // empty string gets a default set scrapeInterval: '30s', scrapeTimeout: '30s', baseCPU: '100m', baseMemory: '150Mi', }, nodeExporter+:: { port: 9100, }, }, } The grafana definition is located in a different project ( https://github.com/brancz/kubernetes-grafana ), but needed configuration can be customized from the same top level _config field. For example to allow anonymous access to grafana, add the following _config section: grafana+:: { config: { // http://docs.grafana.org/installation/configuration/ sections: { \"auth.anonymous\": {enabled: true}, }, }, },","title":"Configuration"},{"location":"prometheus/kube-prometheus/#customization-examples","text":"Jsonnet is a turing complete language, any logic can be reflected in it. It also has powerful merge functionalities, allowing sophisticated customizations of any kind simply by merging it into the object the library provides.","title":"Customization Examples"},{"location":"prometheus/kube-prometheus/#cluster-creation-tools","text":"A common example is that not all Kubernetes clusters are created exactly the same way, meaning the configuration to monitor them may be slightly different. For kubeadm , bootkube , kops and kubespray clusters there are mixins available to easily configure these: kubeadm: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kubeadm.libsonnet') bootkube: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-bootkube.libsonnet') kops: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kops.libsonnet') kops with CoreDNS: If your kops cluster is using CoreDNS, there is an additional mixin to import. (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kops.libsonnet') + (import 'kube-prometheus/kube-prometheus-kops-coredns.libsonnet') kubespray: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kubespray.libsonnet') kube-aws: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-kube-aws.libsonnet')","title":"Cluster Creation Tools"},{"location":"prometheus/kube-prometheus/#internal-registry","text":"Some Kubernetes installations source all their images from an internal registry. kube-prometheus supports this use case and helps the user synchronize every image it uses to the internal registry and generate manifests pointing at the internal registry. To produce the docker pull/tag/push commands that will synchronize upstream images to internal-registry.com/organization (after having run the jb command to populate the vendor directory): $ jsonnet -J vendor -S --tla-str repository = internal-registry.com/organization sync-to-internal-registry.jsonnet $ docker pull k8s.gcr.io/addon-resizer:1.8.4 $ docker tag k8s.gcr.io/addon-resizer:1.8.4 internal-registry.com/organization/addon-resizer:1.8.4 $ docker push internal-registry.com/organization/addon-resizer:1.8.4 $ docker pull quay.io/prometheus/alertmanager:v0.16.2 $ docker tag quay.io/prometheus/alertmanager:v0.16.2 internal-registry.com/organization/alertmanager:v0.16.2 $ docker push internal-registry.com/organization/alertmanager:v0.16.2 ... The output of this command can be piped to a shell to be executed by appending | sh . Then to generate manifests with internal-registry.com/organization , use the withImageRepository mixin: local mixin = import 'kube-prometheus/kube-prometheus-config-mixins.libsonnet'; local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, } + mixin.withImageRepository('internal-registry.com/organization'); { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Internal Registry"},{"location":"prometheus/kube-prometheus/#nodeports","text":"Another mixin that may be useful for exploring the stack is to expose the UIs of Prometheus, Alertmanager and Grafana on NodePorts: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-node-ports.libsonnet')","title":"NodePorts"},{"location":"prometheus/kube-prometheus/#prometheus-object-name","text":"To give another customization example, the name of the Prometheus object provided by this library can be overridden: ((import 'kube-prometheus/kube-prometheus.libsonnet') + { prometheus+: { prometheus+: { metadata+: { name: 'my-name', }, }, }, }).prometheus.prometheus","title":"Prometheus Object Name"},{"location":"prometheus/kube-prometheus/#node-exporter-daemonset-namespace","text":"Standard Kubernetes manifests are all written using ksonnet-lib , so they can be modified with the mixins supplied by ksonnet-lib. For example to override the namespace of the node-exporter DaemonSet: ((import 'kube-prometheus/kube-prometheus.libsonnet') + { nodeExporter+: { daemonset+: { metadata+: { namespace: 'my-custom-namespace', }, }, }, }).nodeExporter.daemonset","title":"node-exporter DaemonSet namespace"},{"location":"prometheus/kube-prometheus/#alertmanager-configuration","text":"The Alertmanager configuration is located in the _config.alertmanager.config configuration field. In order to set a custom Alertmanager configuration simply set this field. ((import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { alertmanager+: { config: ||| global: resolve_timeout: 10m route: group_by: ['job'] group_wait: 30s group_interval: 5m repeat_interval: 12h receiver: 'null' routes: - match: alertname: Watchdog receiver: 'null' receivers: - name: 'null' |||, }, }, }).alertmanager.secret In the above example the configuration has been inlined, but can just as well be an external file imported in jsonnet via the importstr function. ((import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { alertmanager+: { config: importstr 'alertmanager-config.yaml', }, }, }).alertmanager.secret","title":"Alertmanager configuration"},{"location":"prometheus/kube-prometheus/#adding-additional-namespaces-to-monitor","text":"In order to monitor additional namespaces, the Prometheus server requires the appropriate Role and RoleBinding to be able to discover targets from that namespace. By default the Prometheus server is limited to the three namespaces it requires: default, kube-system and the namespace you configure the stack to run in via $._config.namespace . This is specified in $._config.prometheus.namespaces , to add new namespaces to monitor, simply append the additional namespaces: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces+: ['my-namespace', 'my-second-namespace'], }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Adding additional namespaces to monitor"},{"location":"prometheus/kube-prometheus/#defining-the-servicemonitor-for-each-additional-namespace","text":"In order to Prometheus be able to discovery and scrape services inside the additional namespaces specified in previous step you need to define a ServiceMonitor resource. Typically it is up to the users of a namespace to provision the ServiceMonitor resource, but in case you want to generate it with the same tooling as the rest of the cluster monitoring infrastructure, this is a guide on how to achieve this. You can define ServiceMonitor resources in your jsonnet spec. See the snippet bellow: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces+: ['my-namespace', 'my-second-namespace'], }, }, prometheus+:: { serviceMonitorMyNamespace: { apiVersion: 'monitoring.coreos.com/v1', kind: 'ServiceMonitor', metadata: { name: 'my-servicemonitor', namespace: 'my-namespace', }, spec: { jobLabel: 'app', endpoints: [ { port: 'http-metrics', }, ], selector: { matchLabels: { app: 'myapp', }, }, }, }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } NOTE: make sure your service resources have the right labels (eg. 'app': 'myapp' ) applied. Prometheus uses kubernetes labels to discover resources inside the namespaces.","title":"Defining the ServiceMonitor for each additional Namespace"},{"location":"prometheus/kube-prometheus/#monitoring-all-namespaces","text":"In case you want to monitor all namespaces in a cluster, you can add the following mixin. Also, make sure to empty the namespaces defined in prometheus so that roleBindings are not created against them. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-all-namespaces.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces: [], }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } NOTE: This configuration can potentially make your cluster insecure especially in a multi-tenant cluster. This is because this gives Prometheus visibility over the whole cluster which might not be expected in a scenario when certain namespaces are locked down for security reasons. Proceed with creating ServiceMonitors for the services in the namespaces you actually want to monitor","title":"Monitoring all namespaces"},{"location":"prometheus/kube-prometheus/#static-etcd-configuration","text":"In order to configure a static etcd cluster to scrape there is a simple kube-prometheus-static-etcd.libsonnet mixin prepared - see etcd.jsonnet for an example of how to use that mixin, and Monitoring external etcd for more information. Note that monitoring etcd in minikube is currently not possible because of how etcd is setup. (minikube's etcd binds to 127.0.0.1:2379 only, and within host networking namespace.)","title":"Static etcd configuration"},{"location":"prometheus/kube-prometheus/#pod-anti-affinity","text":"To prevent Prometheus and Alertmanager instances from being deployed onto the same node when possible, one can include the kube-prometheus-anti-affinity.libsonnet mixin: (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-anti-affinity.libsonnet')","title":"Pod Anti-Affinity"},{"location":"prometheus/kube-prometheus/#stripping-container-resource-limits","text":"Sometimes in small clusters, the CPU/memory limits can get high enough for alerts to be fired continuously. To prevent this, one can strip off the predefined limits. To do that, one can import the following mixin local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-strip-limits.libsonnet') + { _config+:: { namespace: 'monitoring', }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Stripping container resource limits"},{"location":"prometheus/kube-prometheus/#customizing-prometheus-alertingrecording-rules-and-grafana-dashboards","text":"See developing Prometheus rules and Grafana dashboards guide.","title":"Customizing Prometheus alerting/recording rules and Grafana dashboards"},{"location":"prometheus/kube-prometheus/#exposing-prometheusalermanagergrafana-via-ingress","text":"See exposing Prometheus/Alertmanager/Grafana guide.","title":"Exposing Prometheus/Alermanager/Grafana via Ingress"},{"location":"prometheus/kube-prometheus/#minikube-example","text":"To use an easy to reproduce example, see minikube.jsonnet , which uses the minikube setup as demonstrated in Prerequisites . Because we would like easy access to our Prometheus, Alertmanager and Grafana UIs, minikube.jsonnet exposes the services as NodePort type services.","title":"Minikube Example"},{"location":"prometheus/kube-prometheus/#continuous-delivery","text":"Working examples of use with continuous delivery tools are found in examples/continuous-delivery.","title":"Continuous Delivery"},{"location":"prometheus/kube-prometheus/#troubleshooting","text":"See the general guidelines for getting support from the community.","title":"Troubleshooting"},{"location":"prometheus/kube-prometheus/#error-retrieving-kubelet-metrics","text":"Should the Prometheus /targets page show kubelet targets, but not able to successfully scrape the metrics, then most likely it is a problem with the authentication and authorization setup of the kubelets. As described in the Prerequisites section, in order to retrieve metrics from the kubelet token authentication and authorization must be enabled. Some Kubernetes setup tools do not enable this by default. If you are using Google's GKE product, see cAdvisor support . If you are using AWS EKS, see AWS EKS CNI support . If you are using Weave Net, see Weave Net support .","title":"Error retrieving kubelet metrics"},{"location":"prometheus/kube-prometheus/#authentication-problem","text":"The Prometheus /targets page will show the kubelet job with the error 403 Unauthorized , when token authentication is not enabled. Ensure, that the --authentication-token-webhook=true flag is enabled on all kubelet configurations.","title":"Authentication problem"},{"location":"prometheus/kube-prometheus/#authorization-problem","text":"The Prometheus /targets page will show the kubelet job with the error 401 Unauthorized , when token authorization is not enabled. Ensure that the --authorization-mode=Webhook flag is enabled on all kubelet configurations.","title":"Authorization problem"},{"location":"prometheus/kube-prometheus/#kube-state-metrics-resource-usage","text":"In some environments, kube-state-metrics may need additional resources. One driver for more resource needs, is a high number of namespaces. There may be others. kube-state-metrics resource allocation is managed by addon-resizer You can control it's parameters by setting variables in the config. They default to: kubeStateMetrics+:: { baseCPU: '100m', cpuPerNode: '2m', baseMemory: '150Mi', memoryPerNode: '30Mi', }","title":"kube-state-metrics resource usage"},{"location":"prometheus/kube-prometheus/#contributing","text":"All .yaml files in the /manifests folder are generated via Jsonnet . Contributing changes will most likely include the following process: Make your changes in the respective *.jsonnet file. Commit your changes (This is currently necessary due to our vendoring process. This is likely to change in the future). Update the pinned kube-prometheus dependency in jsonnetfile.lock.json : jb update Generate dependent *.yaml files: make generate Commit the generated changes.","title":"Contributing"},{"location":"prometheus/kube-prometheus/#license","text":"Apache License 2.0, see LICENSE .","title":"License"},{"location":"prometheus/kube-prometheus/code-of-conduct/","text":"CoreOS Community Code of Conduct \u00b6 Contributor Code of Conduct \u00b6 As contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities. We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality. Examples of unacceptable behavior by participants include: The use of sexualized language or imagery Personal attacks Trolling or insulting/derogatory comments Public or private harassment Publishing others' private information, such as physical or electronic addresses, without explicit permission Other unethical or unprofessional conduct. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team. This code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer, Brandon Philips brandon.philips@coreos.com , and/or Rithu John rithu.john@coreos.com . This Code of Conduct is adapted from the Contributor Covenant ( http://contributor-covenant.org ), version 1.2.0, available at http://contributor-covenant.org/version/1/2/0/ CoreOS Events Code of Conduct \u00b6 CoreOS events are working conferences intended for professional networking and collaboration in the CoreOS community. Attendees are expected to behave according to professional standards and in accordance with their employer\u2019s policies on appropriate workplace behavior. While at CoreOS events or related social networking opportunities, attendees should not engage in discriminatory or offensive speech or actions including but not limited to gender, sexuality, race, age, disability, or religion. Speakers should be especially aware of these concerns. CoreOS does not condone any statements by speakers contrary to these standards. CoreOS reserves the right to deny entrance and/or eject from an event (without refund) any individual found to be engaging in discriminatory or offensive speech or actions. Please bring any concerns to the immediate attention of designated on-site staff, Brandon Philips brandon.philips@coreos.com , and/or Rithu John rithu.john@coreos.com .","title":"Code of conduct"},{"location":"prometheus/kube-prometheus/code-of-conduct/#coreos-community-code-of-conduct","text":"","title":"CoreOS Community Code of Conduct"},{"location":"prometheus/kube-prometheus/code-of-conduct/#contributor-code-of-conduct","text":"As contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities. We are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality. Examples of unacceptable behavior by participants include: The use of sexualized language or imagery Personal attacks Trolling or insulting/derogatory comments Public or private harassment Publishing others' private information, such as physical or electronic addresses, without explicit permission Other unethical or unprofessional conduct. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct. By adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team. This code of conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer, Brandon Philips brandon.philips@coreos.com , and/or Rithu John rithu.john@coreos.com . This Code of Conduct is adapted from the Contributor Covenant ( http://contributor-covenant.org ), version 1.2.0, available at http://contributor-covenant.org/version/1/2/0/","title":"Contributor Code of Conduct"},{"location":"prometheus/kube-prometheus/code-of-conduct/#coreos-events-code-of-conduct","text":"CoreOS events are working conferences intended for professional networking and collaboration in the CoreOS community. Attendees are expected to behave according to professional standards and in accordance with their employer\u2019s policies on appropriate workplace behavior. While at CoreOS events or related social networking opportunities, attendees should not engage in discriminatory or offensive speech or actions including but not limited to gender, sexuality, race, age, disability, or religion. Speakers should be especially aware of these concerns. CoreOS does not condone any statements by speakers contrary to these standards. CoreOS reserves the right to deny entrance and/or eject from an event (without refund) any individual found to be engaging in discriminatory or offensive speech or actions. Please bring any concerns to the immediate attention of designated on-site staff, Brandon Philips brandon.philips@coreos.com , and/or Rithu John rithu.john@coreos.com .","title":"CoreOS Events Code of Conduct"},{"location":"prometheus/kube-prometheus/docs/EKS-cni-support/","text":"CNI monitoring special configuration updates for EKS \u00b6 AWS EKS uses CNI networking plugin for pod networking in Kubernetes using Elastic Network Interfaces on AWS One fatal issue that can occur is that you run out of IP addresses in your eks cluster. (Generally happens due to error configs where pods keep scheduling). You can monitor the awscni using kube-promethus with : local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-eks.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusRules+:: { groups+: [ { name: 'example-group', rules: [ { record: 'aws_eks_available_ip', expr: 'sum by(instance) (awscni_total_ip_addresses) - sum by(instance) (awscni_assigned_ip_addresses) < 10', }, ], }, ], }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } After you have the required yaml file please run kubectl apply -f manifests/prometheus-serviceMonitorAwsEksCNI.yaml","title":"CNI monitoring special configuration updates for EKS"},{"location":"prometheus/kube-prometheus/docs/EKS-cni-support/#cni-monitoring-special-configuration-updates-for-eks","text":"AWS EKS uses CNI networking plugin for pod networking in Kubernetes using Elastic Network Interfaces on AWS One fatal issue that can occur is that you run out of IP addresses in your eks cluster. (Generally happens due to error configs where pods keep scheduling). You can monitor the awscni using kube-promethus with : local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-eks.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusRules+:: { groups+: [ { name: 'example-group', rules: [ { record: 'aws_eks_available_ip', expr: 'sum by(instance) (awscni_total_ip_addresses) - sum by(instance) (awscni_assigned_ip_addresses) < 10', }, ], }, ], }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } After you have the required yaml file please run kubectl apply -f manifests/prometheus-serviceMonitorAwsEksCNI.yaml","title":"CNI monitoring special configuration updates for EKS"},{"location":"prometheus/kube-prometheus/docs/GKE-cadvisor-support/","text":"Kubelet / cAdvisor special configuration updates for GKE \u00b6 Prior to GKE 1.11, the kubelet does not support token authentication. Until it does, Prometheus must use HTTP (not HTTPS) for scraping. You can configure this behavior through kube-prometheus with: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-insecure-kubelet.libsonnet') + { _config+:: { # ... config here } }; Or, you can patch and re-apply your existing manifests with: On linux: sed -i -e 's/https/http/g' manifests/prometheus-serviceMonitorKubelet.yaml On MacOs: sed -i '' -e 's/https/http/g' manifests/prometheus-serviceMonitorKubelet.yaml After you have modified the yaml file please run kubectl apply -f manifests/prometheus-serviceMonitorKubelet.yaml","title":"Kubelet / cAdvisor special configuration updates for GKE"},{"location":"prometheus/kube-prometheus/docs/GKE-cadvisor-support/#kubelet-cadvisor-special-configuration-updates-for-gke","text":"Prior to GKE 1.11, the kubelet does not support token authentication. Until it does, Prometheus must use HTTP (not HTTPS) for scraping. You can configure this behavior through kube-prometheus with: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-insecure-kubelet.libsonnet') + { _config+:: { # ... config here } }; Or, you can patch and re-apply your existing manifests with: On linux: sed -i -e 's/https/http/g' manifests/prometheus-serviceMonitorKubelet.yaml On MacOs: sed -i '' -e 's/https/http/g' manifests/prometheus-serviceMonitorKubelet.yaml After you have modified the yaml file please run kubectl apply -f manifests/prometheus-serviceMonitorKubelet.yaml","title":"Kubelet / cAdvisor special configuration updates for GKE"},{"location":"prometheus/kube-prometheus/docs/community-support/","text":"Community support \u00b6 For bugs, you can use the GitHub issue tracker . For questions, you can use the GitHub discussions forum . Many of the kube-prometheus project's contributors and users can also be found on the #prometheus-operator channel of the Kubernetes Slack . kube-prometheus is the aggregation of many projects that all have different channels to reach out for help and support. This community strives at supporting all users and you should never be afraid of asking us first. However if your request relates specifically to one of the projects listed below, it is often more efficient to reach out to the project directly. If you are unsure, please feel free to open an issue in this repository and we will redirect you if applicable. prometheus-operator \u00b6 For documentation, check the project's documentation directory . For questions, use the #prometheus-operator channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker . Prometheus, Alertmanager, node_exporter \u00b6 For documentation, check the Prometheus online docs . There is a section with links to blog posts, recorded talks and presentations. This repository (not affiliated to the Prometheus project) has also a list of curated resources related to the Prometheus ecosystem. For questions, see the Prometheus community page for the various channels. There is also a #prometheus channel on the CNCF Slack . kube-state-metrics \u00b6 For documentation, see the project's docs directory . For questions, use the #kube-state-metrics channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker . Kubernetes \u00b6 For documentation, check the Kubernetes docs . For questions, use the community forums and the Kubernetes Slack . Check also the community page . For bugs, use the GitHub issue tracker . Prometheus adapter \u00b6 For documentation, check the project's README . For questions, use the #sig-instrumentation channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker . Grafana \u00b6 For documentation, check the Grafana docs . For questions, use the community forums . For bugs, use the GitHub issue tracker . kubernetes-mixin \u00b6 For documentation, check the project's README . For questions, use #monitoring-mixins channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker . Jsonnet \u00b6 For documentation, check the Jsonnet website. For questions, use the mailing list .","title":"Community support"},{"location":"prometheus/kube-prometheus/docs/community-support/#community-support","text":"For bugs, you can use the GitHub issue tracker . For questions, you can use the GitHub discussions forum . Many of the kube-prometheus project's contributors and users can also be found on the #prometheus-operator channel of the Kubernetes Slack . kube-prometheus is the aggregation of many projects that all have different channels to reach out for help and support. This community strives at supporting all users and you should never be afraid of asking us first. However if your request relates specifically to one of the projects listed below, it is often more efficient to reach out to the project directly. If you are unsure, please feel free to open an issue in this repository and we will redirect you if applicable.","title":"Community support"},{"location":"prometheus/kube-prometheus/docs/community-support/#prometheus-operator","text":"For documentation, check the project's documentation directory . For questions, use the #prometheus-operator channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker .","title":"prometheus-operator"},{"location":"prometheus/kube-prometheus/docs/community-support/#prometheus-alertmanager-node_exporter","text":"For documentation, check the Prometheus online docs . There is a section with links to blog posts, recorded talks and presentations. This repository (not affiliated to the Prometheus project) has also a list of curated resources related to the Prometheus ecosystem. For questions, see the Prometheus community page for the various channels. There is also a #prometheus channel on the CNCF Slack .","title":"Prometheus, Alertmanager, node_exporter"},{"location":"prometheus/kube-prometheus/docs/community-support/#kube-state-metrics","text":"For documentation, see the project's docs directory . For questions, use the #kube-state-metrics channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker .","title":"kube-state-metrics"},{"location":"prometheus/kube-prometheus/docs/community-support/#kubernetes","text":"For documentation, check the Kubernetes docs . For questions, use the community forums and the Kubernetes Slack . Check also the community page . For bugs, use the GitHub issue tracker .","title":"Kubernetes"},{"location":"prometheus/kube-prometheus/docs/community-support/#prometheus-adapter","text":"For documentation, check the project's README . For questions, use the #sig-instrumentation channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker .","title":"Prometheus adapter"},{"location":"prometheus/kube-prometheus/docs/community-support/#grafana","text":"For documentation, check the Grafana docs . For questions, use the community forums . For bugs, use the GitHub issue tracker .","title":"Grafana"},{"location":"prometheus/kube-prometheus/docs/community-support/#kubernetes-mixin","text":"For documentation, check the project's README . For questions, use #monitoring-mixins channel on the Kubernetes Slack . For bugs, use the GitHub issue tracker .","title":"kubernetes-mixin"},{"location":"prometheus/kube-prometheus/docs/community-support/#jsonnet","text":"For documentation, check the Jsonnet website. For questions, use the mailing list .","title":"Jsonnet"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/","text":"Developing Prometheus Rules and Grafana Dashboards \u00b6 kube-prometheus ships with a set of default Prometheus rules and Grafana dashboards. At some point one might like to extend them, the purpose of this document is to explain how to do this. All manifests of kube-prometheus are generated using jsonnet and Prometheus rules and Grafana dashboards in specific follow the Prometheus Monitoring Mixins proposal . For both the Prometheus rules and the Grafana dashboards Kubernetes ConfigMap s are generated within kube-prometheus. In order to add additional rules and dashboards simply merge them onto the existing json objects. This document illustrates examples for rules as well as dashboards. As a basis, all examples in this guide are based on the base example of the kube-prometheus readme : local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + // Uncomment the following imports to enable its patches // (import 'kube-prometheus/kube-prometheus-anti-affinity.libsonnet') + // (import 'kube-prometheus/kube-prometheus-managed-cluster.libsonnet') + // (import 'kube-prometheus/kube-prometheus-node-ports.libsonnet') + // (import 'kube-prometheus/kube-prometheus-static-etcd.libsonnet') + // (import 'kube-prometheus/kube-prometheus-thanos-sidecar.libsonnet') + // (import 'kube-prometheus/kube-prometheus-custom-metrics.libsonnet') + // (import 'kube-prometheus/kube-prometheus-external-metrics.libsonnet') + { _config+:: { namespace: 'monitoring', }, }; { ['setup/0namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['setup/prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.filter((function(name) name != 'serviceMonitor'), std.objectFields(kp.prometheusOperator)) } + // serviceMonitor is separated so that it can be created after the CRDs are ready { 'prometheus-operator-serviceMonitor': kp.prometheusOperator.serviceMonitor } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Prometheus rules \u00b6 Alerting rules \u00b6 According to the Prometheus Monitoring Mixins proposal Prometheus alerting rules are under the key prometheusAlerts in the top level object, so in order to add an additional alerting rule, we can simply merge an extra rule into the existing object. The format is exactly the Prometheus format, so there should be no changes necessary should you have existing rules that you want to include. Note that alerts can just as well be included into this file, using the jsonnet import function. In this example it is just inlined in order to demonstrate their use in a single file. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusAlerts+:: { groups+: [ { name: 'example-group', rules: [ { alert: 'Watchdog', expr: 'vector(1)', labels: { severity: 'none', }, annotations: { description: 'This is a Watchdog meant to ensure that the entire alerting pipeline is functional.', }, }, ], }, ], }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Recording rules \u00b6 In order to add a recording rule, simply do the same with the prometheusRules field. Note that rules can just as well be included into this file, using the jsonnet import function. In this example it is just inlined in order to demonstrate their use in a single file. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusRules+:: { groups+: [ { name: 'example-group', rules: [ { record: 'some_recording_rule_name', expr: 'vector(1)', }, ], }, ], }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Pre-rendered rules \u00b6 We acknowledge, that users may need to transition existing rules, and therefore allow an option to add additional pre-rendered rules. Luckily the yaml and json formats are very close so the yaml rules just need to be converted to json without any manual interaction needed. Just a tool to convert yaml to json is needed: go get -u -v github.com/brancz/gojsontoyaml And convert the existing rule file: cat existingrule.yaml | gojsontoyaml -yamltojson > existingrule.json Then import it in jsonnet: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusAlerts+:: { groups+: (import 'existingrule.json').groups, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Changing default rules \u00b6 Along with adding additional rules, we give the user the option to filter or adjust the existing rules imported by kube-prometheus/kube-prometheus.libsonnet . The recording rules can be found in kube-prometheus/rules and kubernetes-mixin/rules while the alerting rules can be found in kube-prometheus/alerts and kubernetes-mixin/alerts . Knowing which rules to change, the user can now use functions from the Jsonnet standard library to make these changes. Below are examples of both a filter and an adjustment being made to the default rules. These changes can be assigned to a local variable and then added to the local kp object as seen in the examples above. Filter \u00b6 Here the alert KubeStatefulSetReplicasMismatch is being filtered out of the group kubernetes-apps . The default rule can be seen here . local filter = { prometheusAlerts+:: { groups: std.map( function(group) if group.name == 'kubernetes-apps' then group { rules: std.filter(function(rule) rule.alert != \"KubeStatefulSetReplicasMismatch\", group.rules ) } else group, super.groups ), }, }; Adjustment \u00b6 Here the expression for the alert used above is updated from its previous value. The default rule can be seen here . local update = { prometheusAlerts+:: { groups: std.map( function(group) if group.name == 'kubernetes-apps' then group { rules: std.map( function(rule) if rule.alert == \"KubeStatefulSetReplicasMismatch\" then rule { expr: \"kube_statefulset_status_replicas_ready{job=\\\"kube-state-metrics\\\",statefulset!=\\\"vault\\\"} != kube_statefulset_status_replicas{job=\\\"kube-state-metrics\\\",statefulset!=\\\"vault\\\"}\" } else rule, group.rules ) } else group, super.groups ), }, }; Using the example from above about adding in pre-rendered rules, the new local variables can be added in as follows: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + filter + update + { prometheusAlerts+:: (import 'existingrule.json'), }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Dashboards \u00b6 Dashboards can either be added using jsonnet or simply a pre-rendered json dashboard. Jsonnet dashboard \u00b6 We recommend using the grafonnet library for jsonnet, which gives you a simple DSL to generate Grafana dashboards. Following the Prometheus Monitoring Mixins proposal additional dashboards are added to the grafanaDashboards key, located in the top level object. To add new jsonnet dashboards, simply add one. Note that dashboards can just as well be included into this file, using the jsonnet import function. In this example it is just inlined in order to demonstrate their use in a single file. local grafana = import 'grafonnet/grafana.libsonnet'; local dashboard = grafana.dashboard; local row = grafana.row; local prometheus = grafana.prometheus; local template = grafana.template; local graphPanel = grafana.graphPanel; local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, grafana+:: { dashboards+:: { 'my-dashboard.json': dashboard.new('My Dashboard') .addTemplate( { current: { text: 'Prometheus', value: 'Prometheus', }, hide: 0, label: null, name: 'datasource', options: [], query: 'prometheus', refresh: 1, regex: '', type: 'datasource', }, ) .addRow( row.new() .addPanel(graphPanel.new('My Panel', span=6, datasource='$datasource') .addTarget(prometheus.target('vector(1)'))) ), }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } Pre-rendered Grafana dashboards \u00b6 As jsonnet is a superset of json, the jsonnet import function can be used to include Grafana dashboard json blobs. In this example we are importing a provided example dashboard . local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, grafanaDashboards+:: { // monitoring-mixin compatibility 'my-dashboard.json': (import 'example-grafana-dashboard.json'), }, grafana+:: { dashboards+:: { // use this method to import your dashboards to Grafana 'my-dashboard.json': (import 'example-grafana-dashboard.json'), }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } In case you have lots of json dashboard exported out from grafana UI the above approach is going to take lots of time to improve performance we can use rawDashboards field and provide it's value as json string by using importstr local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, grafana+:: { rawDashboards+:: { 'my-dashboard.json': (importstr 'example-grafana-dashboard.json'), }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Developing Prometheus Rules and Grafana Dashboards"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#developing-prometheus-rules-and-grafana-dashboards","text":"kube-prometheus ships with a set of default Prometheus rules and Grafana dashboards. At some point one might like to extend them, the purpose of this document is to explain how to do this. All manifests of kube-prometheus are generated using jsonnet and Prometheus rules and Grafana dashboards in specific follow the Prometheus Monitoring Mixins proposal . For both the Prometheus rules and the Grafana dashboards Kubernetes ConfigMap s are generated within kube-prometheus. In order to add additional rules and dashboards simply merge them onto the existing json objects. This document illustrates examples for rules as well as dashboards. As a basis, all examples in this guide are based on the base example of the kube-prometheus readme : local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + // Uncomment the following imports to enable its patches // (import 'kube-prometheus/kube-prometheus-anti-affinity.libsonnet') + // (import 'kube-prometheus/kube-prometheus-managed-cluster.libsonnet') + // (import 'kube-prometheus/kube-prometheus-node-ports.libsonnet') + // (import 'kube-prometheus/kube-prometheus-static-etcd.libsonnet') + // (import 'kube-prometheus/kube-prometheus-thanos-sidecar.libsonnet') + // (import 'kube-prometheus/kube-prometheus-custom-metrics.libsonnet') + // (import 'kube-prometheus/kube-prometheus-external-metrics.libsonnet') + { _config+:: { namespace: 'monitoring', }, }; { ['setup/0namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['setup/prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.filter((function(name) name != 'serviceMonitor'), std.objectFields(kp.prometheusOperator)) } + // serviceMonitor is separated so that it can be created after the CRDs are ready { 'prometheus-operator-serviceMonitor': kp.prometheusOperator.serviceMonitor } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Developing Prometheus Rules and Grafana Dashboards"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#prometheus-rules","text":"","title":"Prometheus rules"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#alerting-rules","text":"According to the Prometheus Monitoring Mixins proposal Prometheus alerting rules are under the key prometheusAlerts in the top level object, so in order to add an additional alerting rule, we can simply merge an extra rule into the existing object. The format is exactly the Prometheus format, so there should be no changes necessary should you have existing rules that you want to include. Note that alerts can just as well be included into this file, using the jsonnet import function. In this example it is just inlined in order to demonstrate their use in a single file. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusAlerts+:: { groups+: [ { name: 'example-group', rules: [ { alert: 'Watchdog', expr: 'vector(1)', labels: { severity: 'none', }, annotations: { description: 'This is a Watchdog meant to ensure that the entire alerting pipeline is functional.', }, }, ], }, ], }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Alerting rules"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#recording-rules","text":"In order to add a recording rule, simply do the same with the prometheusRules field. Note that rules can just as well be included into this file, using the jsonnet import function. In this example it is just inlined in order to demonstrate their use in a single file. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusRules+:: { groups+: [ { name: 'example-group', rules: [ { record: 'some_recording_rule_name', expr: 'vector(1)', }, ], }, ], }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Recording rules"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#pre-rendered-rules","text":"We acknowledge, that users may need to transition existing rules, and therefore allow an option to add additional pre-rendered rules. Luckily the yaml and json formats are very close so the yaml rules just need to be converted to json without any manual interaction needed. Just a tool to convert yaml to json is needed: go get -u -v github.com/brancz/gojsontoyaml And convert the existing rule file: cat existingrule.yaml | gojsontoyaml -yamltojson > existingrule.json Then import it in jsonnet: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusAlerts+:: { groups+: (import 'existingrule.json').groups, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Pre-rendered rules"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#changing-default-rules","text":"Along with adding additional rules, we give the user the option to filter or adjust the existing rules imported by kube-prometheus/kube-prometheus.libsonnet . The recording rules can be found in kube-prometheus/rules and kubernetes-mixin/rules while the alerting rules can be found in kube-prometheus/alerts and kubernetes-mixin/alerts . Knowing which rules to change, the user can now use functions from the Jsonnet standard library to make these changes. Below are examples of both a filter and an adjustment being made to the default rules. These changes can be assigned to a local variable and then added to the local kp object as seen in the examples above.","title":"Changing default rules"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#filter","text":"Here the alert KubeStatefulSetReplicasMismatch is being filtered out of the group kubernetes-apps . The default rule can be seen here . local filter = { prometheusAlerts+:: { groups: std.map( function(group) if group.name == 'kubernetes-apps' then group { rules: std.filter(function(rule) rule.alert != \"KubeStatefulSetReplicasMismatch\", group.rules ) } else group, super.groups ), }, };","title":"Filter"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#adjustment","text":"Here the expression for the alert used above is updated from its previous value. The default rule can be seen here . local update = { prometheusAlerts+:: { groups: std.map( function(group) if group.name == 'kubernetes-apps' then group { rules: std.map( function(rule) if rule.alert == \"KubeStatefulSetReplicasMismatch\" then rule { expr: \"kube_statefulset_status_replicas_ready{job=\\\"kube-state-metrics\\\",statefulset!=\\\"vault\\\"} != kube_statefulset_status_replicas{job=\\\"kube-state-metrics\\\",statefulset!=\\\"vault\\\"}\" } else rule, group.rules ) } else group, super.groups ), }, }; Using the example from above about adding in pre-rendered rules, the new local variables can be added in as follows: local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + filter + update + { prometheusAlerts+:: (import 'existingrule.json'), }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Adjustment"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#dashboards","text":"Dashboards can either be added using jsonnet or simply a pre-rendered json dashboard.","title":"Dashboards"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#jsonnet-dashboard","text":"We recommend using the grafonnet library for jsonnet, which gives you a simple DSL to generate Grafana dashboards. Following the Prometheus Monitoring Mixins proposal additional dashboards are added to the grafanaDashboards key, located in the top level object. To add new jsonnet dashboards, simply add one. Note that dashboards can just as well be included into this file, using the jsonnet import function. In this example it is just inlined in order to demonstrate their use in a single file. local grafana = import 'grafonnet/grafana.libsonnet'; local dashboard = grafana.dashboard; local row = grafana.row; local prometheus = grafana.prometheus; local template = grafana.template; local graphPanel = grafana.graphPanel; local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, grafana+:: { dashboards+:: { 'my-dashboard.json': dashboard.new('My Dashboard') .addTemplate( { current: { text: 'Prometheus', value: 'Prometheus', }, hide: 0, label: null, name: 'datasource', options: [], query: 'prometheus', refresh: 1, regex: '', type: 'datasource', }, ) .addRow( row.new() .addPanel(graphPanel.new('My Panel', span=6, datasource='$datasource') .addTarget(prometheus.target('vector(1)'))) ), }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Jsonnet dashboard"},{"location":"prometheus/kube-prometheus/docs/developing-prometheus-rules-and-grafana-dashboards/#pre-rendered-grafana-dashboards","text":"As jsonnet is a superset of json, the jsonnet import function can be used to include Grafana dashboard json blobs. In this example we are importing a provided example dashboard . local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, grafanaDashboards+:: { // monitoring-mixin compatibility 'my-dashboard.json': (import 'example-grafana-dashboard.json'), }, grafana+:: { dashboards+:: { // use this method to import your dashboards to Grafana 'my-dashboard.json': (import 'example-grafana-dashboard.json'), }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } In case you have lots of json dashboard exported out from grafana UI the above approach is going to take lots of time to improve performance we can use rawDashboards field and provide it's value as json string by using importstr local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, grafana+:: { rawDashboards+:: { 'my-dashboard.json': (importstr 'example-grafana-dashboard.json'), }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Pre-rendered Grafana dashboards"},{"location":"prometheus/kube-prometheus/docs/exposing-prometheus-alertmanager-grafana-ingress/","text":"Exposing Prometheus, Alertmanager and Grafana UIs via Ingress \u00b6 In order to access the web interfaces via the Internet Kubernetes Ingress is a popular option. This guide explains, how Kubernetes Ingress can be setup, in order to expose the Prometheus, Alertmanager and Grafana UIs, that are included in the kube-prometheus project. Note: before continuing, it is recommended to first get familiar with the kube-prometheus stack by itself. Prerequisites \u00b6 Apart from a running Kubernetes cluster with a running kube-prometheus stack, a Kubernetes Ingress controller must be installed and functional. This guide was tested with the nginx-ingress-controller . If you wish to reproduce the exact result in as depicted in this guide we recommend using the nginx-ingress-controller. Setting up Ingress \u00b6 The setup of Ingress objects is the same for Prometheus, Alertmanager and Grafana. Therefore this guides demonstrates it in detail for Prometheus as it can easily be adapted for the other applications. As monitoring data may contain sensitive data, this guide describes how to setup Ingress with basic auth as an example of minimal security. Of course this should be adapted to the preferred authentication mean of any particular organization, but we feel it is important to at least provide an example with a minimum of security. In order to setup basic auth, a secret with the htpasswd formatted file needs to be created. To do this, first install the htpasswd tool. To create the htpasswd formatted file called auth run: htpasswd -c auth <username> In order to use this a secret needs to be created containing the name of the htpasswd , and with annotations on the Ingress object basic auth can be configured. Also, the applications provide external links to themselves in alerts and various places. When an ingress is used in front of the applications these links need to be based on the external URL's. This can be configured for each application in jsonnet. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheus+:: { prometheus+: { spec+: { externalUrl: 'http://prometheus.example.com', }, }, }, ingress+:: { 'prometheus-k8s': { apiVersion: 'networking.k8s.io/v1', kind: 'Ingress', metadata: { name: $.prometheus.prometheus.metadata.name, namespace: $.prometheus.prometheus.metadata.namespace, annotations: { 'nginx.ingress.kubernetes.io/auth-type': 'basic', 'nginx.ingress.kubernetes.io/auth-secret': 'basic-auth', 'nginx.ingress.kubernetes.io/auth-realm': 'Authentication Required', }, }, spec: { rules: [{ host: 'prometheus.example.com', http: { paths: [{ backend: { service: { name: $.prometheus.service.metadata.name, port: 'web', }, }, }], }, }], }, }, } + { ingress+:: { 'basic-auth-secret': { apiVersion: 'v1', kind: 'Secret', metadata: { name: 'basic-auth', namespace: $._config.namespace, }, data: { auth: std.base64(importstr 'auth') }, type: 'Opaque', }, }, }; k.core.v1.list.new([ kp.ingress['prometheus-k8s'], kp.ingress['basic-auth-secret'], ]) In order to expose Alertmanager and Grafana, simply create additional fields containing an ingress object, but simply pointing at the alertmanager or grafana instead of the prometheus-k8s Service. Make sure to also use the correct port respectively, for Alertmanager it is also web , for Grafana it is http . Be sure to also specify the appropriate external URL. Note that the external URL for grafana is set in a different way than the external URL for Prometheus or Alertmanager. See ingress.jsonnet for how to set the Grafana external URL. In order to render the ingress objects similar to the other objects use as demonstrated in the main readme : { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } + { ['ingress-' + name]: kp.ingress[name] for name in std.objectFields(kp.ingress) } Note, that in comparison only the last line was added, the rest is identical to the original. See ingress.jsonnet for an example implementation.","title":"Exposing Prometheus, Alertmanager and Grafana UIs via Ingress"},{"location":"prometheus/kube-prometheus/docs/exposing-prometheus-alertmanager-grafana-ingress/#exposing-prometheus-alertmanager-and-grafana-uis-via-ingress","text":"In order to access the web interfaces via the Internet Kubernetes Ingress is a popular option. This guide explains, how Kubernetes Ingress can be setup, in order to expose the Prometheus, Alertmanager and Grafana UIs, that are included in the kube-prometheus project. Note: before continuing, it is recommended to first get familiar with the kube-prometheus stack by itself.","title":"Exposing Prometheus, Alertmanager and Grafana UIs via Ingress"},{"location":"prometheus/kube-prometheus/docs/exposing-prometheus-alertmanager-grafana-ingress/#prerequisites","text":"Apart from a running Kubernetes cluster with a running kube-prometheus stack, a Kubernetes Ingress controller must be installed and functional. This guide was tested with the nginx-ingress-controller . If you wish to reproduce the exact result in as depicted in this guide we recommend using the nginx-ingress-controller.","title":"Prerequisites"},{"location":"prometheus/kube-prometheus/docs/exposing-prometheus-alertmanager-grafana-ingress/#setting-up-ingress","text":"The setup of Ingress objects is the same for Prometheus, Alertmanager and Grafana. Therefore this guides demonstrates it in detail for Prometheus as it can easily be adapted for the other applications. As monitoring data may contain sensitive data, this guide describes how to setup Ingress with basic auth as an example of minimal security. Of course this should be adapted to the preferred authentication mean of any particular organization, but we feel it is important to at least provide an example with a minimum of security. In order to setup basic auth, a secret with the htpasswd formatted file needs to be created. To do this, first install the htpasswd tool. To create the htpasswd formatted file called auth run: htpasswd -c auth <username> In order to use this a secret needs to be created containing the name of the htpasswd , and with annotations on the Ingress object basic auth can be configured. Also, the applications provide external links to themselves in alerts and various places. When an ingress is used in front of the applications these links need to be based on the external URL's. This can be configured for each application in jsonnet. local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheus+:: { prometheus+: { spec+: { externalUrl: 'http://prometheus.example.com', }, }, }, ingress+:: { 'prometheus-k8s': { apiVersion: 'networking.k8s.io/v1', kind: 'Ingress', metadata: { name: $.prometheus.prometheus.metadata.name, namespace: $.prometheus.prometheus.metadata.namespace, annotations: { 'nginx.ingress.kubernetes.io/auth-type': 'basic', 'nginx.ingress.kubernetes.io/auth-secret': 'basic-auth', 'nginx.ingress.kubernetes.io/auth-realm': 'Authentication Required', }, }, spec: { rules: [{ host: 'prometheus.example.com', http: { paths: [{ backend: { service: { name: $.prometheus.service.metadata.name, port: 'web', }, }, }], }, }], }, }, } + { ingress+:: { 'basic-auth-secret': { apiVersion: 'v1', kind: 'Secret', metadata: { name: 'basic-auth', namespace: $._config.namespace, }, data: { auth: std.base64(importstr 'auth') }, type: 'Opaque', }, }, }; k.core.v1.list.new([ kp.ingress['prometheus-k8s'], kp.ingress['basic-auth-secret'], ]) In order to expose Alertmanager and Grafana, simply create additional fields containing an ingress object, but simply pointing at the alertmanager or grafana instead of the prometheus-k8s Service. Make sure to also use the correct port respectively, for Alertmanager it is also web , for Grafana it is http . Be sure to also specify the appropriate external URL. Note that the external URL for grafana is set in a different way than the external URL for Prometheus or Alertmanager. See ingress.jsonnet for how to set the Grafana external URL. In order to render the ingress objects similar to the other objects use as demonstrated in the main readme : { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } + { ['ingress-' + name]: kp.ingress[name] for name in std.objectFields(kp.ingress) } Note, that in comparison only the last line was added, the rest is identical to the original. See ingress.jsonnet for an example implementation.","title":"Setting up Ingress"},{"location":"prometheus/kube-prometheus/docs/kube-prometheus-on-kubeadm/","text":"Note: Starting with v0.12.0, Prometheus Operator requires use of Kubernetes v1.7.x and up. Kube Prometheus on Kubeadm \u00b6 The kubeadm tool is linked by Kubernetes as the offical way to deploy and manage self-hosted clusters. Kubeadm does a lot of heavy lifting by automatically configuring your Kubernetes cluster with some common options. This guide is intended to show you how to deploy Prometheus, Prometheus Operator and Kube Prometheus to get you started monitoring your cluster that was deployed with Kubeadm. This guide assumes you have a basic understanding of how to use the functionality the Prometheus Operator implements. If you haven't yet, we recommend reading through the getting started guide as well as the alerting guide . Kubeadm Pre-requisites \u00b6 This guide assumes you have some familiarity with kubeadm or at least have deployed a cluster using kubeadm . By default, kubeadm does not expose two of the services that we will be monitoring. Therefore, in order to get the most out of the kube-prometheus package, we need to make some quick tweaks to the Kubernetes cluster. Since we will be monitoring the kube-controller-manager and kube-scheduler , we must expose them to the cluster. By default, kubeadm runs these pods on your master and bound to 127.0.0.1 . There are a couple of ways to change this. The recommended way to change these features is to use the kubeadm config file . An example configuration file can be used: apiVersion : kubeadm.k8s.io/v1alpha1 kind : MasterConfiguration api : advertiseAddress : 192.168.1.173 bindPort : 6443 authorizationModes : - Node - RBAC certificatesDir : /etc/kubernetes/pki cloudProvider : etcd : dataDir : /var/lib/etcd endpoints : null imageRepository : gcr.io/google_containers kubernetesVersion : v1.8.3 networking : dnsDomain : cluster.local serviceSubnet : 10.96.0.0/12 nodeName : your-dev tokenTTL : 24h0m0s controllerManagerExtraArgs : address : 0.0.0.0 schedulerExtraArgs : address : 0.0.0.0 Notice the schedulerExtraArgs and controllerManagerExtraArgs . This exposes the kube-controller-manager and kube-scheduler services to the rest of the cluster. If you have kubernetes core components as pods in the kube-system namespace, ensure that the kube-prometheus-exporter-kube-scheduler and kube-prometheus-exporter-kube-controller-manager services' spec.selector values match those of pods. In addition, we will be using node-exporter to monitor the cAdvisor service on all the nodes. This, however requires a change to the kubelet service on the master as well as all the nodes. According to the Kubernetes documentation The kubeadm deb package ships with configuration for how the kubelet should be run. Note that the kubeadm CLI command will never touch this drop-in file. This drop-in file belongs to the kubeadm deb/rpm package. Again, we need to expose the cadvisor that is installed and managed by the kubelet daemon and allow webhook token authentication. To do so, we do the following on all the masters and nodes: KUBEADM_SYSTEMD_CONF = /etc/systemd/system/kubelet.service.d/10-kubeadm.conf sed -e \"/cadvisor-port=0/d\" -i \" $KUBEADM_SYSTEMD_CONF \" if ! grep -q \"authentication-token-webhook=true\" \" $KUBEADM_SYSTEMD_CONF \" ; then sed -e \"s/--authorization-mode=Webhook/--authentication-token-webhook=true --authorization-mode=Webhook/\" -i \" $KUBEADM_SYSTEMD_CONF \" fi systemctl daemon-reload systemctl restart kubelet In case you already have a Kubernetes deployed with kubeadm, change the address kube-controller-manager and kube-scheduler listens in addition to previous kubelet change: sed -e \"s/- --address=127.0.0.1/- --address=0.0.0.0/\" -i /etc/kubernetes/manifests/kube-controller-manager.yaml sed -e \"s/- --address=127.0.0.1/- --address=0.0.0.0/\" -i /etc/kubernetes/manifests/kube-scheduler.yaml With these changes, your Kubernetes cluster is ready. Metric Sources \u00b6 Monitoring a Kubernetes cluster with Prometheus is a natural choice as Kubernetes components themselves are instrumented with Prometheus metrics, therefore those components simply have to be discovered by Prometheus and most of the cluster is monitored. Metrics that are rather about cluster state than a single component's metrics is exposed by the add-on component kube-state-metrics . Additionally, to have an overview of cluster nodes' resources the Prometheus node_exporter is used. The node_exporter allows monitoring a node's resources: CPU, memory and disk utilization and more. Once you complete this guide you will monitor the following: cluster state via kube-state-metrics nodes via the node_exporter kubelets apiserver kube-scheduler kube-controller-manager Getting Up and Running Fast with Kube-Prometheus \u00b6 To help get started more quickly with monitoring Kubernetes clusters, kube-prometheus was created. It is a collection of manifests including dashboards and alerting rules that can easily be deployed. It utilizes the Prometheus Operator and all the manifests demonstrated in this guide. This section represent a quick installation and is not intended to teach you about all the components. The easiest way to get started is to clone this repository and use the kube-prometheus section of the code. git clone https://github.com/coreos/kube-prometheus cd kube-prometheus/ First, create the namespace in which you want the monitoring tool suite to be running. export NAMESPACE='monitoring' kubectl create namespace \"$NAMESPACE\" Now we will create the components for the Prometheus operator kubectl --namespace=\"$NAMESPACE\" apply -f manifests/prometheus-operator This will create all the Prometheus Operator components. You might need to wait a short amount of time before the Custom Resource Definitions are available in the cluster. You can wait for them: until kubectl --namespace=\"$NAMESPACE\" get alertmanagers.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf \".\"; done Next, we will install the node exporter and then kube-state-metrics: kubectl --namespace=\"$NAMESPACE\" apply -f manifests/node-exporter kubectl --namespace=\"$NAMESPACE\" apply -f manifests/kube-state-metrics Then, we can deploy the grafana credentials. By default, the username/password will be admin/admin , you should change these for your production clusters. kubectl --namespace=\"$NAMESPACE\" apply -f manifests/grafana/grafana-credentials.yaml Then install grafana itself: kubectl --namespace=\"$NAMESPACE\" apply -f manifests/grafana Next up is the Prometheus object itself. We will deploy the application, and then the roles/role-bindings. find manifests/prometheus -type f ! -name prometheus-k8s-roles.yaml ! -name prometheus-k8s-role-bindings.yaml -exec kubectl --namespace \"$NAMESPACE\" apply -f {} \\; kubectl apply -f manifests/prometheus/prometheus-k8s-roles.yaml kubectl apply -f manifests/prometheus/prometheus-k8s-role-bindings.yaml Finally, install the Alertmanager kubectl --namespace=\"$NAMESPACE\" apply -f manifests/alertmanager Now you should have a working cluster. After all the pods are ready, you should be able to reach: Prometheus UI on node port 30900 Alertmanager UI on node port 30903 Grafana on node port 30902 These can of course be changed via the Service definitions. It is recommended to look at the Exposing Prometheus and Alert Manager documentation for more detailed information on how to expose these services.","title":"Kube prometheus on kubeadm"},{"location":"prometheus/kube-prometheus/docs/kube-prometheus-on-kubeadm/#kube-prometheus-on-kubeadm","text":"The kubeadm tool is linked by Kubernetes as the offical way to deploy and manage self-hosted clusters. Kubeadm does a lot of heavy lifting by automatically configuring your Kubernetes cluster with some common options. This guide is intended to show you how to deploy Prometheus, Prometheus Operator and Kube Prometheus to get you started monitoring your cluster that was deployed with Kubeadm. This guide assumes you have a basic understanding of how to use the functionality the Prometheus Operator implements. If you haven't yet, we recommend reading through the getting started guide as well as the alerting guide .","title":"Kube Prometheus on Kubeadm"},{"location":"prometheus/kube-prometheus/docs/kube-prometheus-on-kubeadm/#kubeadm-pre-requisites","text":"This guide assumes you have some familiarity with kubeadm or at least have deployed a cluster using kubeadm . By default, kubeadm does not expose two of the services that we will be monitoring. Therefore, in order to get the most out of the kube-prometheus package, we need to make some quick tweaks to the Kubernetes cluster. Since we will be monitoring the kube-controller-manager and kube-scheduler , we must expose them to the cluster. By default, kubeadm runs these pods on your master and bound to 127.0.0.1 . There are a couple of ways to change this. The recommended way to change these features is to use the kubeadm config file . An example configuration file can be used: apiVersion : kubeadm.k8s.io/v1alpha1 kind : MasterConfiguration api : advertiseAddress : 192.168.1.173 bindPort : 6443 authorizationModes : - Node - RBAC certificatesDir : /etc/kubernetes/pki cloudProvider : etcd : dataDir : /var/lib/etcd endpoints : null imageRepository : gcr.io/google_containers kubernetesVersion : v1.8.3 networking : dnsDomain : cluster.local serviceSubnet : 10.96.0.0/12 nodeName : your-dev tokenTTL : 24h0m0s controllerManagerExtraArgs : address : 0.0.0.0 schedulerExtraArgs : address : 0.0.0.0 Notice the schedulerExtraArgs and controllerManagerExtraArgs . This exposes the kube-controller-manager and kube-scheduler services to the rest of the cluster. If you have kubernetes core components as pods in the kube-system namespace, ensure that the kube-prometheus-exporter-kube-scheduler and kube-prometheus-exporter-kube-controller-manager services' spec.selector values match those of pods. In addition, we will be using node-exporter to monitor the cAdvisor service on all the nodes. This, however requires a change to the kubelet service on the master as well as all the nodes. According to the Kubernetes documentation The kubeadm deb package ships with configuration for how the kubelet should be run. Note that the kubeadm CLI command will never touch this drop-in file. This drop-in file belongs to the kubeadm deb/rpm package. Again, we need to expose the cadvisor that is installed and managed by the kubelet daemon and allow webhook token authentication. To do so, we do the following on all the masters and nodes: KUBEADM_SYSTEMD_CONF = /etc/systemd/system/kubelet.service.d/10-kubeadm.conf sed -e \"/cadvisor-port=0/d\" -i \" $KUBEADM_SYSTEMD_CONF \" if ! grep -q \"authentication-token-webhook=true\" \" $KUBEADM_SYSTEMD_CONF \" ; then sed -e \"s/--authorization-mode=Webhook/--authentication-token-webhook=true --authorization-mode=Webhook/\" -i \" $KUBEADM_SYSTEMD_CONF \" fi systemctl daemon-reload systemctl restart kubelet In case you already have a Kubernetes deployed with kubeadm, change the address kube-controller-manager and kube-scheduler listens in addition to previous kubelet change: sed -e \"s/- --address=127.0.0.1/- --address=0.0.0.0/\" -i /etc/kubernetes/manifests/kube-controller-manager.yaml sed -e \"s/- --address=127.0.0.1/- --address=0.0.0.0/\" -i /etc/kubernetes/manifests/kube-scheduler.yaml With these changes, your Kubernetes cluster is ready.","title":"Kubeadm Pre-requisites"},{"location":"prometheus/kube-prometheus/docs/kube-prometheus-on-kubeadm/#metric-sources","text":"Monitoring a Kubernetes cluster with Prometheus is a natural choice as Kubernetes components themselves are instrumented with Prometheus metrics, therefore those components simply have to be discovered by Prometheus and most of the cluster is monitored. Metrics that are rather about cluster state than a single component's metrics is exposed by the add-on component kube-state-metrics . Additionally, to have an overview of cluster nodes' resources the Prometheus node_exporter is used. The node_exporter allows monitoring a node's resources: CPU, memory and disk utilization and more. Once you complete this guide you will monitor the following: cluster state via kube-state-metrics nodes via the node_exporter kubelets apiserver kube-scheduler kube-controller-manager","title":"Metric Sources"},{"location":"prometheus/kube-prometheus/docs/kube-prometheus-on-kubeadm/#getting-up-and-running-fast-with-kube-prometheus","text":"To help get started more quickly with monitoring Kubernetes clusters, kube-prometheus was created. It is a collection of manifests including dashboards and alerting rules that can easily be deployed. It utilizes the Prometheus Operator and all the manifests demonstrated in this guide. This section represent a quick installation and is not intended to teach you about all the components. The easiest way to get started is to clone this repository and use the kube-prometheus section of the code. git clone https://github.com/coreos/kube-prometheus cd kube-prometheus/ First, create the namespace in which you want the monitoring tool suite to be running. export NAMESPACE='monitoring' kubectl create namespace \"$NAMESPACE\" Now we will create the components for the Prometheus operator kubectl --namespace=\"$NAMESPACE\" apply -f manifests/prometheus-operator This will create all the Prometheus Operator components. You might need to wait a short amount of time before the Custom Resource Definitions are available in the cluster. You can wait for them: until kubectl --namespace=\"$NAMESPACE\" get alertmanagers.monitoring.coreos.com > /dev/null 2>&1; do sleep 1; printf \".\"; done Next, we will install the node exporter and then kube-state-metrics: kubectl --namespace=\"$NAMESPACE\" apply -f manifests/node-exporter kubectl --namespace=\"$NAMESPACE\" apply -f manifests/kube-state-metrics Then, we can deploy the grafana credentials. By default, the username/password will be admin/admin , you should change these for your production clusters. kubectl --namespace=\"$NAMESPACE\" apply -f manifests/grafana/grafana-credentials.yaml Then install grafana itself: kubectl --namespace=\"$NAMESPACE\" apply -f manifests/grafana Next up is the Prometheus object itself. We will deploy the application, and then the roles/role-bindings. find manifests/prometheus -type f ! -name prometheus-k8s-roles.yaml ! -name prometheus-k8s-role-bindings.yaml -exec kubectl --namespace \"$NAMESPACE\" apply -f {} \\; kubectl apply -f manifests/prometheus/prometheus-k8s-roles.yaml kubectl apply -f manifests/prometheus/prometheus-k8s-role-bindings.yaml Finally, install the Alertmanager kubectl --namespace=\"$NAMESPACE\" apply -f manifests/alertmanager Now you should have a working cluster. After all the pods are ready, you should be able to reach: Prometheus UI on node port 30900 Alertmanager UI on node port 30903 Grafana on node port 30902 These can of course be changed via the Service definitions. It is recommended to look at the Exposing Prometheus and Alert Manager documentation for more detailed information on how to expose these services.","title":"Getting Up and Running Fast with Kube-Prometheus"},{"location":"prometheus/kube-prometheus/docs/monitoring-external-etcd/","text":"Monitoring external etcd \u00b6 This guide will help you monitor an external etcd cluster. When the etcd cluster is not hosted inside Kubernetes. This is often the case with Kubernetes setups. This approach has been tested with kube-aws but the same principals apply to other tools. Note that etcd.jsonnet & kube-prometheus-static-etcd.libsonnet (which are described by a section of the Readme ) do the following: * Put the three etcd TLS client files (CA & cert & key) into a secret in the namespace, and have Prometheus Operator load the secret. * Create the following (to expose etcd metrics - port 2379): a Service, Endpoint, & ServiceMonitor. Step 1: Open the port \u00b6 You now need to allow the nodes Prometheus are running on to talk to the etcd on the port 2379 (if 2379 is the port used by etcd to expose the metrics) If using kube-aws, you will need to edit the etcd security group inbound, specifying the security group of your Kubernetes node (worker) as the source. kube-aws and EIP or ENI inconsistency \u00b6 With kube-aws, each etcd node has two IP addresses: EC2 instance IP EIP or ENI (depending on the chosen method in yuour cluster.yaml) For some reason, some etcd node answer to :2379/metrics on the intance IP (eth0), some others on the EIP|ENI address (eth1). See issue https://github.com/kubernetes-incubator/kube-aws/issues/923 It would be of course much better if we could hit the EPI/ENI all the time as they don't change even if the underlying EC2 intance goes down. If specifying the Instance IP (eth0) in the Prometheus Operator ServiceMonitor, and the EC2 intance goes down, one would have to update the ServiceMonitor. Another idea woud be to use the DNS entries of etcd, but those are not currently supported for EndPoints objects in Kubernetes. Step 2: verify \u00b6 Go to the Prometheus UI on :9090/config and check that you have an etcd job entry: - job_name: monitoring/etcd-k8s/0 scrape_interval: 30s scrape_timeout: 10s ... On the :9090/targets page: * You should see \"etcd\" with the UP state. If not, check the Error column for more information. * If no \"etcd\" targets are even shown on this page, prometheus isn't attempting to scrape it.","title":"Monitoring external etcd"},{"location":"prometheus/kube-prometheus/docs/monitoring-external-etcd/#monitoring-external-etcd","text":"This guide will help you monitor an external etcd cluster. When the etcd cluster is not hosted inside Kubernetes. This is often the case with Kubernetes setups. This approach has been tested with kube-aws but the same principals apply to other tools. Note that etcd.jsonnet & kube-prometheus-static-etcd.libsonnet (which are described by a section of the Readme ) do the following: * Put the three etcd TLS client files (CA & cert & key) into a secret in the namespace, and have Prometheus Operator load the secret. * Create the following (to expose etcd metrics - port 2379): a Service, Endpoint, & ServiceMonitor.","title":"Monitoring external etcd"},{"location":"prometheus/kube-prometheus/docs/monitoring-external-etcd/#step-1-open-the-port","text":"You now need to allow the nodes Prometheus are running on to talk to the etcd on the port 2379 (if 2379 is the port used by etcd to expose the metrics) If using kube-aws, you will need to edit the etcd security group inbound, specifying the security group of your Kubernetes node (worker) as the source.","title":"Step 1: Open the port"},{"location":"prometheus/kube-prometheus/docs/monitoring-external-etcd/#kube-aws-and-eip-or-eni-inconsistency","text":"With kube-aws, each etcd node has two IP addresses: EC2 instance IP EIP or ENI (depending on the chosen method in yuour cluster.yaml) For some reason, some etcd node answer to :2379/metrics on the intance IP (eth0), some others on the EIP|ENI address (eth1). See issue https://github.com/kubernetes-incubator/kube-aws/issues/923 It would be of course much better if we could hit the EPI/ENI all the time as they don't change even if the underlying EC2 intance goes down. If specifying the Instance IP (eth0) in the Prometheus Operator ServiceMonitor, and the EC2 intance goes down, one would have to update the ServiceMonitor. Another idea woud be to use the DNS entries of etcd, but those are not currently supported for EndPoints objects in Kubernetes.","title":"kube-aws and EIP or ENI inconsistency"},{"location":"prometheus/kube-prometheus/docs/monitoring-external-etcd/#step-2-verify","text":"Go to the Prometheus UI on :9090/config and check that you have an etcd job entry: - job_name: monitoring/etcd-k8s/0 scrape_interval: 30s scrape_timeout: 10s ... On the :9090/targets page: * You should see \"etcd\" with the UP state. If not, check the Error column for more information. * If no \"etcd\" targets are even shown on this page, prometheus isn't attempting to scrape it.","title":"Step 2: verify"},{"location":"prometheus/kube-prometheus/docs/monitoring-other-namespaces/","text":"Monitoring other Kubernetes Namespaces \u00b6 This guide will help you monitor applications in other Namespaces. By default the RBAC rules are only enabled for the Default and kube-system Namespace during Install. Setup \u00b6 You have to give the list of the Namespaces that you want to be able to monitor. This is done in the variable prometheus.roleSpecificNamespaces . You usually set this in your .jsonnet file when building the manifests. Example to create the needed Role and RoleBinding for the Namespace foo : local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces: [\"default\", \"kube-system\", \"foo\"], }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Monitoring other Kubernetes Namespaces"},{"location":"prometheus/kube-prometheus/docs/monitoring-other-namespaces/#monitoring-other-kubernetes-namespaces","text":"This guide will help you monitor applications in other Namespaces. By default the RBAC rules are only enabled for the Default and kube-system Namespace during Install.","title":"Monitoring other Kubernetes Namespaces"},{"location":"prometheus/kube-prometheus/docs/monitoring-other-namespaces/#setup","text":"You have to give the list of the Namespaces that you want to be able to monitor. This is done in the variable prometheus.roleSpecificNamespaces . You usually set this in your .jsonnet file when building the manifests. Example to create the needed Role and RoleBinding for the Namespace foo : local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + { _config+:: { namespace: 'monitoring', prometheus+:: { namespaces: [\"default\", \"kube-system\", \"foo\"], }, }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['alertmanager-' + name]: kp.alertmanager[name] for name in std.objectFields(kp.alertmanager) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) }","title":"Setup"},{"location":"prometheus/kube-prometheus/docs/weave-net-support/","text":"Setup Weave Net monitoring using kube-prometheus \u00b6 Weave Net is a resilient and simple to use CNI provider for Kubernetes. A well monitored and observed CNI provider helps in troubleshooting Kubernetes networking problems. Weave Net emits prometheus metrics for monitoring Weave Net. There are many ways to install Weave Net in your cluster. One of them is using kops . Following this document, you can setup Weave Net monitoring for your cluster using kube-prometheus. Contents \u00b6 Using kube-prometheus and kubectl you will be able install the following for monitoring Weave Net in your cluster: Service for Weave Net The service which the service monitor scrapes. ServiceMonitor for Weave Net Service monitor to scrape the Weave Net metrics and bring it to Prometheus. Prometheus Alerts for Weave Net This will setup all the important Weave Net metrics you should be alerted on. Grafana Dashboard for Weave Net This will setup the per Weave Net pod level monitoring for Weave Net. Grafana Dashboard for Weave Net(Cluster) This will setup the cluster level monitoring for Weave Net. Instructions \u00b6 You can monitor Weave Net using an example like below. Please note that some alert configurations are environment specific and may require modifications of alert thresholds . For example: The FastDP flows have never gone below 15000 for us. But if this value is say 20000 for you then you can use an example like below to update the alert. The alerts which may require threshold modifications are WeaveNetFastDPFlowsLow and WeaveNetIPAMUnreachable . local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-weave-net.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusAlerts+:: { groups: std.map( function(group) if group.name == 'weave-net' then group { rules: std.map( function(rule) if rule.alert == 'WeaveNetFastDPFlowsLow' then rule { expr: 'sum(weave_flows) < 20000', } else if rule.alert == 'WeaveNetIPAMUnreachable' then rule { expr: 'weave_ipam_unreachable_percentage > 25', } else rule , group.rules ), } else group, super.groups ), }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } After you have the required yamls file please run kubectl create -f prometheus-serviceWeaveNet.yaml kubectl create -f prometheus-serviceMonitorWeaveNet.yaml kubectl apply -f prometheus-rules.yaml kubectl apply -f grafana-dashboardDefinitions.yaml kubectl apply -f grafana-deployment.yaml","title":"Setup Weave Net monitoring using kube-prometheus"},{"location":"prometheus/kube-prometheus/docs/weave-net-support/#setup-weave-net-monitoring-using-kube-prometheus","text":"Weave Net is a resilient and simple to use CNI provider for Kubernetes. A well monitored and observed CNI provider helps in troubleshooting Kubernetes networking problems. Weave Net emits prometheus metrics for monitoring Weave Net. There are many ways to install Weave Net in your cluster. One of them is using kops . Following this document, you can setup Weave Net monitoring for your cluster using kube-prometheus.","title":"Setup Weave Net monitoring using kube-prometheus"},{"location":"prometheus/kube-prometheus/docs/weave-net-support/#contents","text":"Using kube-prometheus and kubectl you will be able install the following for monitoring Weave Net in your cluster: Service for Weave Net The service which the service monitor scrapes. ServiceMonitor for Weave Net Service monitor to scrape the Weave Net metrics and bring it to Prometheus. Prometheus Alerts for Weave Net This will setup all the important Weave Net metrics you should be alerted on. Grafana Dashboard for Weave Net This will setup the per Weave Net pod level monitoring for Weave Net. Grafana Dashboard for Weave Net(Cluster) This will setup the cluster level monitoring for Weave Net.","title":"Contents"},{"location":"prometheus/kube-prometheus/docs/weave-net-support/#instructions","text":"You can monitor Weave Net using an example like below. Please note that some alert configurations are environment specific and may require modifications of alert thresholds . For example: The FastDP flows have never gone below 15000 for us. But if this value is say 20000 for you then you can use an example like below to update the alert. The alerts which may require threshold modifications are WeaveNetFastDPFlowsLow and WeaveNetIPAMUnreachable . local kp = (import 'kube-prometheus/kube-prometheus.libsonnet') + (import 'kube-prometheus/kube-prometheus-weave-net.libsonnet') + { _config+:: { namespace: 'monitoring', }, prometheusAlerts+:: { groups: std.map( function(group) if group.name == 'weave-net' then group { rules: std.map( function(rule) if rule.alert == 'WeaveNetFastDPFlowsLow' then rule { expr: 'sum(weave_flows) < 20000', } else if rule.alert == 'WeaveNetIPAMUnreachable' then rule { expr: 'weave_ipam_unreachable_percentage > 25', } else rule , group.rules ), } else group, super.groups ), }, }; { ['00namespace-' + name]: kp.kubePrometheus[name] for name in std.objectFields(kp.kubePrometheus) } + { ['0prometheus-operator-' + name]: kp.prometheusOperator[name] for name in std.objectFields(kp.prometheusOperator) } + { ['node-exporter-' + name]: kp.nodeExporter[name] for name in std.objectFields(kp.nodeExporter) } + { ['kube-state-metrics-' + name]: kp.kubeStateMetrics[name] for name in std.objectFields(kp.kubeStateMetrics) } + { ['prometheus-' + name]: kp.prometheus[name] for name in std.objectFields(kp.prometheus) } + { ['prometheus-adapter-' + name]: kp.prometheusAdapter[name] for name in std.objectFields(kp.prometheusAdapter) } + { ['grafana-' + name]: kp.grafana[name] for name in std.objectFields(kp.grafana) } After you have the required yamls file please run kubectl create -f prometheus-serviceWeaveNet.yaml kubectl create -f prometheus-serviceMonitorWeaveNet.yaml kubectl apply -f prometheus-rules.yaml kubectl apply -f grafana-dashboardDefinitions.yaml kubectl apply -f grafana-deployment.yaml","title":"Instructions"},{"location":"prometheus/kube-prometheus/examples/continuous-delivery/argocd/","text":"ArgoCD Example \u00b6 This is the simplest, working example of an argocd app, the JSON object built is now an array of objects as that is the prefered format for ArgoCD. Requirements: ArgoCD 1.7+ Follow the vendor generation steps at the root of this repository and generate a vendored folder (referenced in application.yaml ).","title":"Index"},{"location":"prometheus/kube-prometheus/examples/continuous-delivery/argocd/#argocd-example","text":"This is the simplest, working example of an argocd app, the JSON object built is now an array of objects as that is the prefered format for ArgoCD. Requirements: ArgoCD 1.7+ Follow the vendor generation steps at the root of this repository and generate a vendored folder (referenced in application.yaml ).","title":"ArgoCD Example"}]}